
/**
 * S0110101000A202ServiceStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis2 version: 1.3  Built on : Aug 10, 2007 (04:45:47 LKT)
 */
        package com.primeton.tsl.ecif;

        

        /*
        *  S0110101000A202ServiceStub java implementation
        */

        
        public class S0110101000A202ServiceStub extends org.apache.axis2.client.Stub
        {
        protected org.apache.axis2.description.AxisOperation[] _operations;

        //hashmaps to keep the fault mapping
        private java.util.HashMap faultExceptionNameMap = new java.util.HashMap();
        private java.util.HashMap faultExceptionClassNameMap = new java.util.HashMap();
        private java.util.HashMap faultMessageMap = new java.util.HashMap();

    
    private void populateAxisService() throws org.apache.axis2.AxisFault {

     //creating the Service with a unique name
     _service = new org.apache.axis2.description.AxisService("S0110101000A202Service" + this.hashCode());

        //creating the operations
        org.apache.axis2.description.AxisOperation __operation;

        _operations = new org.apache.axis2.description.AxisOperation[1];
        
                   __operation = new org.apache.axis2.description.OutInAxisOperation();
                

            __operation.setName(new javax.xml.namespace.QName("http://www.adtec.com.cn", "S0110101000A202"));
	    _service.addOperation(__operation);
	    

	    
	    
            _operations[0]=__operation;
            
        
        }

    //populates the faults
    private void populateFaults(){
         


    }

    /**
      *Constructor that takes in a configContext
      */

    public S0110101000A202ServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
       java.lang.String targetEndpoint)
       throws org.apache.axis2.AxisFault {
         this(configurationContext,targetEndpoint,false);
   }


   /**
     * Constructor that takes in a configContext  and useseperate listner
     */
   public S0110101000A202ServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext,
        java.lang.String targetEndpoint, boolean useSeparateListener)
        throws org.apache.axis2.AxisFault {
         //To populate AxisService
         populateAxisService();
         populateFaults();

        _serviceClient = new org.apache.axis2.client.ServiceClient(configurationContext,_service);
        
	
        configurationContext = _serviceClient.getServiceContext().getConfigurationContext();

        _serviceClient.getOptions().setTo(new org.apache.axis2.addressing.EndpointReference(
                targetEndpoint));
        _serviceClient.getOptions().setUseSeparateListener(useSeparateListener);
        
    
    }

    /**
     * Default Constructor
     */
    public S0110101000A202ServiceStub(org.apache.axis2.context.ConfigurationContext configurationContext) throws org.apache.axis2.AxisFault {
        
                    this(configurationContext,"http://172.16.205.93:12103/WebService/CRMS_SVR/S0110101000A202" );
                
    }

    /**
     * Default Constructor
     */
    public S0110101000A202ServiceStub() throws org.apache.axis2.AxisFault {
        
                    this("http://172.16.205.93:12103/WebService/CRMS_SVR/S0110101000A202" );
                
    }

    /**
     * Constructor taking the target endpoint
     */
    public S0110101000A202ServiceStub(java.lang.String targetEndpoint) throws org.apache.axis2.AxisFault {
        this(null,targetEndpoint);
    }



        
                    /**
                     * Auto generated method signature
                     * @see com.primeton.tsl.ecif.S0110101000A202Service#S0110101000A202
                     * @param s0110101000A2020
                    
                     */

                    
                            public  com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response S0110101000A202(

                            com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202 s0110101000A2020)
                        

                    throws java.rmi.RemoteException
                    
                    {

              try{
               org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
              _operationClient.getOptions().setAction("http://172.16.205.93:12103/WebService/CRMS_SVR/S0110101000A202");
              _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              

              // create a message context
              org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

              

              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env = null;
                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    s0110101000A2020,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.adtec.com.cn",
                                                    "S0110101000A202")));
                                                
        //adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // set the message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message contxt to the operation client
        _operationClient.addMessageContext(_messageContext);

        //execute the operation client
        _operationClient.execute(true);

         
               org.apache.axis2.context.MessageContext _returnMessageContext = _operationClient.getMessageContext(
                                           org.apache.axis2.wsdl.WSDLConstants.MESSAGE_LABEL_IN_VALUE);
                org.apache.axiom.soap.SOAPEnvelope _returnEnv = _returnMessageContext.getEnvelope();
                
                
                                java.lang.Object object = fromOM(
                                             _returnEnv.getBody().getFirstElement() ,
                                             com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response.class,
                                              getEnvelopeNamespaces(_returnEnv));
                                _messageContext.getTransportOut().getSender().cleanup(_messageContext);
                               
                                        return (com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response)object;
                                   
         }catch(org.apache.axis2.AxisFault f){

            org.apache.axiom.om.OMElement faultElt = f.getDetail();
            if (faultElt!=null){
                if (faultExceptionNameMap.containsKey(faultElt.getQName())){
                    //make the fault by reflection
                    try{
                        java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
                        java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
                        java.lang.Exception ex=
                                (java.lang.Exception) exceptionClass.newInstance();
                        //message class
                        java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
                        java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
                        java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
                        java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
                                   new java.lang.Class[]{messageClass});
                        m.invoke(ex,new java.lang.Object[]{messageObject});
                        

                        throw new java.rmi.RemoteException(ex.getMessage(), ex);
                    }catch(java.lang.ClassCastException e){
                       // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.ClassNotFoundException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }catch (java.lang.NoSuchMethodException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    } catch (java.lang.reflect.InvocationTargetException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }  catch (java.lang.IllegalAccessException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }   catch (java.lang.InstantiationException e) {
                        // we cannot intantiate the class - throw the original Axis fault
                        throw f;
                    }
                }else{
                    throw f;
                }
            }else{
                throw f;
            }
        }
        }
            
                /**
                * Auto generated method signature for Asynchronous Invocations
                * @see com.primeton.tsl.ecif.S0110101000A202Service#startS0110101000A202
                    * @param s0110101000A2020
                
                */
                public  void startS0110101000A202(

                 com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202 s0110101000A2020,

                  final com.primeton.tsl.ecif.S0110101000A202ServiceCallbackHandler callback)

                throws java.rmi.RemoteException{

              org.apache.axis2.client.OperationClient _operationClient = _serviceClient.createClient(_operations[0].getName());
             _operationClient.getOptions().setAction("http://172.16.205.93:12103/WebService/CRMS_SVR/S0110101000A202");
             _operationClient.getOptions().setExceptionToBeThrownOnSOAPFault(true);

              
              
                  addPropertyToOperationClient(_operationClient,org.apache.axis2.description.WSDL2Constants.ATTR_WHTTP_QUERY_PARAMETER_SEPARATOR,"&");
              


              // create SOAP envelope with that payload
              org.apache.axiom.soap.SOAPEnvelope env=null;
              org.apache.axis2.context.MessageContext _messageContext = new org.apache.axis2.context.MessageContext();

                    
                                    //Style is Doc.
                                    
                                                    
                                                    env = toEnvelope(getFactory(_operationClient.getOptions().getSoapVersionURI()),
                                                    s0110101000A2020,
                                                    optimizeContent(new javax.xml.namespace.QName("http://www.adtec.com.cn",
                                                    "S0110101000A202")));
                                                
        // adding SOAP soap_headers
         _serviceClient.addHeadersToEnvelope(env);
        // create message context with that soap envelope
        _messageContext.setEnvelope(env);

        // add the message context to the operation client
        _operationClient.addMessageContext(_messageContext);


                    
                        _operationClient.setCallback(new org.apache.axis2.client.async.AxisCallback() {
                            public void onMessage(org.apache.axis2.context.MessageContext resultContext) {
                            try {
                                org.apache.axiom.soap.SOAPEnvelope resultEnv = resultContext.getEnvelope();
                                
                                        java.lang.Object object = fromOM(resultEnv.getBody().getFirstElement(),
                                                                         com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response.class,
                                                                         getEnvelopeNamespaces(resultEnv));
                                        callback.receiveResultS0110101000A202(
                                        (com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response)object);
                                        
                            } catch (org.apache.axis2.AxisFault e) {
                                callback.receiveErrorS0110101000A202(e);
                            }
                            }

                            public void onError(java.lang.Exception error) {
								if (error instanceof org.apache.axis2.AxisFault) {
									org.apache.axis2.AxisFault f = (org.apache.axis2.AxisFault) error;
									org.apache.axiom.om.OMElement faultElt = f.getDetail();
									if (faultElt!=null){
										if (faultExceptionNameMap.containsKey(faultElt.getQName())){
											//make the fault by reflection
											try{
													java.lang.String exceptionClassName = (java.lang.String)faultExceptionClassNameMap.get(faultElt.getQName());
													java.lang.Class exceptionClass = java.lang.Class.forName(exceptionClassName);
													java.lang.Exception ex=
														(java.lang.Exception) exceptionClass.newInstance();
													//message class
													java.lang.String messageClassName = (java.lang.String)faultMessageMap.get(faultElt.getQName());
														java.lang.Class messageClass = java.lang.Class.forName(messageClassName);
													java.lang.Object messageObject = fromOM(faultElt,messageClass,null);
													java.lang.reflect.Method m = exceptionClass.getMethod("setFaultMessage",
															new java.lang.Class[]{messageClass});
													m.invoke(ex,new java.lang.Object[]{messageObject});
													

										            callback.receiveErrorS0110101000A202(new java.rmi.RemoteException(ex.getMessage(), ex));
                                            } catch(java.lang.ClassCastException e){
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (java.lang.ClassNotFoundException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (java.lang.NoSuchMethodException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (java.lang.reflect.InvocationTargetException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (java.lang.IllegalAccessException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (java.lang.InstantiationException e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            } catch (org.apache.axis2.AxisFault e) {
                                                // we cannot intantiate the class - throw the original Axis fault
                                                callback.receiveErrorS0110101000A202(f);
                                            }
									    } else {
										    callback.receiveErrorS0110101000A202(f);
									    }
									} else {
									    callback.receiveErrorS0110101000A202(f);
									}
								} else {
								    callback.receiveErrorS0110101000A202(error);
								}
                            }

                            public void onFault(org.apache.axis2.context.MessageContext faultContext) {
                                org.apache.axis2.AxisFault fault = org.apache.axis2.util.Utils.getInboundFaultFromMessageContext(faultContext);
                                onError(fault);
                            }

                            public void onComplete() {
                                // Do nothing by default
                            }
                });
                        

          org.apache.axis2.util.CallbackReceiver _callbackReceiver = null;
        if ( _operations[0].getMessageReceiver()==null &&  _operationClient.getOptions().isUseSeparateListener()) {
           _callbackReceiver = new org.apache.axis2.util.CallbackReceiver();
          _operations[0].setMessageReceiver(
                    _callbackReceiver);
        }

           //execute the operation client
           _operationClient.execute(false);

                    }
                


       /**
        *  A utility method that copies the namepaces from the SOAPEnvelope
        */
       private java.util.Map getEnvelopeNamespaces(org.apache.axiom.soap.SOAPEnvelope env){
        java.util.Map returnMap = new java.util.HashMap();
        java.util.Iterator namespaceIterator = env.getAllDeclaredNamespaces();
        while (namespaceIterator.hasNext()) {
            org.apache.axiom.om.OMNamespace ns = (org.apache.axiom.om.OMNamespace) namespaceIterator.next();
            returnMap.put(ns.getPrefix(),ns.getNamespaceURI());
        }
       return returnMap;
    }

    
    
    private javax.xml.namespace.QName[] opNameArray = null;
    private boolean optimizeContent(javax.xml.namespace.QName opName) {
        

        if (opNameArray == null) {
            return false;
        }
        for (int i = 0; i < opNameArray.length; i++) {
            if (opName.equals(opNameArray[i])) {
                return true;   
            }
        }
        return false;
    }
     //http://172.16.205.93:12103/WebService/CRMS_SVR/S0110101000A202

        public static class FMT_SOAP_UTF8_ResponseHeader
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_SOAP_UTF8_ResponseHeader
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for VersionNo
                        */

                        
                            protected java.lang.String localVersionNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVersionNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVersionNo(){
                               return localVersionNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VersionNo
                               */
                               public void setVersionNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localVersionNoTracker = true;
                                       } else {
                                          localVersionNoTracker = false;
                                              
                                       }
                                   
                                            this.localVersionNo=param;
                                    

                               }
                            

                        /**
                        * field for ReqSysCode
                        */

                        
                            protected java.lang.String localReqSysCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSysCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSysCode(){
                               return localReqSysCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSysCode
                               */
                               public void setReqSysCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSysCodeTracker = true;
                                       } else {
                                          localReqSysCodeTracker = false;
                                              
                                       }
                                   
                                            this.localReqSysCode=param;
                                    

                               }
                            

                        /**
                        * field for ReqSecCode
                        */

                        
                            protected java.lang.String localReqSecCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSecCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSecCode(){
                               return localReqSecCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSecCode
                               */
                               public void setReqSecCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSecCodeTracker = true;
                                       } else {
                                          localReqSecCodeTracker = false;
                                              
                                       }
                                   
                                            this.localReqSecCode=param;
                                    

                               }
                            

                        /**
                        * field for TxType
                        */

                        
                            protected java.lang.String localTxType ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxTypeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxType(){
                               return localTxType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxType
                               */
                               public void setTxType(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxTypeTracker = true;
                                       } else {
                                          localTxTypeTracker = false;
                                              
                                       }
                                   
                                            this.localTxType=param;
                                    

                               }
                            

                        /**
                        * field for TxMode
                        */

                        
                            protected java.lang.String localTxMode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxModeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxMode(){
                               return localTxMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxMode
                               */
                               public void setTxMode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxModeTracker = true;
                                       } else {
                                          localTxModeTracker = false;
                                              
                                       }
                                   
                                            this.localTxMode=param;
                                    

                               }
                            

                        /**
                        * field for TxCode
                        */

                        
                            protected java.lang.String localTxCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxCode(){
                               return localTxCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxCode
                               */
                               public void setTxCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxCodeTracker = true;
                                       } else {
                                          localTxCodeTracker = false;
                                              
                                       }
                                   
                                            this.localTxCode=param;
                                    

                               }
                            

                        /**
                        * field for ReqDate
                        */

                        
                            protected java.lang.String localReqDate ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqDateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqDate(){
                               return localReqDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqDate
                               */
                               public void setReqDate(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqDateTracker = true;
                                       } else {
                                          localReqDateTracker = false;
                                              
                                       }
                                   
                                            this.localReqDate=param;
                                    

                               }
                            

                        /**
                        * field for ReqTime
                        */

                        
                            protected java.lang.String localReqTime ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqTimeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqTime(){
                               return localReqTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTime
                               */
                               public void setReqTime(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqTimeTracker = true;
                                       } else {
                                          localReqTimeTracker = false;
                                              
                                       }
                                   
                                            this.localReqTime=param;
                                    

                               }
                            

                        /**
                        * field for ReqSeqNo
                        */

                        
                            protected java.lang.String localReqSeqNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSeqNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSeqNo(){
                               return localReqSeqNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSeqNo
                               */
                               public void setReqSeqNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSeqNoTracker = true;
                                       } else {
                                          localReqSeqNoTracker = false;
                                              
                                       }
                                   
                                            this.localReqSeqNo=param;
                                    

                               }
                            

                        /**
                        * field for SvrDate
                        */

                        
                            protected java.lang.String localSvrDate ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSvrDateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSvrDate(){
                               return localSvrDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SvrDate
                               */
                               public void setSvrDate(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSvrDateTracker = true;
                                       } else {
                                          localSvrDateTracker = false;
                                              
                                       }
                                   
                                            this.localSvrDate=param;
                                    

                               }
                            

                        /**
                        * field for SvrTime
                        */

                        
                            protected java.lang.String localSvrTime ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSvrTimeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSvrTime(){
                               return localSvrTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SvrTime
                               */
                               public void setSvrTime(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSvrTimeTracker = true;
                                       } else {
                                          localSvrTimeTracker = false;
                                              
                                       }
                                   
                                            this.localSvrTime=param;
                                    

                               }
                            

                        /**
                        * field for SvrSeqNo
                        */

                        
                            protected java.lang.String localSvrSeqNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSvrSeqNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSvrSeqNo(){
                               return localSvrSeqNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SvrSeqNo
                               */
                               public void setSvrSeqNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSvrSeqNoTracker = true;
                                       } else {
                                          localSvrSeqNoTracker = false;
                                              
                                       }
                                   
                                            this.localSvrSeqNo=param;
                                    

                               }
                            

                        /**
                        * field for RecvFileName
                        */

                        
                            protected java.lang.String localRecvFileName ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRecvFileNameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRecvFileName(){
                               return localRecvFileName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RecvFileName
                               */
                               public void setRecvFileName(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRecvFileNameTracker = true;
                                       } else {
                                          localRecvFileNameTracker = false;
                                              
                                       }
                                   
                                            this.localRecvFileName=param;
                                    

                               }
                            

                        /**
                        * field for TotNum
                        */

                        
                            protected java.lang.String localTotNum ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTotNumTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTotNum(){
                               return localTotNum;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TotNum
                               */
                               public void setTotNum(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTotNumTracker = true;
                                       } else {
                                          localTotNumTracker = false;
                                              
                                       }
                                   
                                            this.localTotNum=param;
                                    

                               }
                            

                        /**
                        * field for CurrNum
                        */

                        
                            protected java.lang.String localCurrNum ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCurrNumTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCurrNum(){
                               return localCurrNum;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CurrNum
                               */
                               public void setCurrNum(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCurrNumTracker = true;
                                       } else {
                                          localCurrNumTracker = false;
                                              
                                       }
                                   
                                            this.localCurrNum=param;
                                    

                               }
                            

                        /**
                        * field for FileHMac
                        */

                        
                            protected java.lang.String localFileHMac ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFileHMacTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFileHMac(){
                               return localFileHMac;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FileHMac
                               */
                               public void setFileHMac(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFileHMacTracker = true;
                                       } else {
                                          localFileHMacTracker = false;
                                              
                                       }
                                   
                                            this.localFileHMac=param;
                                    

                               }
                            

                        /**
                        * field for HMac
                        */

                        
                            protected java.lang.String localHMac ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHMacTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHMac(){
                               return localHMac;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HMac
                               */
                               public void setHMac(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHMacTracker = true;
                                       } else {
                                          localHMacTracker = false;
                                              
                                       }
                                   
                                            this.localHMac=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_SOAP_UTF8_ResponseHeader.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localVersionNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"VersionNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"VersionNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("VersionNo");
                                    }
                                

                                          if (localVersionNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("VersionNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVersionNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSysCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSysCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSysCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSysCode");
                                    }
                                

                                          if (localReqSysCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSysCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSysCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSecCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSecCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSecCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSecCode");
                                    }
                                

                                          if (localReqSecCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSecCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSecCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxTypeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxType", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxType");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxType");
                                    }
                                

                                          if (localTxType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxModeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxMode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxMode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxMode");
                                    }
                                

                                          if (localTxMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxCode");
                                    }
                                

                                          if (localTxCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqDateTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqDate", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqDate");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqDate");
                                    }
                                

                                          if (localReqDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqTimeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqTime", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqTime");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqTime");
                                    }
                                

                                          if (localReqTime==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqTime cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSeqNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSeqNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSeqNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSeqNo");
                                    }
                                

                                          if (localReqSeqNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSeqNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSeqNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSvrDateTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SvrDate", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SvrDate");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SvrDate");
                                    }
                                

                                          if (localSvrDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SvrDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSvrDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSvrTimeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SvrTime", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SvrTime");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SvrTime");
                                    }
                                

                                          if (localSvrTime==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SvrTime cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSvrTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSvrSeqNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SvrSeqNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SvrSeqNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SvrSeqNo");
                                    }
                                

                                          if (localSvrSeqNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SvrSeqNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSvrSeqNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRecvFileNameTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"RecvFileName", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"RecvFileName");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("RecvFileName");
                                    }
                                

                                          if (localRecvFileName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RecvFileName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRecvFileName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTotNumTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TotNum", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TotNum");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TotNum");
                                    }
                                

                                          if (localTotNum==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TotNum cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTotNum);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCurrNumTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CurrNum", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CurrNum");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CurrNum");
                                    }
                                

                                          if (localCurrNum==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CurrNum cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCurrNum);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFileHMacTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FileHMac", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FileHMac");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FileHMac");
                                    }
                                

                                          if (localFileHMac==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FileHMac cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFileHMac);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHMacTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HMac", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HMac");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HMac");
                                    }
                                

                                          if (localHMac==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HMac cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHMac);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localVersionNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "VersionNo"));
                                 
                                        if (localVersionNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersionNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("VersionNo cannot be null!!");
                                        }
                                    } if (localReqSysCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSysCode"));
                                 
                                        if (localReqSysCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSysCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSysCode cannot be null!!");
                                        }
                                    } if (localReqSecCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSecCode"));
                                 
                                        if (localReqSecCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSecCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSecCode cannot be null!!");
                                        }
                                    } if (localTxTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxType"));
                                 
                                        if (localTxType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxType cannot be null!!");
                                        }
                                    } if (localTxModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxMode"));
                                 
                                        if (localTxMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxMode cannot be null!!");
                                        }
                                    } if (localTxCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxCode"));
                                 
                                        if (localTxCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxCode cannot be null!!");
                                        }
                                    } if (localReqDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqDate"));
                                 
                                        if (localReqDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqDate cannot be null!!");
                                        }
                                    } if (localReqTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqTime"));
                                 
                                        if (localReqTime != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqTime));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqTime cannot be null!!");
                                        }
                                    } if (localReqSeqNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSeqNo"));
                                 
                                        if (localReqSeqNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSeqNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSeqNo cannot be null!!");
                                        }
                                    } if (localSvrDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SvrDate"));
                                 
                                        if (localSvrDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSvrDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SvrDate cannot be null!!");
                                        }
                                    } if (localSvrTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SvrTime"));
                                 
                                        if (localSvrTime != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSvrTime));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SvrTime cannot be null!!");
                                        }
                                    } if (localSvrSeqNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SvrSeqNo"));
                                 
                                        if (localSvrSeqNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSvrSeqNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SvrSeqNo cannot be null!!");
                                        }
                                    } if (localRecvFileNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "RecvFileName"));
                                 
                                        if (localRecvFileName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRecvFileName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RecvFileName cannot be null!!");
                                        }
                                    } if (localTotNumTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TotNum"));
                                 
                                        if (localTotNum != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTotNum));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TotNum cannot be null!!");
                                        }
                                    } if (localCurrNumTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CurrNum"));
                                 
                                        if (localCurrNum != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCurrNum));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CurrNum cannot be null!!");
                                        }
                                    } if (localFileHMacTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FileHMac"));
                                 
                                        if (localFileHMac != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFileHMac));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FileHMac cannot be null!!");
                                        }
                                    } if (localHMacTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HMac"));
                                 
                                        if (localHMac != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHMac));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HMac cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_SOAP_UTF8_ResponseHeader parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_SOAP_UTF8_ResponseHeader object =
                new FMT_SOAP_UTF8_ResponseHeader();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_SOAP_UTF8_ResponseHeader".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_SOAP_UTF8_ResponseHeader)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","VersionNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVersionNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSysCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSysCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSecCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSecCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxType").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxMode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqDate").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqTime").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSeqNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSeqNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SvrDate").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSvrDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SvrTime").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSvrTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SvrSeqNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSvrSeqNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","RecvFileName").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRecvFileName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TotNum").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTotNum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CurrNum").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCurrNum(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FileHMac").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFileHMac(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HMac").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHMac(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class FMT_SOAP_UTF8_ResTranHeader
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_SOAP_UTF8_ResTranHeader
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for HSecFlag
                        */

                        
                            protected java.lang.String localHSecFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSecFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSecFlag(){
                               return localHSecFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSecFlag
                               */
                               public void setHSecFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSecFlagTracker = true;
                                       } else {
                                          localHSecFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHSecFlag=param;
                                    

                               }
                            

                        /**
                        * field for HCombFlag
                        */

                        
                            protected java.lang.String localHCombFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHCombFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHCombFlag(){
                               return localHCombFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HCombFlag
                               */
                               public void setHCombFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHCombFlagTracker = true;
                                       } else {
                                          localHCombFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHCombFlag=param;
                                    

                               }
                            

                        /**
                        * field for HSvcInfo
                        */

                        
                            protected java.lang.String localHSvcInfo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSvcInfoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSvcInfo(){
                               return localHSvcInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSvcInfo
                               */
                               public void setHSvcInfo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSvcInfoTracker = true;
                                       } else {
                                          localHSvcInfoTracker = false;
                                              
                                       }
                                   
                                            this.localHSvcInfo=param;
                                    

                               }
                            

                        /**
                        * field for HSecInfoVerNo
                        */

                        
                            protected java.lang.String localHSecInfoVerNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSecInfoVerNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSecInfoVerNo(){
                               return localHSecInfoVerNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSecInfoVerNo
                               */
                               public void setHSecInfoVerNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSecInfoVerNoTracker = true;
                                       } else {
                                          localHSecInfoVerNoTracker = false;
                                              
                                       }
                                   
                                            this.localHSecInfoVerNo=param;
                                    

                               }
                            

                        /**
                        * field for HMsgRefNo
                        */

                        
                            protected java.lang.String localHMsgRefNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHMsgRefNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHMsgRefNo(){
                               return localHMsgRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HMsgRefNo
                               */
                               public void setHMsgRefNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHMsgRefNoTracker = true;
                                       } else {
                                          localHMsgRefNoTracker = false;
                                              
                                       }
                                   
                                            this.localHMsgRefNo=param;
                                    

                               }
                            

                        /**
                        * field for HIdentFlag
                        */

                        
                            protected java.lang.String localHIdentFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHIdentFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHIdentFlag(){
                               return localHIdentFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HIdentFlag
                               */
                               public void setHIdentFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHIdentFlagTracker = true;
                                       } else {
                                          localHIdentFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHIdentFlag=param;
                                    

                               }
                            

                        /**
                        * field for HSuperFlag
                        */

                        
                            protected java.lang.String localHSuperFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSuperFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSuperFlag(){
                               return localHSuperFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSuperFlag
                               */
                               public void setHSuperFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSuperFlagTracker = true;
                                       } else {
                                          localHSuperFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHSuperFlag=param;
                                    

                               }
                            

                        /**
                        * field for HChkFlag
                        */

                        
                            protected java.lang.String localHChkFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHChkFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHChkFlag(){
                               return localHChkFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HChkFlag
                               */
                               public void setHChkFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHChkFlagTracker = true;
                                       } else {
                                          localHChkFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHChkFlag=param;
                                    

                               }
                            

                        /**
                        * field for HChkTxnCd
                        */

                        
                            protected java.lang.String localHChkTxnCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHChkTxnCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHChkTxnCd(){
                               return localHChkTxnCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HChkTxnCd
                               */
                               public void setHChkTxnCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHChkTxnCdTracker = true;
                                       } else {
                                          localHChkTxnCdTracker = false;
                                              
                                       }
                                   
                                            this.localHChkTxnCd=param;
                                    

                               }
                            

                        /**
                        * field for HVerfCd
                        */

                        
                            protected java.lang.String localHVerfCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHVerfCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHVerfCd(){
                               return localHVerfCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HVerfCd
                               */
                               public void setHVerfCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHVerfCdTracker = true;
                                       } else {
                                          localHVerfCdTracker = false;
                                              
                                       }
                                   
                                            this.localHVerfCd=param;
                                    

                               }
                            

                        /**
                        * field for HTranRes
                        */

                        
                            protected java.lang.String localHTranRes ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHTranResTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHTranRes(){
                               return localHTranRes;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HTranRes
                               */
                               public void setHTranRes(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHTranResTracker = true;
                                       } else {
                                          localHTranResTracker = false;
                                              
                                       }
                                   
                                            this.localHTranRes=param;
                                    

                               }
                            

                        /**
                        * field for HRefTxnCd
                        */

                        
                            protected java.lang.String localHRefTxnCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRefTxnCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRefTxnCd(){
                               return localHRefTxnCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRefTxnCd
                               */
                               public void setHRefTxnCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRefTxnCdTracker = true;
                                       } else {
                                          localHRefTxnCdTracker = false;
                                              
                                       }
                                   
                                            this.localHRefTxnCd=param;
                                    

                               }
                            

                        /**
                        * field for HServerDt
                        */

                        
                            protected java.lang.String localHServerDt ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHServerDtTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHServerDt(){
                               return localHServerDt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HServerDt
                               */
                               public void setHServerDt(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHServerDtTracker = true;
                                       } else {
                                          localHServerDtTracker = false;
                                              
                                       }
                                   
                                            this.localHServerDt=param;
                                    

                               }
                            

                        /**
                        * field for HServerTm
                        */

                        
                            protected java.lang.String localHServerTm ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHServerTmTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHServerTm(){
                               return localHServerTm;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HServerTm
                               */
                               public void setHServerTm(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHServerTmTracker = true;
                                       } else {
                                          localHServerTmTracker = false;
                                              
                                       }
                                   
                                            this.localHServerTm=param;
                                    

                               }
                            

                        /**
                        * field for HServerSeq
                        */

                        
                            protected java.lang.String localHServerSeq ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHServerSeqTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHServerSeq(){
                               return localHServerSeq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HServerSeq
                               */
                               public void setHServerSeq(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHServerSeqTracker = true;
                                       } else {
                                          localHServerSeqTracker = false;
                                              
                                       }
                                   
                                            this.localHServerSeq=param;
                                    

                               }
                            

                        /**
                        * field for HAcountDt
                        */

                        
                            protected java.lang.String localHAcountDt ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAcountDtTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAcountDt(){
                               return localHAcountDt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAcountDt
                               */
                               public void setHAcountDt(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAcountDtTracker = true;
                                       } else {
                                          localHAcountDtTracker = false;
                                              
                                       }
                                   
                                            this.localHAcountDt=param;
                                    

                               }
                            

                        /**
                        * field for HRefSeq
                        */

                        
                            protected java.lang.String localHRefSeq ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRefSeqTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRefSeq(){
                               return localHRefSeq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRefSeq
                               */
                               public void setHRefSeq(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRefSeqTracker = true;
                                       } else {
                                          localHRefSeqTracker = false;
                                              
                                       }
                                   
                                            this.localHRefSeq=param;
                                    

                               }
                            

                        /**
                        * field for HRefDt
                        */

                        
                            protected java.lang.String localHRefDt ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRefDtTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRefDt(){
                               return localHRefDt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRefDt
                               */
                               public void setHRefDt(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRefDtTracker = true;
                                       } else {
                                          localHRefDtTracker = false;
                                              
                                       }
                                   
                                            this.localHRefDt=param;
                                    

                               }
                            

                        /**
                        * field for HNextStep
                        */

                        
                            protected java.lang.String localHNextStep ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHNextStepTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHNextStep(){
                               return localHNextStep;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HNextStep
                               */
                               public void setHNextStep(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHNextStepTracker = true;
                                       } else {
                                          localHNextStepTracker = false;
                                              
                                       }
                                   
                                            this.localHNextStep=param;
                                    

                               }
                            

                        /**
                        * field for HVchChk
                        */

                        
                            protected java.lang.String localHVchChk ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHVchChkTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHVchChk(){
                               return localHVchChk;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HVchChk
                               */
                               public void setHVchChk(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHVchChkTracker = true;
                                       } else {
                                          localHVchChkTracker = false;
                                              
                                       }
                                   
                                            this.localHVchChk=param;
                                    

                               }
                            

                        /**
                        * field for HRetResInfo
                        */

                        
                            protected java.lang.String localHRetResInfo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRetResInfoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRetResInfo(){
                               return localHRetResInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRetResInfo
                               */
                               public void setHRetResInfo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRetResInfoTracker = true;
                                       } else {
                                          localHRetResInfoTracker = false;
                                              
                                       }
                                   
                                            this.localHRetResInfo=param;
                                    

                               }
                            

                        /**
                        * field for HErrTranNo
                        */

                        
                            protected java.lang.String localHErrTranNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHErrTranNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHErrTranNo(){
                               return localHErrTranNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HErrTranNo
                               */
                               public void setHErrTranNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHErrTranNoTracker = true;
                                       } else {
                                          localHErrTranNoTracker = false;
                                              
                                       }
                                   
                                            this.localHErrTranNo=param;
                                    

                               }
                            

                        /**
                        * field for HAssiInfo
                        */

                        
                            protected java.lang.String localHAssiInfo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAssiInfoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAssiInfo(){
                               return localHAssiInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAssiInfo
                               */
                               public void setHAssiInfo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAssiInfoTracker = true;
                                       } else {
                                          localHAssiInfoTracker = false;
                                              
                                       }
                                   
                                            this.localHAssiInfo=param;
                                    

                               }
                            

                        /**
                        * field for HRetCode
                        */

                        
                            protected java.lang.String localHRetCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRetCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRetCode(){
                               return localHRetCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRetCode
                               */
                               public void setHRetCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRetCodeTracker = true;
                                       } else {
                                          localHRetCodeTracker = false;
                                              
                                       }
                                   
                                            this.localHRetCode=param;
                                    

                               }
                            

                        /**
                        * field for HRetNo
                        */

                        
                            protected java.lang.String localHRetNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRetNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRetNo(){
                               return localHRetNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRetNo
                               */
                               public void setHRetNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRetNoTracker = true;
                                       } else {
                                          localHRetNoTracker = false;
                                              
                                       }
                                   
                                            this.localHRetNo=param;
                                    

                               }
                            

                        /**
                        * field for HRetMsg
                        */

                        
                            protected java.lang.String localHRetMsg ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRetMsgTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRetMsg(){
                               return localHRetMsg;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRetMsg
                               */
                               public void setHRetMsg(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRetMsgTracker = true;
                                       } else {
                                          localHRetMsgTracker = false;
                                              
                                       }
                                   
                                            this.localHRetMsg=param;
                                    

                               }
                            

                        /**
                        * field for HWarnMsg
                        */

                        
                            protected java.lang.String localHWarnMsg ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHWarnMsgTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHWarnMsg(){
                               return localHWarnMsg;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HWarnMsg
                               */
                               public void setHWarnMsg(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHWarnMsgTracker = true;
                                       } else {
                                          localHWarnMsgTracker = false;
                                              
                                       }
                                   
                                            this.localHWarnMsg=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_SOAP_UTF8_ResTranHeader.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localHSecFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSecFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSecFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSecFlag");
                                    }
                                

                                          if (localHSecFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSecFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSecFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHCombFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HCombFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HCombFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HCombFlag");
                                    }
                                

                                          if (localHCombFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HCombFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHCombFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSvcInfoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSvcInfo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSvcInfo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSvcInfo");
                                    }
                                

                                          if (localHSvcInfo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSvcInfo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSvcInfo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSecInfoVerNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSecInfoVerNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSecInfoVerNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSecInfoVerNo");
                                    }
                                

                                          if (localHSecInfoVerNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSecInfoVerNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSecInfoVerNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHMsgRefNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HMsgRefNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HMsgRefNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HMsgRefNo");
                                    }
                                

                                          if (localHMsgRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HMsgRefNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHMsgRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHIdentFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HIdentFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HIdentFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HIdentFlag");
                                    }
                                

                                          if (localHIdentFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HIdentFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHIdentFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSuperFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSuperFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSuperFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSuperFlag");
                                    }
                                

                                          if (localHSuperFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSuperFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSuperFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHChkFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HChkFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HChkFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HChkFlag");
                                    }
                                

                                          if (localHChkFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HChkFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHChkFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHChkTxnCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HChkTxnCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HChkTxnCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HChkTxnCd");
                                    }
                                

                                          if (localHChkTxnCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HChkTxnCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHChkTxnCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHVerfCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HVerfCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HVerfCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HVerfCd");
                                    }
                                

                                          if (localHVerfCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HVerfCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHVerfCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHTranResTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HTranRes", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HTranRes");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HTranRes");
                                    }
                                

                                          if (localHTranRes==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HTranRes cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHTranRes);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRefTxnCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRefTxnCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRefTxnCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRefTxnCd");
                                    }
                                

                                          if (localHRefTxnCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRefTxnCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRefTxnCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHServerDtTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HServerDt", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HServerDt");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HServerDt");
                                    }
                                

                                          if (localHServerDt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HServerDt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHServerDt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHServerTmTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HServerTm", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HServerTm");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HServerTm");
                                    }
                                

                                          if (localHServerTm==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HServerTm cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHServerTm);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHServerSeqTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HServerSeq", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HServerSeq");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HServerSeq");
                                    }
                                

                                          if (localHServerSeq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HServerSeq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHServerSeq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAcountDtTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAcountDt", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAcountDt");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAcountDt");
                                    }
                                

                                          if (localHAcountDt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAcountDt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAcountDt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRefSeqTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRefSeq", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRefSeq");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRefSeq");
                                    }
                                

                                          if (localHRefSeq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRefSeq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRefSeq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRefDtTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRefDt", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRefDt");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRefDt");
                                    }
                                

                                          if (localHRefDt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRefDt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRefDt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHNextStepTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HNextStep", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HNextStep");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HNextStep");
                                    }
                                

                                          if (localHNextStep==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HNextStep cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHNextStep);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHVchChkTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HVchChk", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HVchChk");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HVchChk");
                                    }
                                

                                          if (localHVchChk==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HVchChk cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHVchChk);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRetResInfoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRetResInfo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRetResInfo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRetResInfo");
                                    }
                                

                                          if (localHRetResInfo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRetResInfo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRetResInfo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHErrTranNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HErrTranNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HErrTranNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HErrTranNo");
                                    }
                                

                                          if (localHErrTranNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HErrTranNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHErrTranNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAssiInfoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAssiInfo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAssiInfo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAssiInfo");
                                    }
                                

                                          if (localHAssiInfo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAssiInfo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAssiInfo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRetCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRetCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRetCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRetCode");
                                    }
                                

                                          if (localHRetCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRetCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRetCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRetNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRetNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRetNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRetNo");
                                    }
                                

                                          if (localHRetNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRetNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRetNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRetMsgTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRetMsg", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRetMsg");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRetMsg");
                                    }
                                

                                          if (localHRetMsg==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRetMsg cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRetMsg);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHWarnMsgTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HWarnMsg", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HWarnMsg");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HWarnMsg");
                                    }
                                

                                          if (localHWarnMsg==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HWarnMsg cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHWarnMsg);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localHSecFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSecFlag"));
                                 
                                        if (localHSecFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSecFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSecFlag cannot be null!!");
                                        }
                                    } if (localHCombFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HCombFlag"));
                                 
                                        if (localHCombFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHCombFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HCombFlag cannot be null!!");
                                        }
                                    } if (localHSvcInfoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSvcInfo"));
                                 
                                        if (localHSvcInfo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSvcInfo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSvcInfo cannot be null!!");
                                        }
                                    } if (localHSecInfoVerNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSecInfoVerNo"));
                                 
                                        if (localHSecInfoVerNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSecInfoVerNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSecInfoVerNo cannot be null!!");
                                        }
                                    } if (localHMsgRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HMsgRefNo"));
                                 
                                        if (localHMsgRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHMsgRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HMsgRefNo cannot be null!!");
                                        }
                                    } if (localHIdentFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HIdentFlag"));
                                 
                                        if (localHIdentFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHIdentFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HIdentFlag cannot be null!!");
                                        }
                                    } if (localHSuperFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSuperFlag"));
                                 
                                        if (localHSuperFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSuperFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSuperFlag cannot be null!!");
                                        }
                                    } if (localHChkFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HChkFlag"));
                                 
                                        if (localHChkFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHChkFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HChkFlag cannot be null!!");
                                        }
                                    } if (localHChkTxnCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HChkTxnCd"));
                                 
                                        if (localHChkTxnCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHChkTxnCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HChkTxnCd cannot be null!!");
                                        }
                                    } if (localHVerfCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HVerfCd"));
                                 
                                        if (localHVerfCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHVerfCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HVerfCd cannot be null!!");
                                        }
                                    } if (localHTranResTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HTranRes"));
                                 
                                        if (localHTranRes != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHTranRes));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HTranRes cannot be null!!");
                                        }
                                    } if (localHRefTxnCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRefTxnCd"));
                                 
                                        if (localHRefTxnCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRefTxnCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRefTxnCd cannot be null!!");
                                        }
                                    } if (localHServerDtTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HServerDt"));
                                 
                                        if (localHServerDt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHServerDt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HServerDt cannot be null!!");
                                        }
                                    } if (localHServerTmTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HServerTm"));
                                 
                                        if (localHServerTm != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHServerTm));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HServerTm cannot be null!!");
                                        }
                                    } if (localHServerSeqTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HServerSeq"));
                                 
                                        if (localHServerSeq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHServerSeq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HServerSeq cannot be null!!");
                                        }
                                    } if (localHAcountDtTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAcountDt"));
                                 
                                        if (localHAcountDt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAcountDt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAcountDt cannot be null!!");
                                        }
                                    } if (localHRefSeqTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRefSeq"));
                                 
                                        if (localHRefSeq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRefSeq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRefSeq cannot be null!!");
                                        }
                                    } if (localHRefDtTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRefDt"));
                                 
                                        if (localHRefDt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRefDt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRefDt cannot be null!!");
                                        }
                                    } if (localHNextStepTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HNextStep"));
                                 
                                        if (localHNextStep != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHNextStep));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HNextStep cannot be null!!");
                                        }
                                    } if (localHVchChkTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HVchChk"));
                                 
                                        if (localHVchChk != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHVchChk));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HVchChk cannot be null!!");
                                        }
                                    } if (localHRetResInfoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRetResInfo"));
                                 
                                        if (localHRetResInfo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRetResInfo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRetResInfo cannot be null!!");
                                        }
                                    } if (localHErrTranNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HErrTranNo"));
                                 
                                        if (localHErrTranNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHErrTranNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HErrTranNo cannot be null!!");
                                        }
                                    } if (localHAssiInfoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAssiInfo"));
                                 
                                        if (localHAssiInfo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAssiInfo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAssiInfo cannot be null!!");
                                        }
                                    } if (localHRetCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRetCode"));
                                 
                                        if (localHRetCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRetCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRetCode cannot be null!!");
                                        }
                                    } if (localHRetNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRetNo"));
                                 
                                        if (localHRetNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRetNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRetNo cannot be null!!");
                                        }
                                    } if (localHRetMsgTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRetMsg"));
                                 
                                        if (localHRetMsg != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRetMsg));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRetMsg cannot be null!!");
                                        }
                                    } if (localHWarnMsgTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HWarnMsg"));
                                 
                                        if (localHWarnMsg != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHWarnMsg));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HWarnMsg cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_SOAP_UTF8_ResTranHeader parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_SOAP_UTF8_ResTranHeader object =
                new FMT_SOAP_UTF8_ResTranHeader();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_SOAP_UTF8_ResTranHeader".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_SOAP_UTF8_ResTranHeader)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSecFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSecFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HCombFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHCombFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSvcInfo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSvcInfo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSecInfoVerNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSecInfoVerNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HMsgRefNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHMsgRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HIdentFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHIdentFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSuperFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSuperFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HChkFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHChkFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HChkTxnCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHChkTxnCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HVerfCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHVerfCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HTranRes").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHTranRes(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRefTxnCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRefTxnCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HServerDt").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHServerDt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HServerTm").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHServerTm(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HServerSeq").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHServerSeq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAcountDt").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAcountDt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRefSeq").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRefSeq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRefDt").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRefDt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HNextStep").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHNextStep(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HVchChk").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHVchChk(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRetResInfo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRetResInfo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HErrTranNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHErrTranNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAssiInfo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAssiInfo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRetCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRetCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRetNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRetNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRetMsg").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRetMsg(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HWarnMsg").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHWarnMsg(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class FMT_CRMS_SVR_S0110101000A202_IN
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_CRMS_SVR_S0110101000A202_IN
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for RESOLVE_TYPE
                        */

                        
                            protected java.lang.String localRESOLVE_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRESOLVE_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRESOLVE_TYPE(){
                               return localRESOLVE_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RESOLVE_TYPE
                               */
                               public void setRESOLVE_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRESOLVE_TYPETracker = true;
                                       } else {
                                          localRESOLVE_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localRESOLVE_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for ECIF_CUST_NO
                        */

                        
                            protected java.lang.String localECIF_CUST_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localECIF_CUST_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getECIF_CUST_NO(){
                               return localECIF_CUST_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ECIF_CUST_NO
                               */
                               public void setECIF_CUST_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localECIF_CUST_NOTracker = true;
                                       } else {
                                          localECIF_CUST_NOTracker = false;
                                              
                                       }
                                   
                                            this.localECIF_CUST_NO=param;
                                    

                               }
                            

                        /**
                        * field for CERT_TYPE
                        */

                        
                            protected java.lang.String localCERT_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_TYPE(){
                               return localCERT_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_TYPE
                               */
                               public void setCERT_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_TYPETracker = true;
                                       } else {
                                          localCERT_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for CERT_NO
                        */

                        
                            protected java.lang.String localCERT_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_NO(){
                               return localCERT_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_NO
                               */
                               public void setCERT_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_NOTracker = true;
                                       } else {
                                          localCERT_NOTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_NO=param;
                                    

                               }
                            

                        /**
                        * field for EXT_ARR_NO
                        */

                        
                            protected java.lang.String localEXT_ARR_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEXT_ARR_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEXT_ARR_NO(){
                               return localEXT_ARR_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EXT_ARR_NO
                               */
                               public void setEXT_ARR_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEXT_ARR_NOTracker = true;
                                       } else {
                                          localEXT_ARR_NOTracker = false;
                                              
                                       }
                                   
                                            this.localEXT_ARR_NO=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_CRMS_SVR_S0110101000A202_IN.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localRESOLVE_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"RESOLVE_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"RESOLVE_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("RESOLVE_TYPE");
                                    }
                                

                                          if (localRESOLVE_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RESOLVE_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRESOLVE_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localECIF_CUST_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ECIF_CUST_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ECIF_CUST_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ECIF_CUST_NO");
                                    }
                                

                                          if (localECIF_CUST_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ECIF_CUST_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localECIF_CUST_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_TYPE");
                                    }
                                

                                          if (localCERT_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_NO");
                                    }
                                

                                          if (localCERT_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEXT_ARR_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"EXT_ARR_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"EXT_ARR_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("EXT_ARR_NO");
                                    }
                                

                                          if (localEXT_ARR_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EXT_ARR_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEXT_ARR_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localRESOLVE_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "RESOLVE_TYPE"));
                                 
                                        if (localRESOLVE_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRESOLVE_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RESOLVE_TYPE cannot be null!!");
                                        }
                                    } if (localECIF_CUST_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ECIF_CUST_NO"));
                                 
                                        if (localECIF_CUST_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localECIF_CUST_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ECIF_CUST_NO cannot be null!!");
                                        }
                                    } if (localCERT_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_TYPE"));
                                 
                                        if (localCERT_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_TYPE cannot be null!!");
                                        }
                                    } if (localCERT_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_NO"));
                                 
                                        if (localCERT_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_NO cannot be null!!");
                                        }
                                    } if (localEXT_ARR_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "EXT_ARR_NO"));
                                 
                                        if (localEXT_ARR_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEXT_ARR_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EXT_ARR_NO cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_CRMS_SVR_S0110101000A202_IN parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_CRMS_SVR_S0110101000A202_IN object =
                new FMT_CRMS_SVR_S0110101000A202_IN();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_CRMS_SVR_S0110101000A202_IN".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_CRMS_SVR_S0110101000A202_IN)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","RESOLVE_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRESOLVE_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ECIF_CUST_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setECIF_CUST_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","EXT_ARR_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEXT_ARR_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class FMT_CRMS_SVR_S0110101000A202_OUT
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_CRMS_SVR_S0110101000A202_OUT
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for ECIF_CUST_NO
                        */

                        
                            protected java.lang.String localECIF_CUST_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localECIF_CUST_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getECIF_CUST_NO(){
                               return localECIF_CUST_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ECIF_CUST_NO
                               */
                               public void setECIF_CUST_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localECIF_CUST_NOTracker = true;
                                       } else {
                                          localECIF_CUST_NOTracker = false;
                                              
                                       }
                                   
                                            this.localECIF_CUST_NO=param;
                                    

                               }
                            

                        /**
                        * field for CUST_TYPE
                        */

                        
                            protected java.lang.String localCUST_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_TYPE(){
                               return localCUST_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_TYPE
                               */
                               public void setCUST_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_TYPETracker = true;
                                       } else {
                                          localCUST_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for PARTY_NAME
                        */

                        
                            protected java.lang.String localPARTY_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPARTY_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPARTY_NAME(){
                               return localPARTY_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PARTY_NAME
                               */
                               public void setPARTY_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPARTY_NAMETracker = true;
                                       } else {
                                          localPARTY_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localPARTY_NAME=param;
                                    

                               }
                            

                        /**
                        * field for CERT_TYPE
                        */

                        
                            protected java.lang.String localCERT_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_TYPE(){
                               return localCERT_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_TYPE
                               */
                               public void setCERT_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_TYPETracker = true;
                                       } else {
                                          localCERT_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for CERT_NO
                        */

                        
                            protected java.lang.String localCERT_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_NO(){
                               return localCERT_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_NO
                               */
                               public void setCERT_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_NOTracker = true;
                                       } else {
                                          localCERT_NOTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_NO=param;
                                    

                               }
                            

                        /**
                        * field for CERT_ORG_NAT
                        */

                        
                            protected java.lang.String localCERT_ORG_NAT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_ORG_NATTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_ORG_NAT(){
                               return localCERT_ORG_NAT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_ORG_NAT
                               */
                               public void setCERT_ORG_NAT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_ORG_NATTracker = true;
                                       } else {
                                          localCERT_ORG_NATTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_ORG_NAT=param;
                                    

                               }
                            

                        /**
                        * field for CERT_ORG_AREA
                        */

                        
                            protected java.lang.String localCERT_ORG_AREA ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_ORG_AREATracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_ORG_AREA(){
                               return localCERT_ORG_AREA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_ORG_AREA
                               */
                               public void setCERT_ORG_AREA(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_ORG_AREATracker = true;
                                       } else {
                                          localCERT_ORG_AREATracker = false;
                                              
                                       }
                                   
                                            this.localCERT_ORG_AREA=param;
                                    

                               }
                            

                        /**
                        * field for CERT_ORG_NAME
                        */

                        
                            protected java.lang.String localCERT_ORG_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_ORG_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_ORG_NAME(){
                               return localCERT_ORG_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_ORG_NAME
                               */
                               public void setCERT_ORG_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_ORG_NAMETracker = true;
                                       } else {
                                          localCERT_ORG_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_ORG_NAME=param;
                                    

                               }
                            

                        /**
                        * field for CERT_ISSUE_DATE
                        */

                        
                            protected java.lang.String localCERT_ISSUE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_ISSUE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_ISSUE_DATE(){
                               return localCERT_ISSUE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_ISSUE_DATE
                               */
                               public void setCERT_ISSUE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_ISSUE_DATETracker = true;
                                       } else {
                                          localCERT_ISSUE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_ISSUE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for CERT_DUE_DATE
                        */

                        
                            protected java.lang.String localCERT_DUE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_DUE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_DUE_DATE(){
                               return localCERT_DUE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_DUE_DATE
                               */
                               public void setCERT_DUE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_DUE_DATETracker = true;
                                       } else {
                                          localCERT_DUE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_DUE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for CERT_TYPE_FLAG
                        */

                        
                            protected java.lang.String localCERT_TYPE_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_TYPE_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_TYPE_FLAG(){
                               return localCERT_TYPE_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_TYPE_FLAG
                               */
                               public void setCERT_TYPE_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_TYPE_FLAGTracker = true;
                                       } else {
                                          localCERT_TYPE_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_TYPE_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for CERT_SUB_TYPE
                        */

                        
                            protected java.lang.String localCERT_SUB_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_SUB_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_SUB_TYPE(){
                               return localCERT_SUB_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_SUB_TYPE
                               */
                               public void setCERT_SUB_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_SUB_TYPETracker = true;
                                       } else {
                                          localCERT_SUB_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localCERT_SUB_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for CERT_IMG_ADDR
                        */

                        
                            protected java.lang.String localCERT_IMG_ADDR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_IMG_ADDRTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_IMG_ADDR(){
                               return localCERT_IMG_ADDR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_IMG_ADDR
                               */
                               public void setCERT_IMG_ADDR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_IMG_ADDRTracker = true;
                                       } else {
                                          localCERT_IMG_ADDRTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_IMG_ADDR=param;
                                    

                               }
                            

                        /**
                        * field for CERT_DESC
                        */

                        
                            protected java.lang.String localCERT_DESC ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCERT_DESCTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCERT_DESC(){
                               return localCERT_DESC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CERT_DESC
                               */
                               public void setCERT_DESC(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCERT_DESCTracker = true;
                                       } else {
                                          localCERT_DESCTracker = false;
                                              
                                       }
                                   
                                            this.localCERT_DESC=param;
                                    

                               }
                            

                        /**
                        * field for CUST_SHTNAME
                        */

                        
                            protected java.lang.String localCUST_SHTNAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_SHTNAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_SHTNAME(){
                               return localCUST_SHTNAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_SHTNAME
                               */
                               public void setCUST_SHTNAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_SHTNAMETracker = true;
                                       } else {
                                          localCUST_SHTNAMETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_SHTNAME=param;
                                    

                               }
                            

                        /**
                        * field for CUST_ENNAME
                        */

                        
                            protected java.lang.String localCUST_ENNAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_ENNAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_ENNAME(){
                               return localCUST_ENNAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_ENNAME
                               */
                               public void setCUST_ENNAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_ENNAMETracker = true;
                                       } else {
                                          localCUST_ENNAMETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_ENNAME=param;
                                    

                               }
                            

                        /**
                        * field for CUST_SPNAME
                        */

                        
                            protected java.lang.String localCUST_SPNAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_SPNAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_SPNAME(){
                               return localCUST_SPNAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_SPNAME
                               */
                               public void setCUST_SPNAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_SPNAMETracker = true;
                                       } else {
                                          localCUST_SPNAMETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_SPNAME=param;
                                    

                               }
                            

                        /**
                        * field for CUST_BNAME
                        */

                        
                            protected java.lang.String localCUST_BNAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_BNAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_BNAME(){
                               return localCUST_BNAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_BNAME
                               */
                               public void setCUST_BNAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_BNAMETracker = true;
                                       } else {
                                          localCUST_BNAMETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_BNAME=param;
                                    

                               }
                            

                        /**
                        * field for GOVN_CERT_NO
                        */

                        
                            protected java.lang.String localGOVN_CERT_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGOVN_CERT_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGOVN_CERT_NO(){
                               return localGOVN_CERT_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GOVN_CERT_NO
                               */
                               public void setGOVN_CERT_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGOVN_CERT_NOTracker = true;
                                       } else {
                                          localGOVN_CERT_NOTracker = false;
                                              
                                       }
                                   
                                            this.localGOVN_CERT_NO=param;
                                    

                               }
                            

                        /**
                        * field for GOVN_EFFT_DATE
                        */

                        
                            protected java.lang.String localGOVN_EFFT_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGOVN_EFFT_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGOVN_EFFT_DATE(){
                               return localGOVN_EFFT_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GOVN_EFFT_DATE
                               */
                               public void setGOVN_EFFT_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGOVN_EFFT_DATETracker = true;
                                       } else {
                                          localGOVN_EFFT_DATETracker = false;
                                              
                                       }
                                   
                                            this.localGOVN_EFFT_DATE=param;
                                    

                               }
                            

                        /**
                        * field for GOVN_EXPD_DATE
                        */

                        
                            protected java.lang.String localGOVN_EXPD_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGOVN_EXPD_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGOVN_EXPD_DATE(){
                               return localGOVN_EXPD_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GOVN_EXPD_DATE
                               */
                               public void setGOVN_EXPD_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGOVN_EXPD_DATETracker = true;
                                       } else {
                                          localGOVN_EXPD_DATETracker = false;
                                              
                                       }
                                   
                                            this.localGOVN_EXPD_DATE=param;
                                    

                               }
                            

                        /**
                        * field for GOVN_REVIEW_YEAR
                        */

                        
                            protected java.lang.String localGOVN_REVIEW_YEAR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localGOVN_REVIEW_YEARTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getGOVN_REVIEW_YEAR(){
                               return localGOVN_REVIEW_YEAR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param GOVN_REVIEW_YEAR
                               */
                               public void setGOVN_REVIEW_YEAR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localGOVN_REVIEW_YEARTracker = true;
                                       } else {
                                          localGOVN_REVIEW_YEARTracker = false;
                                              
                                       }
                                   
                                            this.localGOVN_REVIEW_YEAR=param;
                                    

                               }
                            

                        /**
                        * field for ORG_CODE
                        */

                        
                            protected java.lang.String localORG_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localORG_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getORG_CODE(){
                               return localORG_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ORG_CODE
                               */
                               public void setORG_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localORG_CODETracker = true;
                                       } else {
                                          localORG_CODETracker = false;
                                              
                                       }
                                   
                                            this.localORG_CODE=param;
                                    

                               }
                            

                        /**
                        * field for ORG_CODE_ISSU
                        */

                        
                            protected java.lang.String localORG_CODE_ISSU ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localORG_CODE_ISSUTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getORG_CODE_ISSU(){
                               return localORG_CODE_ISSU;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ORG_CODE_ISSU
                               */
                               public void setORG_CODE_ISSU(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localORG_CODE_ISSUTracker = true;
                                       } else {
                                          localORG_CODE_ISSUTracker = false;
                                              
                                       }
                                   
                                            this.localORG_CODE_ISSU=param;
                                    

                               }
                            

                        /**
                        * field for ORG_CODE_ISS_DATE
                        */

                        
                            protected java.lang.String localORG_CODE_ISS_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localORG_CODE_ISS_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getORG_CODE_ISS_DATE(){
                               return localORG_CODE_ISS_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ORG_CODE_ISS_DATE
                               */
                               public void setORG_CODE_ISS_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localORG_CODE_ISS_DATETracker = true;
                                       } else {
                                          localORG_CODE_ISS_DATETracker = false;
                                              
                                       }
                                   
                                            this.localORG_CODE_ISS_DATE=param;
                                    

                               }
                            

                        /**
                        * field for ORG_CODE_DUE_DATE
                        */

                        
                            protected java.lang.String localORG_CODE_DUE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localORG_CODE_DUE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getORG_CODE_DUE_DATE(){
                               return localORG_CODE_DUE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ORG_CODE_DUE_DATE
                               */
                               public void setORG_CODE_DUE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localORG_CODE_DUE_DATETracker = true;
                                       } else {
                                          localORG_CODE_DUE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localORG_CODE_DUE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for REG_ORG
                        */

                        
                            protected java.lang.String localREG_ORG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_ORGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_ORG(){
                               return localREG_ORG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_ORG
                               */
                               public void setREG_ORG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_ORGTracker = true;
                                       } else {
                                          localREG_ORGTracker = false;
                                              
                                       }
                                   
                                            this.localREG_ORG=param;
                                    

                               }
                            

                        /**
                        * field for REG_TYPE
                        */

                        
                            protected java.lang.String localREG_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_TYPE(){
                               return localREG_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_TYPE
                               */
                               public void setREG_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_TYPETracker = true;
                                       } else {
                                          localREG_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localREG_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for REG_CHECK_DATE
                        */

                        
                            protected java.lang.String localREG_CHECK_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_CHECK_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_CHECK_DATE(){
                               return localREG_CHECK_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_CHECK_DATE
                               */
                               public void setREG_CHECK_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_CHECK_DATETracker = true;
                                       } else {
                                          localREG_CHECK_DATETracker = false;
                                              
                                       }
                                   
                                            this.localREG_CHECK_DATE=param;
                                    

                               }
                            

                        /**
                        * field for REG_COUNTRY
                        */

                        
                            protected java.lang.String localREG_COUNTRY ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_COUNTRYTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_COUNTRY(){
                               return localREG_COUNTRY;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_COUNTRY
                               */
                               public void setREG_COUNTRY(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_COUNTRYTracker = true;
                                       } else {
                                          localREG_COUNTRYTracker = false;
                                              
                                       }
                                   
                                            this.localREG_COUNTRY=param;
                                    

                               }
                            

                        /**
                        * field for REG_PROVINCE
                        */

                        
                            protected java.lang.String localREG_PROVINCE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_PROVINCETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_PROVINCE(){
                               return localREG_PROVINCE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_PROVINCE
                               */
                               public void setREG_PROVINCE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_PROVINCETracker = true;
                                       } else {
                                          localREG_PROVINCETracker = false;
                                              
                                       }
                                   
                                            this.localREG_PROVINCE=param;
                                    

                               }
                            

                        /**
                        * field for REG_AREA_CODE
                        */

                        
                            protected java.lang.String localREG_AREA_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_AREA_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_AREA_CODE(){
                               return localREG_AREA_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_AREA_CODE
                               */
                               public void setREG_AREA_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_AREA_CODETracker = true;
                                       } else {
                                          localREG_AREA_CODETracker = false;
                                              
                                       }
                                   
                                            this.localREG_AREA_CODE=param;
                                    

                               }
                            

                        /**
                        * field for REG_DATE
                        */

                        
                            protected java.lang.String localREG_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_DATE(){
                               return localREG_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_DATE
                               */
                               public void setREG_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_DATETracker = true;
                                       } else {
                                          localREG_DATETracker = false;
                                              
                                       }
                                   
                                            this.localREG_DATE=param;
                                    

                               }
                            

                        /**
                        * field for REG_CPTL
                        */

                        
                            protected java.lang.String localREG_CPTL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_CPTLTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_CPTL(){
                               return localREG_CPTL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_CPTL
                               */
                               public void setREG_CPTL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_CPTLTracker = true;
                                       } else {
                                          localREG_CPTLTracker = false;
                                              
                                       }
                                   
                                            this.localREG_CPTL=param;
                                    

                               }
                            

                        /**
                        * field for REG_CPTL_CURR
                        */

                        
                            protected java.lang.String localREG_CPTL_CURR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_CPTL_CURRTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_CPTL_CURR(){
                               return localREG_CPTL_CURR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_CPTL_CURR
                               */
                               public void setREG_CPTL_CURR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_CPTL_CURRTracker = true;
                                       } else {
                                          localREG_CPTL_CURRTracker = false;
                                              
                                       }
                                   
                                            this.localREG_CPTL_CURR=param;
                                    

                               }
                            

                        /**
                        * field for PAID_CPTL
                        */

                        
                            protected java.lang.String localPAID_CPTL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPAID_CPTLTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPAID_CPTL(){
                               return localPAID_CPTL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PAID_CPTL
                               */
                               public void setPAID_CPTL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPAID_CPTLTracker = true;
                                       } else {
                                          localPAID_CPTLTracker = false;
                                              
                                       }
                                   
                                            this.localPAID_CPTL=param;
                                    

                               }
                            

                        /**
                        * field for PAID_CPTL_CURR
                        */

                        
                            protected java.lang.String localPAID_CPTL_CURR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPAID_CPTL_CURRTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPAID_CPTL_CURR(){
                               return localPAID_CPTL_CURR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PAID_CPTL_CURR
                               */
                               public void setPAID_CPTL_CURR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPAID_CPTL_CURRTracker = true;
                                       } else {
                                          localPAID_CPTL_CURRTracker = false;
                                              
                                       }
                                   
                                            this.localPAID_CPTL_CURR=param;
                                    

                               }
                            

                        /**
                        * field for ORG_TYPE
                        */

                        
                            protected java.lang.String localORG_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localORG_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getORG_TYPE(){
                               return localORG_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ORG_TYPE
                               */
                               public void setORG_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localORG_TYPETracker = true;
                                       } else {
                                          localORG_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localORG_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for CORP_NATURE
                        */

                        
                            protected java.lang.String localCORP_NATURE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCORP_NATURETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCORP_NATURE(){
                               return localCORP_NATURE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CORP_NATURE
                               */
                               public void setCORP_NATURE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCORP_NATURETracker = true;
                                       } else {
                                          localCORP_NATURETracker = false;
                                              
                                       }
                                   
                                            this.localCORP_NATURE=param;
                                    

                               }
                            

                        /**
                        * field for CORP_ATTR
                        */

                        
                            protected java.lang.String localCORP_ATTR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCORP_ATTRTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCORP_ATTR(){
                               return localCORP_ATTR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CORP_ATTR
                               */
                               public void setCORP_ATTR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCORP_ATTRTracker = true;
                                       } else {
                                          localCORP_ATTRTracker = false;
                                              
                                       }
                                   
                                            this.localCORP_ATTR=param;
                                    

                               }
                            

                        /**
                        * field for MNGMT_ORG_FORM
                        */

                        
                            protected java.lang.String localMNGMT_ORG_FORM ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMNGMT_ORG_FORMTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMNGMT_ORG_FORM(){
                               return localMNGMT_ORG_FORM;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MNGMT_ORG_FORM
                               */
                               public void setMNGMT_ORG_FORM(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMNGMT_ORG_FORMTracker = true;
                                       } else {
                                          localMNGMT_ORG_FORMTracker = false;
                                              
                                       }
                                   
                                            this.localMNGMT_ORG_FORM=param;
                                    

                               }
                            

                        /**
                        * field for CUST_SUBJ_TYPE
                        */

                        
                            protected java.lang.String localCUST_SUBJ_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_SUBJ_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_SUBJ_TYPE(){
                               return localCUST_SUBJ_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_SUBJ_TYPE
                               */
                               public void setCUST_SUBJ_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_SUBJ_TYPETracker = true;
                                       } else {
                                          localCUST_SUBJ_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_SUBJ_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for TAX_REG_NO
                        */

                        
                            protected java.lang.String localTAX_REG_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTAX_REG_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTAX_REG_NO(){
                               return localTAX_REG_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TAX_REG_NO
                               */
                               public void setTAX_REG_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTAX_REG_NOTracker = true;
                                       } else {
                                          localTAX_REG_NOTracker = false;
                                              
                                       }
                                   
                                            this.localTAX_REG_NO=param;
                                    

                               }
                            

                        /**
                        * field for REG_EXPD_DATE
                        */

                        
                            protected java.lang.String localREG_EXPD_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREG_EXPD_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREG_EXPD_DATE(){
                               return localREG_EXPD_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REG_EXPD_DATE
                               */
                               public void setREG_EXPD_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREG_EXPD_DATETracker = true;
                                       } else {
                                          localREG_EXPD_DATETracker = false;
                                              
                                       }
                                   
                                            this.localREG_EXPD_DATE=param;
                                    

                               }
                            

                        /**
                        * field for TAX_REG_ORG
                        */

                        
                            protected java.lang.String localTAX_REG_ORG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTAX_REG_ORGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTAX_REG_ORG(){
                               return localTAX_REG_ORG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TAX_REG_ORG
                               */
                               public void setTAX_REG_ORG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTAX_REG_ORGTracker = true;
                                       } else {
                                          localTAX_REG_ORGTracker = false;
                                              
                                       }
                                   
                                            this.localTAX_REG_ORG=param;
                                    

                               }
                            

                        /**
                        * field for TAX_AREA_NO
                        */

                        
                            protected java.lang.String localTAX_AREA_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTAX_AREA_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTAX_AREA_NO(){
                               return localTAX_AREA_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TAX_AREA_NO
                               */
                               public void setTAX_AREA_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTAX_AREA_NOTracker = true;
                                       } else {
                                          localTAX_AREA_NOTracker = false;
                                              
                                       }
                                   
                                            this.localTAX_AREA_NO=param;
                                    

                               }
                            

                        /**
                        * field for AREA_EXPD_DATE
                        */

                        
                            protected java.lang.String localAREA_EXPD_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAREA_EXPD_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAREA_EXPD_DATE(){
                               return localAREA_EXPD_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AREA_EXPD_DATE
                               */
                               public void setAREA_EXPD_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAREA_EXPD_DATETracker = true;
                                       } else {
                                          localAREA_EXPD_DATETracker = false;
                                              
                                       }
                                   
                                            this.localAREA_EXPD_DATE=param;
                                    

                               }
                            

                        /**
                        * field for AREA_REG_ORG
                        */

                        
                            protected java.lang.String localAREA_REG_ORG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAREA_REG_ORGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAREA_REG_ORG(){
                               return localAREA_REG_ORG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AREA_REG_ORG
                               */
                               public void setAREA_REG_ORG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAREA_REG_ORGTracker = true;
                                       } else {
                                          localAREA_REG_ORGTracker = false;
                                              
                                       }
                                   
                                            this.localAREA_REG_ORG=param;
                                    

                               }
                            

                        /**
                        * field for IDVU_TX_NO
                        */

                        
                            protected java.lang.String localIDVU_TX_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIDVU_TX_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIDVU_TX_NO(){
                               return localIDVU_TX_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IDVU_TX_NO
                               */
                               public void setIDVU_TX_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIDVU_TX_NOTracker = true;
                                       } else {
                                          localIDVU_TX_NOTracker = false;
                                              
                                       }
                                   
                                            this.localIDVU_TX_NO=param;
                                    

                               }
                            

                        /**
                        * field for LOAN_CARD_FLAG
                        */

                        
                            protected java.lang.String localLOAN_CARD_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLOAN_CARD_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLOAN_CARD_FLAG(){
                               return localLOAN_CARD_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LOAN_CARD_FLAG
                               */
                               public void setLOAN_CARD_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLOAN_CARD_FLAGTracker = true;
                                       } else {
                                          localLOAN_CARD_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localLOAN_CARD_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for LOAN_CARD_NO
                        */

                        
                            protected java.lang.String localLOAN_CARD_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLOAN_CARD_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLOAN_CARD_NO(){
                               return localLOAN_CARD_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LOAN_CARD_NO
                               */
                               public void setLOAN_CARD_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLOAN_CARD_NOTracker = true;
                                       } else {
                                          localLOAN_CARD_NOTracker = false;
                                              
                                       }
                                   
                                            this.localLOAN_CARD_NO=param;
                                    

                               }
                            

                        /**
                        * field for LOAN_CARD_DUE_DATE
                        */

                        
                            protected java.lang.String localLOAN_CARD_DUE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLOAN_CARD_DUE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLOAN_CARD_DUE_DATE(){
                               return localLOAN_CARD_DUE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LOAN_CARD_DUE_DATE
                               */
                               public void setLOAN_CARD_DUE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLOAN_CARD_DUE_DATETracker = true;
                                       } else {
                                          localLOAN_CARD_DUE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localLOAN_CARD_DUE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for LOAN_CARD_CHK_DATE
                        */

                        
                            protected java.lang.String localLOAN_CARD_CHK_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLOAN_CARD_CHK_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLOAN_CARD_CHK_DATE(){
                               return localLOAN_CARD_CHK_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LOAN_CARD_CHK_DATE
                               */
                               public void setLOAN_CARD_CHK_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLOAN_CARD_CHK_DATETracker = true;
                                       } else {
                                          localLOAN_CARD_CHK_DATETracker = false;
                                              
                                       }
                                   
                                            this.localLOAN_CARD_CHK_DATE=param;
                                    

                               }
                            

                        /**
                        * field for UNIT_CREDIT_CODE
                        */

                        
                            protected java.lang.String localUNIT_CREDIT_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localUNIT_CREDIT_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getUNIT_CREDIT_CODE(){
                               return localUNIT_CREDIT_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param UNIT_CREDIT_CODE
                               */
                               public void setUNIT_CREDIT_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localUNIT_CREDIT_CODETracker = true;
                                       } else {
                                          localUNIT_CREDIT_CODETracker = false;
                                              
                                       }
                                   
                                            this.localUNIT_CREDIT_CODE=param;
                                    

                               }
                            

                        /**
                        * field for DEPT_NAT_ECON
                        */

                        
                            protected java.lang.String localDEPT_NAT_ECON ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDEPT_NAT_ECONTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDEPT_NAT_ECON(){
                               return localDEPT_NAT_ECON;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DEPT_NAT_ECON
                               */
                               public void setDEPT_NAT_ECON(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDEPT_NAT_ECONTracker = true;
                                       } else {
                                          localDEPT_NAT_ECONTracker = false;
                                              
                                       }
                                   
                                            this.localDEPT_NAT_ECON=param;
                                    

                               }
                            

                        /**
                        * field for MANG_DEPT
                        */

                        
                            protected java.lang.String localMANG_DEPT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMANG_DEPTTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMANG_DEPT(){
                               return localMANG_DEPT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MANG_DEPT
                               */
                               public void setMANG_DEPT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMANG_DEPTTracker = true;
                                       } else {
                                          localMANG_DEPTTracker = false;
                                              
                                       }
                                   
                                            this.localMANG_DEPT=param;
                                    

                               }
                            

                        /**
                        * field for CORP_SUBJ
                        */

                        
                            protected java.lang.String localCORP_SUBJ ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCORP_SUBJTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCORP_SUBJ(){
                               return localCORP_SUBJ;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CORP_SUBJ
                               */
                               public void setCORP_SUBJ(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCORP_SUBJTracker = true;
                                       } else {
                                          localCORP_SUBJTracker = false;
                                              
                                       }
                                   
                                            this.localCORP_SUBJ=param;
                                    

                               }
                            

                        /**
                        * field for INDUSTRY_TYPE
                        */

                        
                            protected java.lang.String localINDUSTRY_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localINDUSTRY_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getINDUSTRY_TYPE(){
                               return localINDUSTRY_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param INDUSTRY_TYPE
                               */
                               public void setINDUSTRY_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localINDUSTRY_TYPETracker = true;
                                       } else {
                                          localINDUSTRY_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localINDUSTRY_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for ECON_KIND
                        */

                        
                            protected java.lang.String localECON_KIND ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localECON_KINDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getECON_KIND(){
                               return localECON_KIND;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ECON_KIND
                               */
                               public void setECON_KIND(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localECON_KINDTracker = true;
                                       } else {
                                          localECON_KINDTracker = false;
                                              
                                       }
                                   
                                            this.localECON_KIND=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_LIC_NO
                        */

                        
                            protected java.lang.String localBASIC_ACC_LIC_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_LIC_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_LIC_NO(){
                               return localBASIC_ACC_LIC_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_LIC_NO
                               */
                               public void setBASIC_ACC_LIC_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_LIC_NOTracker = true;
                                       } else {
                                          localBASIC_ACC_LIC_NOTracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_LIC_NO=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_PERMIT_NO
                        */

                        
                            protected java.lang.String localBASIC_ACC_PERMIT_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_PERMIT_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_PERMIT_NO(){
                               return localBASIC_ACC_PERMIT_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_PERMIT_NO
                               */
                               public void setBASIC_ACC_PERMIT_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_PERMIT_NOTracker = true;
                                       } else {
                                          localBASIC_ACC_PERMIT_NOTracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_PERMIT_NO=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_BANK_NO
                        */

                        
                            protected java.lang.String localBASIC_ACC_BANK_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_BANK_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_BANK_NO(){
                               return localBASIC_ACC_BANK_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_BANK_NO
                               */
                               public void setBASIC_ACC_BANK_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_BANK_NOTracker = true;
                                       } else {
                                          localBASIC_ACC_BANK_NOTracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_BANK_NO=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_OPEN_BANK
                        */

                        
                            protected java.lang.String localBASIC_ACC_OPEN_BANK ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_OPEN_BANKTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_OPEN_BANK(){
                               return localBASIC_ACC_OPEN_BANK;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_OPEN_BANK
                               */
                               public void setBASIC_ACC_OPEN_BANK(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_OPEN_BANKTracker = true;
                                       } else {
                                          localBASIC_ACC_OPEN_BANKTracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_OPEN_BANK=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_NO
                        */

                        
                            protected java.lang.String localBASIC_ACC_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_NO(){
                               return localBASIC_ACC_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_NO
                               */
                               public void setBASIC_ACC_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_NOTracker = true;
                                       } else {
                                          localBASIC_ACC_NOTracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_NO=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_NAME
                        */

                        
                            protected java.lang.String localBASIC_ACC_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_NAME(){
                               return localBASIC_ACC_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_NAME
                               */
                               public void setBASIC_ACC_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_NAMETracker = true;
                                       } else {
                                          localBASIC_ACC_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_NAME=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_OPEN_DATE
                        */

                        
                            protected java.lang.String localBASIC_ACC_OPEN_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_OPEN_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_OPEN_DATE(){
                               return localBASIC_ACC_OPEN_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_OPEN_DATE
                               */
                               public void setBASIC_ACC_OPEN_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_OPEN_DATETracker = true;
                                       } else {
                                          localBASIC_ACC_OPEN_DATETracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_OPEN_DATE=param;
                                    

                               }
                            

                        /**
                        * field for BASIC_ACC_STATE
                        */

                        
                            protected java.lang.String localBASIC_ACC_STATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBASIC_ACC_STATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBASIC_ACC_STATE(){
                               return localBASIC_ACC_STATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BASIC_ACC_STATE
                               */
                               public void setBASIC_ACC_STATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBASIC_ACC_STATETracker = true;
                                       } else {
                                          localBASIC_ACC_STATETracker = false;
                                              
                                       }
                                   
                                            this.localBASIC_ACC_STATE=param;
                                    

                               }
                            

                        /**
                        * field for BUSI_LIC_NO
                        */

                        
                            protected java.lang.String localBUSI_LIC_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBUSI_LIC_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBUSI_LIC_NO(){
                               return localBUSI_LIC_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BUSI_LIC_NO
                               */
                               public void setBUSI_LIC_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBUSI_LIC_NOTracker = true;
                                       } else {
                                          localBUSI_LIC_NOTracker = false;
                                              
                                       }
                                   
                                            this.localBUSI_LIC_NO=param;
                                    

                               }
                            

                        /**
                        * field for ADMN_TYPE
                        */

                        
                            protected java.lang.String localADMN_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localADMN_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getADMN_TYPE(){
                               return localADMN_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ADMN_TYPE
                               */
                               public void setADMN_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localADMN_TYPETracker = true;
                                       } else {
                                          localADMN_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localADMN_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for SIDE_TYPE
                        */

                        
                            protected java.lang.String localSIDE_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSIDE_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSIDE_TYPE(){
                               return localSIDE_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SIDE_TYPE
                               */
                               public void setSIDE_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSIDE_TYPETracker = true;
                                       } else {
                                          localSIDE_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localSIDE_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for COUNTRY_MNG
                        */

                        
                            protected java.lang.String localCOUNTRY_MNG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCOUNTRY_MNGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCOUNTRY_MNG(){
                               return localCOUNTRY_MNG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param COUNTRY_MNG
                               */
                               public void setCOUNTRY_MNG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCOUNTRY_MNGTracker = true;
                                       } else {
                                          localCOUNTRY_MNGTracker = false;
                                              
                                       }
                                   
                                            this.localCOUNTRY_MNG=param;
                                    

                               }
                            

                        /**
                        * field for PROVINCE_MNG
                        */

                        
                            protected java.lang.String localPROVINCE_MNG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPROVINCE_MNGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPROVINCE_MNG(){
                               return localPROVINCE_MNG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PROVINCE_MNG
                               */
                               public void setPROVINCE_MNG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPROVINCE_MNGTracker = true;
                                       } else {
                                          localPROVINCE_MNGTracker = false;
                                              
                                       }
                                   
                                            this.localPROVINCE_MNG=param;
                                    

                               }
                            

                        /**
                        * field for MNG_AREA_CODE
                        */

                        
                            protected java.lang.String localMNG_AREA_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMNG_AREA_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMNG_AREA_CODE(){
                               return localMNG_AREA_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MNG_AREA_CODE
                               */
                               public void setMNG_AREA_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMNG_AREA_CODETracker = true;
                                       } else {
                                          localMNG_AREA_CODETracker = false;
                                              
                                       }
                                   
                                            this.localMNG_AREA_CODE=param;
                                    

                               }
                            

                        /**
                        * field for MNG_SITUATION
                        */

                        
                            protected java.lang.String localMNG_SITUATION ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMNG_SITUATIONTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMNG_SITUATION(){
                               return localMNG_SITUATION;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MNG_SITUATION
                               */
                               public void setMNG_SITUATION(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMNG_SITUATIONTracker = true;
                                       } else {
                                          localMNG_SITUATIONTracker = false;
                                              
                                       }
                                   
                                            this.localMNG_SITUATION=param;
                                    

                               }
                            

                        /**
                        * field for MNG_OPERATE_AREA
                        */

                        
                            protected java.lang.String localMNG_OPERATE_AREA ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMNG_OPERATE_AREATracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMNG_OPERATE_AREA(){
                               return localMNG_OPERATE_AREA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MNG_OPERATE_AREA
                               */
                               public void setMNG_OPERATE_AREA(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMNG_OPERATE_AREATracker = true;
                                       } else {
                                          localMNG_OPERATE_AREATracker = false;
                                              
                                       }
                                   
                                            this.localMNG_OPERATE_AREA=param;
                                    

                               }
                            

                        /**
                        * field for MNG_OPERATE_OWNERSHIP
                        */

                        
                            protected java.lang.String localMNG_OPERATE_OWNERSHIP ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMNG_OPERATE_OWNERSHIPTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getMNG_OPERATE_OWNERSHIP(){
                               return localMNG_OPERATE_OWNERSHIP;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MNG_OPERATE_OWNERSHIP
                               */
                               public void setMNG_OPERATE_OWNERSHIP(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMNG_OPERATE_OWNERSHIPTracker = true;
                                       } else {
                                          localMNG_OPERATE_OWNERSHIPTracker = false;
                                              
                                       }
                                   
                                            this.localMNG_OPERATE_OWNERSHIP=param;
                                    

                               }
                            

                        /**
                        * field for COMP_SIZE
                        */

                        
                            protected java.lang.String localCOMP_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCOMP_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCOMP_SIZE(){
                               return localCOMP_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param COMP_SIZE
                               */
                               public void setCOMP_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCOMP_SIZETracker = true;
                                       } else {
                                          localCOMP_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localCOMP_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for ASSETS_SIZE
                        */

                        
                            protected java.lang.String localASSETS_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localASSETS_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getASSETS_SIZE(){
                               return localASSETS_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ASSETS_SIZE
                               */
                               public void setASSETS_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localASSETS_SIZETracker = true;
                                       } else {
                                          localASSETS_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localASSETS_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for EMP_SIZE
                        */

                        
                            protected java.lang.String localEMP_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEMP_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEMP_SIZE(){
                               return localEMP_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EMP_SIZE
                               */
                               public void setEMP_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEMP_SIZETracker = true;
                                       } else {
                                          localEMP_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localEMP_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for IMPT_SIZE
                        */

                        
                            protected java.lang.String localIMPT_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIMPT_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIMPT_SIZE(){
                               return localIMPT_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IMPT_SIZE
                               */
                               public void setIMPT_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIMPT_SIZETracker = true;
                                       } else {
                                          localIMPT_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localIMPT_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for EXIT_SIZE
                        */

                        
                            protected java.lang.String localEXIT_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEXIT_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEXIT_SIZE(){
                               return localEXIT_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EXIT_SIZE
                               */
                               public void setEXIT_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEXIT_SIZETracker = true;
                                       } else {
                                          localEXIT_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localEXIT_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for SALE_SIZE
                        */

                        
                            protected java.lang.String localSALE_SIZE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSALE_SIZETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSALE_SIZE(){
                               return localSALE_SIZE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SALE_SIZE
                               */
                               public void setSALE_SIZE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSALE_SIZETracker = true;
                                       } else {
                                          localSALE_SIZETracker = false;
                                              
                                       }
                                   
                                            this.localSALE_SIZE=param;
                                    

                               }
                            

                        /**
                        * field for EMP_NUM
                        */

                        
                            protected java.lang.String localEMP_NUM ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEMP_NUMTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEMP_NUM(){
                               return localEMP_NUM;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EMP_NUM
                               */
                               public void setEMP_NUM(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEMP_NUMTracker = true;
                                       } else {
                                          localEMP_NUMTracker = false;
                                              
                                       }
                                   
                                            this.localEMP_NUM=param;
                                    

                               }
                            

                        /**
                        * field for TOTAL_ASSETS
                        */

                        
                            protected java.lang.String localTOTAL_ASSETS ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTOTAL_ASSETSTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTOTAL_ASSETS(){
                               return localTOTAL_ASSETS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TOTAL_ASSETS
                               */
                               public void setTOTAL_ASSETS(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTOTAL_ASSETSTracker = true;
                                       } else {
                                          localTOTAL_ASSETSTracker = false;
                                              
                                       }
                                   
                                            this.localTOTAL_ASSETS=param;
                                    

                               }
                            

                        /**
                        * field for NET_ASSETS
                        */

                        
                            protected java.lang.String localNET_ASSETS ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNET_ASSETSTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNET_ASSETS(){
                               return localNET_ASSETS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NET_ASSETS
                               */
                               public void setNET_ASSETS(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNET_ASSETSTracker = true;
                                       } else {
                                          localNET_ASSETSTracker = false;
                                              
                                       }
                                   
                                            this.localNET_ASSETS=param;
                                    

                               }
                            

                        /**
                        * field for SELL_SUM
                        */

                        
                            protected java.lang.String localSELL_SUM ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSELL_SUMTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSELL_SUM(){
                               return localSELL_SUM;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SELL_SUM
                               */
                               public void setSELL_SUM(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSELL_SUMTracker = true;
                                       } else {
                                          localSELL_SUMTracker = false;
                                              
                                       }
                                   
                                            this.localSELL_SUM=param;
                                    

                               }
                            

                        /**
                        * field for ANNUAL_INCOME
                        */

                        
                            protected java.lang.String localANNUAL_INCOME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localANNUAL_INCOMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getANNUAL_INCOME(){
                               return localANNUAL_INCOME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ANNUAL_INCOME
                               */
                               public void setANNUAL_INCOME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localANNUAL_INCOMETracker = true;
                                       } else {
                                          localANNUAL_INCOMETracker = false;
                                              
                                       }
                                   
                                            this.localANNUAL_INCOME=param;
                                    

                               }
                            

                        /**
                        * field for FREE_TAX_FLAG
                        */

                        
                            protected java.lang.String localFREE_TAX_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFREE_TAX_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFREE_TAX_FLAG(){
                               return localFREE_TAX_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FREE_TAX_FLAG
                               */
                               public void setFREE_TAX_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFREE_TAX_FLAGTracker = true;
                                       } else {
                                          localFREE_TAX_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localFREE_TAX_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for FREE_TAX_LIMIT
                        */

                        
                            protected java.lang.String localFREE_TAX_LIMIT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFREE_TAX_LIMITTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFREE_TAX_LIMIT(){
                               return localFREE_TAX_LIMIT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FREE_TAX_LIMIT
                               */
                               public void setFREE_TAX_LIMIT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFREE_TAX_LIMITTracker = true;
                                       } else {
                                          localFREE_TAX_LIMITTracker = false;
                                              
                                       }
                                   
                                            this.localFREE_TAX_LIMIT=param;
                                    

                               }
                            

                        /**
                        * field for TAX_RATE_COUNTRY
                        */

                        
                            protected java.lang.String localTAX_RATE_COUNTRY ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTAX_RATE_COUNTRYTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTAX_RATE_COUNTRY(){
                               return localTAX_RATE_COUNTRY;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TAX_RATE_COUNTRY
                               */
                               public void setTAX_RATE_COUNTRY(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTAX_RATE_COUNTRYTracker = true;
                                       } else {
                                          localTAX_RATE_COUNTRYTracker = false;
                                              
                                       }
                                   
                                            this.localTAX_RATE_COUNTRY=param;
                                    

                               }
                            

                        /**
                        * field for INTEREST_RATE
                        */

                        
                            protected java.lang.String localINTEREST_RATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localINTEREST_RATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getINTEREST_RATE(){
                               return localINTEREST_RATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param INTEREST_RATE
                               */
                               public void setINTEREST_RATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localINTEREST_RATETracker = true;
                                       } else {
                                          localINTEREST_RATETracker = false;
                                              
                                       }
                                   
                                            this.localINTEREST_RATE=param;
                                    

                               }
                            

                        /**
                        * field for TAX_RATE_DATE
                        */

                        
                            protected java.lang.String localTAX_RATE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTAX_RATE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTAX_RATE_DATE(){
                               return localTAX_RATE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TAX_RATE_DATE
                               */
                               public void setTAX_RATE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTAX_RATE_DATETracker = true;
                                       } else {
                                          localTAX_RATE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localTAX_RATE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for PRIVATE_FLAG
                        */

                        
                            protected java.lang.String localPRIVATE_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPRIVATE_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPRIVATE_FLAG(){
                               return localPRIVATE_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PRIVATE_FLAG
                               */
                               public void setPRIVATE_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPRIVATE_FLAGTracker = true;
                                       } else {
                                          localPRIVATE_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localPRIVATE_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for LISTED_FLAG
                        */

                        
                            protected java.lang.String localLISTED_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLISTED_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLISTED_FLAG(){
                               return localLISTED_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LISTED_FLAG
                               */
                               public void setLISTED_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLISTED_FLAGTracker = true;
                                       } else {
                                          localLISTED_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localLISTED_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for HOLDING_TYPE
                        */

                        
                            protected java.lang.String localHOLDING_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHOLDING_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHOLDING_TYPE(){
                               return localHOLDING_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HOLDING_TYPE
                               */
                               public void setHOLDING_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHOLDING_TYPETracker = true;
                                       } else {
                                          localHOLDING_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localHOLDING_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for ACTUAL_CONTROLLER
                        */

                        
                            protected java.lang.String localACTUAL_CONTROLLER ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localACTUAL_CONTROLLERTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getACTUAL_CONTROLLER(){
                               return localACTUAL_CONTROLLER;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ACTUAL_CONTROLLER
                               */
                               public void setACTUAL_CONTROLLER(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localACTUAL_CONTROLLERTracker = true;
                                       } else {
                                          localACTUAL_CONTROLLERTracker = false;
                                              
                                       }
                                   
                                            this.localACTUAL_CONTROLLER=param;
                                    

                               }
                            

                        /**
                        * field for COUN_CORP_FLAG
                        */

                        
                            protected java.lang.String localCOUN_CORP_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCOUN_CORP_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCOUN_CORP_FLAG(){
                               return localCOUN_CORP_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param COUN_CORP_FLAG
                               */
                               public void setCOUN_CORP_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCOUN_CORP_FLAGTracker = true;
                                       } else {
                                          localCOUN_CORP_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localCOUN_CORP_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for TOPAGRI_CORP_FLAG
                        */

                        
                            protected java.lang.String localTOPAGRI_CORP_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTOPAGRI_CORP_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTOPAGRI_CORP_FLAG(){
                               return localTOPAGRI_CORP_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TOPAGRI_CORP_FLAG
                               */
                               public void setTOPAGRI_CORP_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTOPAGRI_CORP_FLAGTracker = true;
                                       } else {
                                          localTOPAGRI_CORP_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localTOPAGRI_CORP_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for TOPAGRI_CORP_KIND
                        */

                        
                            protected java.lang.String localTOPAGRI_CORP_KIND ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTOPAGRI_CORP_KINDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTOPAGRI_CORP_KIND(){
                               return localTOPAGRI_CORP_KIND;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TOPAGRI_CORP_KIND
                               */
                               public void setTOPAGRI_CORP_KIND(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTOPAGRI_CORP_KINDTracker = true;
                                       } else {
                                          localTOPAGRI_CORP_KINDTracker = false;
                                              
                                       }
                                   
                                            this.localTOPAGRI_CORP_KIND=param;
                                    

                               }
                            

                        /**
                        * field for THREE_AGR_FLAG
                        */

                        
                            protected java.lang.String localTHREE_AGR_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTHREE_AGR_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTHREE_AGR_FLAG(){
                               return localTHREE_AGR_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param THREE_AGR_FLAG
                               */
                               public void setTHREE_AGR_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTHREE_AGR_FLAGTracker = true;
                                       } else {
                                          localTHREE_AGR_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localTHREE_AGR_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for NEW_TECH_CORPORNOT
                        */

                        
                            protected java.lang.String localNEW_TECH_CORPORNOT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNEW_TECH_CORPORNOTTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNEW_TECH_CORPORNOT(){
                               return localNEW_TECH_CORPORNOT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NEW_TECH_CORPORNOT
                               */
                               public void setNEW_TECH_CORPORNOT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNEW_TECH_CORPORNOTTracker = true;
                                       } else {
                                          localNEW_TECH_CORPORNOTTracker = false;
                                              
                                       }
                                   
                                            this.localNEW_TECH_CORPORNOT=param;
                                    

                               }
                            

                        /**
                        * field for SPE_INDUSTRY_FLAG
                        */

                        
                            protected java.lang.String localSPE_INDUSTRY_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSPE_INDUSTRY_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSPE_INDUSTRY_FLAG(){
                               return localSPE_INDUSTRY_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SPE_INDUSTRY_FLAG
                               */
                               public void setSPE_INDUSTRY_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSPE_INDUSTRY_FLAGTracker = true;
                                       } else {
                                          localSPE_INDUSTRY_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localSPE_INDUSTRY_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for SPE_INDUSTRY_LIC
                        */

                        
                            protected java.lang.String localSPE_INDUSTRY_LIC ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSPE_INDUSTRY_LICTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSPE_INDUSTRY_LIC(){
                               return localSPE_INDUSTRY_LIC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SPE_INDUSTRY_LIC
                               */
                               public void setSPE_INDUSTRY_LIC(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSPE_INDUSTRY_LICTracker = true;
                                       } else {
                                          localSPE_INDUSTRY_LICTracker = false;
                                              
                                       }
                                   
                                            this.localSPE_INDUSTRY_LIC=param;
                                    

                               }
                            

                        /**
                        * field for IMEX_MANA_IND
                        */

                        
                            protected java.lang.String localIMEX_MANA_IND ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIMEX_MANA_INDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIMEX_MANA_IND(){
                               return localIMEX_MANA_IND;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IMEX_MANA_IND
                               */
                               public void setIMEX_MANA_IND(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIMEX_MANA_INDTracker = true;
                                       } else {
                                          localIMEX_MANA_INDTracker = false;
                                              
                                       }
                                   
                                            this.localIMEX_MANA_IND=param;
                                    

                               }
                            

                        /**
                        * field for AREA_TYPE
                        */

                        
                            protected java.lang.String localAREA_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localAREA_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getAREA_TYPE(){
                               return localAREA_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param AREA_TYPE
                               */
                               public void setAREA_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localAREA_TYPETracker = true;
                                       } else {
                                          localAREA_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localAREA_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for FIN_CUST_TYPE
                        */

                        
                            protected java.lang.String localFIN_CUST_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_CUST_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_CUST_TYPE(){
                               return localFIN_CUST_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_CUST_TYPE
                               */
                               public void setFIN_CUST_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_CUST_TYPETracker = true;
                                       } else {
                                          localFIN_CUST_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localFIN_CUST_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for FIN_ORG_TYPE
                        */

                        
                            protected java.lang.String localFIN_ORG_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_ORG_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_ORG_TYPE(){
                               return localFIN_ORG_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_ORG_TYPE
                               */
                               public void setFIN_ORG_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_ORG_TYPETracker = true;
                                       } else {
                                          localFIN_ORG_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localFIN_ORG_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for SWIFT_NO
                        */

                        
                            protected java.lang.String localSWIFT_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSWIFT_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSWIFT_NO(){
                               return localSWIFT_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SWIFT_NO
                               */
                               public void setSWIFT_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSWIFT_NOTracker = true;
                                       } else {
                                          localSWIFT_NOTracker = false;
                                              
                                       }
                                   
                                            this.localSWIFT_NO=param;
                                    

                               }
                            

                        /**
                        * field for PAY_NO
                        */

                        
                            protected java.lang.String localPAY_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPAY_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPAY_NO(){
                               return localPAY_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PAY_NO
                               */
                               public void setPAY_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPAY_NOTracker = true;
                                       } else {
                                          localPAY_NOTracker = false;
                                              
                                       }
                                   
                                            this.localPAY_NO=param;
                                    

                               }
                            

                        /**
                        * field for FIN_LIC_NO
                        */

                        
                            protected java.lang.String localFIN_LIC_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_LIC_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_LIC_NO(){
                               return localFIN_LIC_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_LIC_NO
                               */
                               public void setFIN_LIC_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_LIC_NOTracker = true;
                                       } else {
                                          localFIN_LIC_NOTracker = false;
                                              
                                       }
                                   
                                            this.localFIN_LIC_NO=param;
                                    

                               }
                            

                        /**
                        * field for FIN_ORG_CD
                        */

                        
                            protected java.lang.String localFIN_ORG_CD ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_ORG_CDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_ORG_CD(){
                               return localFIN_ORG_CD;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_ORG_CD
                               */
                               public void setFIN_ORG_CD(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_ORG_CDTracker = true;
                                       } else {
                                          localFIN_ORG_CDTracker = false;
                                              
                                       }
                                   
                                            this.localFIN_ORG_CD=param;
                                    

                               }
                            

                        /**
                        * field for FIN_MANAGE_AREA
                        */

                        
                            protected java.lang.String localFIN_MANAGE_AREA ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_MANAGE_AREATracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_MANAGE_AREA(){
                               return localFIN_MANAGE_AREA;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_MANAGE_AREA
                               */
                               public void setFIN_MANAGE_AREA(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_MANAGE_AREATracker = true;
                                       } else {
                                          localFIN_MANAGE_AREATracker = false;
                                              
                                       }
                                   
                                            this.localFIN_MANAGE_AREA=param;
                                    

                               }
                            

                        /**
                        * field for FIN_DEPT_FLAG
                        */

                        
                            protected java.lang.String localFIN_DEPT_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFIN_DEPT_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFIN_DEPT_FLAG(){
                               return localFIN_DEPT_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FIN_DEPT_FLAG
                               */
                               public void setFIN_DEPT_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFIN_DEPT_FLAGTracker = true;
                                       } else {
                                          localFIN_DEPT_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localFIN_DEPT_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for DEPT_FIN_FLAG
                        */

                        
                            protected java.lang.String localDEPT_FIN_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localDEPT_FIN_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getDEPT_FIN_FLAG(){
                               return localDEPT_FIN_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param DEPT_FIN_FLAG
                               */
                               public void setDEPT_FIN_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localDEPT_FIN_FLAGTracker = true;
                                       } else {
                                          localDEPT_FIN_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localDEPT_FIN_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for CUST_FORE_EXCH_ATTR
                        */

                        
                            protected java.lang.String localCUST_FORE_EXCH_ATTR ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_FORE_EXCH_ATTRTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_FORE_EXCH_ATTR(){
                               return localCUST_FORE_EXCH_ATTR;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_FORE_EXCH_ATTR
                               */
                               public void setCUST_FORE_EXCH_ATTR(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_FORE_EXCH_ATTRTracker = true;
                                       } else {
                                          localCUST_FORE_EXCH_ATTRTracker = false;
                                              
                                       }
                                   
                                            this.localCUST_FORE_EXCH_ATTR=param;
                                    

                               }
                            

                        /**
                        * field for NRA_FLAG
                        */

                        
                            protected java.lang.String localNRA_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localNRA_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getNRA_FLAG(){
                               return localNRA_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param NRA_FLAG
                               */
                               public void setNRA_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localNRA_FLAGTracker = true;
                                       } else {
                                          localNRA_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localNRA_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for SPE_INST_CODE
                        */

                        
                            protected java.lang.String localSPE_INST_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSPE_INST_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSPE_INST_CODE(){
                               return localSPE_INST_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SPE_INST_CODE
                               */
                               public void setSPE_INST_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSPE_INST_CODETracker = true;
                                       } else {
                                          localSPE_INST_CODETracker = false;
                                              
                                       }
                                   
                                            this.localSPE_INST_CODE=param;
                                    

                               }
                            

                        /**
                        * field for FORE_CUST_TYPE
                        */

                        
                            protected java.lang.String localFORE_CUST_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_CUST_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_CUST_TYPE(){
                               return localFORE_CUST_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_CUST_TYPE
                               */
                               public void setFORE_CUST_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_CUST_TYPETracker = true;
                                       } else {
                                          localFORE_CUST_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localFORE_CUST_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for FORE_EXCH_LIC_NO
                        */

                        
                            protected java.lang.String localFORE_EXCH_LIC_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_EXCH_LIC_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_EXCH_LIC_NO(){
                               return localFORE_EXCH_LIC_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_EXCH_LIC_NO
                               */
                               public void setFORE_EXCH_LIC_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_EXCH_LIC_NOTracker = true;
                                       } else {
                                          localFORE_EXCH_LIC_NOTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_EXCH_LIC_NO=param;
                                    

                               }
                            

                        /**
                        * field for BUSI_SITE_CODE
                        */

                        
                            protected java.lang.String localBUSI_SITE_CODE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBUSI_SITE_CODETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBUSI_SITE_CODE(){
                               return localBUSI_SITE_CODE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BUSI_SITE_CODE
                               */
                               public void setBUSI_SITE_CODE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBUSI_SITE_CODETracker = true;
                                       } else {
                                          localBUSI_SITE_CODETracker = false;
                                              
                                       }
                                   
                                            this.localBUSI_SITE_CODE=param;
                                    

                               }
                            

                        /**
                        * field for RES_COUNTRY
                        */

                        
                            protected java.lang.String localRES_COUNTRY ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localRES_COUNTRYTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getRES_COUNTRY(){
                               return localRES_COUNTRY;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RES_COUNTRY
                               */
                               public void setRES_COUNTRY(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localRES_COUNTRYTracker = true;
                                       } else {
                                          localRES_COUNTRYTracker = false;
                                              
                                       }
                                   
                                            this.localRES_COUNTRY=param;
                                    

                               }
                            

                        /**
                        * field for FORE_BASIC_ACC_BANK
                        */

                        
                            protected java.lang.String localFORE_BASIC_ACC_BANK ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_BASIC_ACC_BANKTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_BASIC_ACC_BANK(){
                               return localFORE_BASIC_ACC_BANK;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_BASIC_ACC_BANK
                               */
                               public void setFORE_BASIC_ACC_BANK(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_BASIC_ACC_BANKTracker = true;
                                       } else {
                                          localFORE_BASIC_ACC_BANKTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_BASIC_ACC_BANK=param;
                                    

                               }
                            

                        /**
                        * field for FORE_BASIC_ACC
                        */

                        
                            protected java.lang.String localFORE_BASIC_ACC ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_BASIC_ACCTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_BASIC_ACC(){
                               return localFORE_BASIC_ACC;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_BASIC_ACC
                               */
                               public void setFORE_BASIC_ACC(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_BASIC_ACCTracker = true;
                                       } else {
                                          localFORE_BASIC_ACCTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_BASIC_ACC=param;
                                    

                               }
                            

                        /**
                        * field for FORE_INV_COUNTRY
                        */

                        
                            protected java.lang.String localFORE_INV_COUNTRY ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_INV_COUNTRYTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_INV_COUNTRY(){
                               return localFORE_INV_COUNTRY;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_INV_COUNTRY
                               */
                               public void setFORE_INV_COUNTRY(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_INV_COUNTRYTracker = true;
                                       } else {
                                          localFORE_INV_COUNTRYTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_INV_COUNTRY=param;
                                    

                               }
                            

                        /**
                        * field for FORE_ECON_TRDE_FLAG
                        */

                        
                            protected java.lang.String localFORE_ECON_TRDE_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_ECON_TRDE_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_ECON_TRDE_FLAG(){
                               return localFORE_ECON_TRDE_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_ECON_TRDE_FLAG
                               */
                               public void setFORE_ECON_TRDE_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_ECON_TRDE_FLAGTracker = true;
                                       } else {
                                          localFORE_ECON_TRDE_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_ECON_TRDE_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for SPE_ECON_INST_FLAG
                        */

                        
                            protected java.lang.String localSPE_ECON_INST_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSPE_ECON_INST_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSPE_ECON_INST_FLAG(){
                               return localSPE_ECON_INST_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SPE_ECON_INST_FLAG
                               */
                               public void setSPE_ECON_INST_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSPE_ECON_INST_FLAGTracker = true;
                                       } else {
                                          localSPE_ECON_INST_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localSPE_ECON_INST_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for SPE_ECON_INST_TYPE
                        */

                        
                            protected java.lang.String localSPE_ECON_INST_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSPE_ECON_INST_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSPE_ECON_INST_TYPE(){
                               return localSPE_ECON_INST_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SPE_ECON_INST_TYPE
                               */
                               public void setSPE_ECON_INST_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSPE_ECON_INST_TYPETracker = true;
                                       } else {
                                          localSPE_ECON_INST_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localSPE_ECON_INST_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for PAY_LIS_FLAG
                        */

                        
                            protected java.lang.String localPAY_LIS_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localPAY_LIS_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getPAY_LIS_FLAG(){
                               return localPAY_LIS_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param PAY_LIS_FLAG
                               */
                               public void setPAY_LIS_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localPAY_LIS_FLAGTracker = true;
                                       } else {
                                          localPAY_LIS_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localPAY_LIS_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for FORE_SAFE_NO
                        */

                        
                            protected java.lang.String localFORE_SAFE_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_SAFE_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_SAFE_NO(){
                               return localFORE_SAFE_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_SAFE_NO
                               */
                               public void setFORE_SAFE_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_SAFE_NOTracker = true;
                                       } else {
                                          localFORE_SAFE_NOTracker = false;
                                              
                                       }
                                   
                                            this.localFORE_SAFE_NO=param;
                                    

                               }
                            

                        /**
                        * field for FORE_INDUSTRY_TYPE
                        */

                        
                            protected java.lang.String localFORE_INDUSTRY_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_INDUSTRY_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_INDUSTRY_TYPE(){
                               return localFORE_INDUSTRY_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_INDUSTRY_TYPE
                               */
                               public void setFORE_INDUSTRY_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_INDUSTRY_TYPETracker = true;
                                       } else {
                                          localFORE_INDUSTRY_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localFORE_INDUSTRY_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for FORE_ECON_TYPE
                        */

                        
                            protected java.lang.String localFORE_ECON_TYPE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_ECON_TYPETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_ECON_TYPE(){
                               return localFORE_ECON_TYPE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_ECON_TYPE
                               */
                               public void setFORE_ECON_TYPE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_ECON_TYPETracker = true;
                                       } else {
                                          localFORE_ECON_TYPETracker = false;
                                              
                                       }
                                   
                                            this.localFORE_ECON_TYPE=param;
                                    

                               }
                            

                        /**
                        * field for FORE_FIRST_NAME
                        */

                        
                            protected java.lang.String localFORE_FIRST_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_FIRST_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_FIRST_NAME(){
                               return localFORE_FIRST_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_FIRST_NAME
                               */
                               public void setFORE_FIRST_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_FIRST_NAMETracker = true;
                                       } else {
                                          localFORE_FIRST_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localFORE_FIRST_NAME=param;
                                    

                               }
                            

                        /**
                        * field for FORE_SECOND_NAME
                        */

                        
                            protected java.lang.String localFORE_SECOND_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFORE_SECOND_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFORE_SECOND_NAME(){
                               return localFORE_SECOND_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FORE_SECOND_NAME
                               */
                               public void setFORE_SECOND_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFORE_SECOND_NAMETracker = true;
                                       } else {
                                          localFORE_SECOND_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localFORE_SECOND_NAME=param;
                                    

                               }
                            

                        /**
                        * field for BANK_REL_FLAG
                        */

                        
                            protected java.lang.String localBANK_REL_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBANK_REL_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBANK_REL_FLAG(){
                               return localBANK_REL_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BANK_REL_FLAG
                               */
                               public void setBANK_REL_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBANK_REL_FLAGTracker = true;
                                       } else {
                                          localBANK_REL_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localBANK_REL_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for SHAREHOLDER_FLAG
                        */

                        
                            protected java.lang.String localSHAREHOLDER_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSHAREHOLDER_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSHAREHOLDER_FLAG(){
                               return localSHAREHOLDER_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SHAREHOLDER_FLAG
                               */
                               public void setSHAREHOLDER_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSHAREHOLDER_FLAGTracker = true;
                                       } else {
                                          localSHAREHOLDER_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localSHAREHOLDER_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for STOCK_NUM
                        */

                        
                            protected java.lang.String localSTOCK_NUM ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSTOCK_NUMTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSTOCK_NUM(){
                               return localSTOCK_NUM;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param STOCK_NUM
                               */
                               public void setSTOCK_NUM(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSTOCK_NUMTracker = true;
                                       } else {
                                          localSTOCK_NUMTracker = false;
                                              
                                       }
                                   
                                            this.localSTOCK_NUM=param;
                                    

                               }
                            

                        /**
                        * field for STOCK_ACCT
                        */

                        
                            protected java.lang.String localSTOCK_ACCT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSTOCK_ACCTTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSTOCK_ACCT(){
                               return localSTOCK_ACCT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param STOCK_ACCT
                               */
                               public void setSTOCK_ACCT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSTOCK_ACCTTracker = true;
                                       } else {
                                          localSTOCK_ACCTTracker = false;
                                              
                                       }
                                   
                                            this.localSTOCK_ACCT=param;
                                    

                               }
                            

                        /**
                        * field for REL_UNIT_FLAG
                        */

                        
                            protected java.lang.String localREL_UNIT_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREL_UNIT_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREL_UNIT_FLAG(){
                               return localREL_UNIT_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REL_UNIT_FLAG
                               */
                               public void setREL_UNIT_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREL_UNIT_FLAGTracker = true;
                                       } else {
                                          localREL_UNIT_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localREL_UNIT_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for CUST_EVAL_LEVEL
                        */

                        
                            protected java.lang.String localCUST_EVAL_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_EVAL_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_EVAL_LEVEL(){
                               return localCUST_EVAL_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_EVAL_LEVEL
                               */
                               public void setCUST_EVAL_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_EVAL_LEVELTracker = true;
                                       } else {
                                          localCUST_EVAL_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localCUST_EVAL_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for BANK_CREDIT_LEVEL
                        */

                        
                            protected java.lang.String localBANK_CREDIT_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBANK_CREDIT_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBANK_CREDIT_LEVEL(){
                               return localBANK_CREDIT_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BANK_CREDIT_LEVEL
                               */
                               public void setBANK_CREDIT_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBANK_CREDIT_LEVELTracker = true;
                                       } else {
                                          localBANK_CREDIT_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localBANK_CREDIT_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for BANK_EVALUATE_DATE
                        */

                        
                            protected java.lang.String localBANK_EVALUATE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBANK_EVALUATE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBANK_EVALUATE_DATE(){
                               return localBANK_EVALUATE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BANK_EVALUATE_DATE
                               */
                               public void setBANK_EVALUATE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBANK_EVALUATE_DATETracker = true;
                                       } else {
                                          localBANK_EVALUATE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localBANK_EVALUATE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for BANK_ORG_NAME
                        */

                        
                            protected java.lang.String localBANK_ORG_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBANK_ORG_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBANK_ORG_NAME(){
                               return localBANK_ORG_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BANK_ORG_NAME
                               */
                               public void setBANK_ORG_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBANK_ORG_NAMETracker = true;
                                       } else {
                                          localBANK_ORG_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localBANK_ORG_NAME=param;
                                    

                               }
                            

                        /**
                        * field for BANK_ORG_RESULT
                        */

                        
                            protected java.lang.String localBANK_ORG_RESULT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBANK_ORG_RESULTTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBANK_ORG_RESULT(){
                               return localBANK_ORG_RESULT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BANK_ORG_RESULT
                               */
                               public void setBANK_ORG_RESULT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBANK_ORG_RESULTTracker = true;
                                       } else {
                                          localBANK_ORG_RESULTTracker = false;
                                              
                                       }
                                   
                                            this.localBANK_ORG_RESULT=param;
                                    

                               }
                            

                        /**
                        * field for OTHER_CREDIT_LEVEL
                        */

                        
                            protected java.lang.String localOTHER_CREDIT_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOTHER_CREDIT_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOTHER_CREDIT_LEVEL(){
                               return localOTHER_CREDIT_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OTHER_CREDIT_LEVEL
                               */
                               public void setOTHER_CREDIT_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOTHER_CREDIT_LEVELTracker = true;
                                       } else {
                                          localOTHER_CREDIT_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localOTHER_CREDIT_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for OTHER_EVALUATE_DATE
                        */

                        
                            protected java.lang.String localOTHER_EVALUATE_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOTHER_EVALUATE_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOTHER_EVALUATE_DATE(){
                               return localOTHER_EVALUATE_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OTHER_EVALUATE_DATE
                               */
                               public void setOTHER_EVALUATE_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOTHER_EVALUATE_DATETracker = true;
                                       } else {
                                          localOTHER_EVALUATE_DATETracker = false;
                                              
                                       }
                                   
                                            this.localOTHER_EVALUATE_DATE=param;
                                    

                               }
                            

                        /**
                        * field for OTHER_ORG_NAME
                        */

                        
                            protected java.lang.String localOTHER_ORG_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOTHER_ORG_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOTHER_ORG_NAME(){
                               return localOTHER_ORG_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OTHER_ORG_NAME
                               */
                               public void setOTHER_ORG_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOTHER_ORG_NAMETracker = true;
                                       } else {
                                          localOTHER_ORG_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localOTHER_ORG_NAME=param;
                                    

                               }
                            

                        /**
                        * field for OTHER_ORG_RESULT
                        */

                        
                            protected java.lang.String localOTHER_ORG_RESULT ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOTHER_ORG_RESULTTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOTHER_ORG_RESULT(){
                               return localOTHER_ORG_RESULT;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OTHER_ORG_RESULT
                               */
                               public void setOTHER_ORG_RESULT(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOTHER_ORG_RESULTTracker = true;
                                       } else {
                                          localOTHER_ORG_RESULTTracker = false;
                                              
                                       }
                                   
                                            this.localOTHER_ORG_RESULT=param;
                                    

                               }
                            

                        /**
                        * field for EVALUATE_LEVEL
                        */

                        
                            protected java.lang.String localEVALUATE_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localEVALUATE_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getEVALUATE_LEVEL(){
                               return localEVALUATE_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param EVALUATE_LEVEL
                               */
                               public void setEVALUATE_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localEVALUATE_LEVELTracker = true;
                                       } else {
                                          localEVALUATE_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localEVALUATE_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for CUAT_RISK_LEVEL
                        */

                        
                            protected java.lang.String localCUAT_RISK_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUAT_RISK_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUAT_RISK_LEVEL(){
                               return localCUAT_RISK_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUAT_RISK_LEVEL
                               */
                               public void setCUAT_RISK_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUAT_RISK_LEVELTracker = true;
                                       } else {
                                          localCUAT_RISK_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localCUAT_RISK_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for CUST_LEVEL
                        */

                        
                            protected java.lang.String localCUST_LEVEL ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_LEVELTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_LEVEL(){
                               return localCUST_LEVEL;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_LEVEL
                               */
                               public void setCUST_LEVEL(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_LEVELTracker = true;
                                       } else {
                                          localCUST_LEVELTracker = false;
                                              
                                       }
                                   
                                            this.localCUST_LEVEL=param;
                                    

                               }
                            

                        /**
                        * field for IDE_CHECK_FLAG
                        */

                        
                            protected java.lang.String localIDE_CHECK_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localIDE_CHECK_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getIDE_CHECK_FLAG(){
                               return localIDE_CHECK_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param IDE_CHECK_FLAG
                               */
                               public void setIDE_CHECK_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localIDE_CHECK_FLAGTracker = true;
                                       } else {
                                          localIDE_CHECK_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localIDE_CHECK_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for CUST_MANAGER_NO
                        */

                        
                            protected java.lang.String localCUST_MANAGER_NO ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_MANAGER_NOTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_MANAGER_NO(){
                               return localCUST_MANAGER_NO;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_MANAGER_NO
                               */
                               public void setCUST_MANAGER_NO(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_MANAGER_NOTracker = true;
                                       } else {
                                          localCUST_MANAGER_NOTracker = false;
                                              
                                       }
                                   
                                            this.localCUST_MANAGER_NO=param;
                                    

                               }
                            

                        /**
                        * field for CUST_MNG_NAME
                        */

                        
                            protected java.lang.String localCUST_MNG_NAME ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_MNG_NAMETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_MNG_NAME(){
                               return localCUST_MNG_NAME;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_MNG_NAME
                               */
                               public void setCUST_MNG_NAME(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_MNG_NAMETracker = true;
                                       } else {
                                          localCUST_MNG_NAMETracker = false;
                                              
                                       }
                                   
                                            this.localCUST_MNG_NAME=param;
                                    

                               }
                            

                        /**
                        * field for OWN_ORG
                        */

                        
                            protected java.lang.String localOWN_ORG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOWN_ORGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOWN_ORG(){
                               return localOWN_ORG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OWN_ORG
                               */
                               public void setOWN_ORG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOWN_ORGTracker = true;
                                       } else {
                                          localOWN_ORGTracker = false;
                                              
                                       }
                                   
                                            this.localOWN_ORG=param;
                                    

                               }
                            

                        /**
                        * field for OPEN_ORG
                        */

                        
                            protected java.lang.String localOPEN_ORG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOPEN_ORGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOPEN_ORG(){
                               return localOPEN_ORG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OPEN_ORG
                               */
                               public void setOPEN_ORG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOPEN_ORGTracker = true;
                                       } else {
                                          localOPEN_ORGTracker = false;
                                              
                                       }
                                   
                                            this.localOPEN_ORG=param;
                                    

                               }
                            

                        /**
                        * field for OPEN_TELLER
                        */

                        
                            protected java.lang.String localOPEN_TELLER ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOPEN_TELLERTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOPEN_TELLER(){
                               return localOPEN_TELLER;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OPEN_TELLER
                               */
                               public void setOPEN_TELLER(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOPEN_TELLERTracker = true;
                                       } else {
                                          localOPEN_TELLERTracker = false;
                                              
                                       }
                                   
                                            this.localOPEN_TELLER=param;
                                    

                               }
                            

                        /**
                        * field for OPEN_DATE
                        */

                        
                            protected java.lang.String localOPEN_DATE ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOPEN_DATETracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOPEN_DATE(){
                               return localOPEN_DATE;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param OPEN_DATE
                               */
                               public void setOPEN_DATE(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOPEN_DATETracker = true;
                                       } else {
                                          localOPEN_DATETracker = false;
                                              
                                       }
                                   
                                            this.localOPEN_DATE=param;
                                    

                               }
                            

                        /**
                        * field for REAL_FULL_FLAG
                        */

                        
                            protected java.lang.String localREAL_FULL_FLAG ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localREAL_FULL_FLAGTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getREAL_FULL_FLAG(){
                               return localREAL_FULL_FLAG;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param REAL_FULL_FLAG
                               */
                               public void setREAL_FULL_FLAG(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localREAL_FULL_FLAGTracker = true;
                                       } else {
                                          localREAL_FULL_FLAGTracker = false;
                                              
                                       }
                                   
                                            this.localREAL_FULL_FLAG=param;
                                    

                               }
                            

                        /**
                        * field for CUST_STATUS
                        */

                        
                            protected java.lang.String localCUST_STATUS ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localCUST_STATUSTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getCUST_STATUS(){
                               return localCUST_STATUS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param CUST_STATUS
                               */
                               public void setCUST_STATUS(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localCUST_STATUSTracker = true;
                                       } else {
                                          localCUST_STATUSTracker = false;
                                              
                                       }
                                   
                                            this.localCUST_STATUS=param;
                                    

                               }
                            

                        /**
                        * field for LAST_SYSTEM_ID
                        */

                        
                            protected java.lang.String localLAST_SYSTEM_ID ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLAST_SYSTEM_IDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLAST_SYSTEM_ID(){
                               return localLAST_SYSTEM_ID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LAST_SYSTEM_ID
                               */
                               public void setLAST_SYSTEM_ID(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLAST_SYSTEM_IDTracker = true;
                                       } else {
                                          localLAST_SYSTEM_IDTracker = false;
                                              
                                       }
                                   
                                            this.localLAST_SYSTEM_ID=param;
                                    

                               }
                            

                        /**
                        * field for LAST_UPDATED_TS
                        */

                        
                            protected java.lang.String localLAST_UPDATED_TS ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localLAST_UPDATED_TSTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getLAST_UPDATED_TS(){
                               return localLAST_UPDATED_TS;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param LAST_UPDATED_TS
                               */
                               public void setLAST_UPDATED_TS(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localLAST_UPDATED_TSTracker = true;
                                       } else {
                                          localLAST_UPDATED_TSTracker = false;
                                              
                                       }
                                   
                                            this.localLAST_UPDATED_TS=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_CRMS_SVR_S0110101000A202_OUT.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localECIF_CUST_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ECIF_CUST_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ECIF_CUST_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ECIF_CUST_NO");
                                    }
                                

                                          if (localECIF_CUST_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ECIF_CUST_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localECIF_CUST_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_TYPE");
                                    }
                                

                                          if (localCUST_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPARTY_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PARTY_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PARTY_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PARTY_NAME");
                                    }
                                

                                          if (localPARTY_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PARTY_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPARTY_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_TYPE");
                                    }
                                

                                          if (localCERT_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_NO");
                                    }
                                

                                          if (localCERT_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_ORG_NATTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_ORG_NAT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_ORG_NAT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_ORG_NAT");
                                    }
                                

                                          if (localCERT_ORG_NAT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_ORG_NAT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_ORG_NAT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_ORG_AREATracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_ORG_AREA", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_ORG_AREA");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_ORG_AREA");
                                    }
                                

                                          if (localCERT_ORG_AREA==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_ORG_AREA cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_ORG_AREA);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_ORG_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_ORG_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_ORG_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_ORG_NAME");
                                    }
                                

                                          if (localCERT_ORG_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_ORG_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_ORG_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_ISSUE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_ISSUE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_ISSUE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_ISSUE_DATE");
                                    }
                                

                                          if (localCERT_ISSUE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_ISSUE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_ISSUE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_DUE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_DUE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_DUE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_DUE_DATE");
                                    }
                                

                                          if (localCERT_DUE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_DUE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_DUE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_TYPE_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_TYPE_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_TYPE_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_TYPE_FLAG");
                                    }
                                

                                          if (localCERT_TYPE_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_TYPE_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_TYPE_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_SUB_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_SUB_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_SUB_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_SUB_TYPE");
                                    }
                                

                                          if (localCERT_SUB_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_SUB_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_SUB_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_IMG_ADDRTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_IMG_ADDR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_IMG_ADDR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_IMG_ADDR");
                                    }
                                

                                          if (localCERT_IMG_ADDR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_IMG_ADDR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_IMG_ADDR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCERT_DESCTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CERT_DESC", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CERT_DESC");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CERT_DESC");
                                    }
                                

                                          if (localCERT_DESC==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CERT_DESC cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCERT_DESC);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_SHTNAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_SHTNAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_SHTNAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_SHTNAME");
                                    }
                                

                                          if (localCUST_SHTNAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_SHTNAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_SHTNAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_ENNAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_ENNAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_ENNAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_ENNAME");
                                    }
                                

                                          if (localCUST_ENNAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_ENNAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_ENNAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_SPNAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_SPNAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_SPNAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_SPNAME");
                                    }
                                

                                          if (localCUST_SPNAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_SPNAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_SPNAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_BNAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_BNAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_BNAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_BNAME");
                                    }
                                

                                          if (localCUST_BNAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_BNAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_BNAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGOVN_CERT_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"GOVN_CERT_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"GOVN_CERT_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("GOVN_CERT_NO");
                                    }
                                

                                          if (localGOVN_CERT_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("GOVN_CERT_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGOVN_CERT_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGOVN_EFFT_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"GOVN_EFFT_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"GOVN_EFFT_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("GOVN_EFFT_DATE");
                                    }
                                

                                          if (localGOVN_EFFT_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("GOVN_EFFT_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGOVN_EFFT_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGOVN_EXPD_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"GOVN_EXPD_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"GOVN_EXPD_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("GOVN_EXPD_DATE");
                                    }
                                

                                          if (localGOVN_EXPD_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("GOVN_EXPD_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGOVN_EXPD_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localGOVN_REVIEW_YEARTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"GOVN_REVIEW_YEAR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"GOVN_REVIEW_YEAR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("GOVN_REVIEW_YEAR");
                                    }
                                

                                          if (localGOVN_REVIEW_YEAR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("GOVN_REVIEW_YEAR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localGOVN_REVIEW_YEAR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localORG_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ORG_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ORG_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ORG_CODE");
                                    }
                                

                                          if (localORG_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ORG_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localORG_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localORG_CODE_ISSUTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ORG_CODE_ISSU", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ORG_CODE_ISSU");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ORG_CODE_ISSU");
                                    }
                                

                                          if (localORG_CODE_ISSU==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ORG_CODE_ISSU cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localORG_CODE_ISSU);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localORG_CODE_ISS_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ORG_CODE_ISS_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ORG_CODE_ISS_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ORG_CODE_ISS_DATE");
                                    }
                                

                                          if (localORG_CODE_ISS_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ORG_CODE_ISS_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localORG_CODE_ISS_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localORG_CODE_DUE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ORG_CODE_DUE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ORG_CODE_DUE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ORG_CODE_DUE_DATE");
                                    }
                                

                                          if (localORG_CODE_DUE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ORG_CODE_DUE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localORG_CODE_DUE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_ORGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_ORG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_ORG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_ORG");
                                    }
                                

                                          if (localREG_ORG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_ORG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_ORG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_TYPE");
                                    }
                                

                                          if (localREG_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_CHECK_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_CHECK_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_CHECK_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_CHECK_DATE");
                                    }
                                

                                          if (localREG_CHECK_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_CHECK_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_CHECK_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_COUNTRYTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_COUNTRY", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_COUNTRY");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_COUNTRY");
                                    }
                                

                                          if (localREG_COUNTRY==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_COUNTRY cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_COUNTRY);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_PROVINCETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_PROVINCE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_PROVINCE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_PROVINCE");
                                    }
                                

                                          if (localREG_PROVINCE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_PROVINCE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_PROVINCE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_AREA_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_AREA_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_AREA_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_AREA_CODE");
                                    }
                                

                                          if (localREG_AREA_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_AREA_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_AREA_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_DATE");
                                    }
                                

                                          if (localREG_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_CPTLTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_CPTL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_CPTL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_CPTL");
                                    }
                                

                                          if (localREG_CPTL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_CPTL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_CPTL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_CPTL_CURRTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_CPTL_CURR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_CPTL_CURR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_CPTL_CURR");
                                    }
                                

                                          if (localREG_CPTL_CURR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_CPTL_CURR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_CPTL_CURR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPAID_CPTLTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PAID_CPTL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PAID_CPTL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PAID_CPTL");
                                    }
                                

                                          if (localPAID_CPTL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PAID_CPTL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPAID_CPTL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPAID_CPTL_CURRTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PAID_CPTL_CURR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PAID_CPTL_CURR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PAID_CPTL_CURR");
                                    }
                                

                                          if (localPAID_CPTL_CURR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PAID_CPTL_CURR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPAID_CPTL_CURR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localORG_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ORG_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ORG_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ORG_TYPE");
                                    }
                                

                                          if (localORG_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ORG_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localORG_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCORP_NATURETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CORP_NATURE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CORP_NATURE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CORP_NATURE");
                                    }
                                

                                          if (localCORP_NATURE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CORP_NATURE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCORP_NATURE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCORP_ATTRTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CORP_ATTR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CORP_ATTR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CORP_ATTR");
                                    }
                                

                                          if (localCORP_ATTR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CORP_ATTR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCORP_ATTR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMNGMT_ORG_FORMTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MNGMT_ORG_FORM", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MNGMT_ORG_FORM");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MNGMT_ORG_FORM");
                                    }
                                

                                          if (localMNGMT_ORG_FORM==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MNGMT_ORG_FORM cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMNGMT_ORG_FORM);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_SUBJ_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_SUBJ_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_SUBJ_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_SUBJ_TYPE");
                                    }
                                

                                          if (localCUST_SUBJ_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_SUBJ_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_SUBJ_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTAX_REG_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TAX_REG_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TAX_REG_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TAX_REG_NO");
                                    }
                                

                                          if (localTAX_REG_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TAX_REG_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTAX_REG_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREG_EXPD_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REG_EXPD_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REG_EXPD_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REG_EXPD_DATE");
                                    }
                                

                                          if (localREG_EXPD_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REG_EXPD_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREG_EXPD_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTAX_REG_ORGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TAX_REG_ORG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TAX_REG_ORG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TAX_REG_ORG");
                                    }
                                

                                          if (localTAX_REG_ORG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TAX_REG_ORG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTAX_REG_ORG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTAX_AREA_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TAX_AREA_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TAX_AREA_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TAX_AREA_NO");
                                    }
                                

                                          if (localTAX_AREA_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TAX_AREA_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTAX_AREA_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAREA_EXPD_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"AREA_EXPD_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"AREA_EXPD_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("AREA_EXPD_DATE");
                                    }
                                

                                          if (localAREA_EXPD_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("AREA_EXPD_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAREA_EXPD_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAREA_REG_ORGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"AREA_REG_ORG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"AREA_REG_ORG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("AREA_REG_ORG");
                                    }
                                

                                          if (localAREA_REG_ORG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("AREA_REG_ORG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAREA_REG_ORG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIDVU_TX_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"IDVU_TX_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"IDVU_TX_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("IDVU_TX_NO");
                                    }
                                

                                          if (localIDVU_TX_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("IDVU_TX_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIDVU_TX_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLOAN_CARD_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LOAN_CARD_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LOAN_CARD_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LOAN_CARD_FLAG");
                                    }
                                

                                          if (localLOAN_CARD_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLOAN_CARD_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLOAN_CARD_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LOAN_CARD_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LOAN_CARD_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LOAN_CARD_NO");
                                    }
                                

                                          if (localLOAN_CARD_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLOAN_CARD_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLOAN_CARD_DUE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LOAN_CARD_DUE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LOAN_CARD_DUE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LOAN_CARD_DUE_DATE");
                                    }
                                

                                          if (localLOAN_CARD_DUE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_DUE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLOAN_CARD_DUE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLOAN_CARD_CHK_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LOAN_CARD_CHK_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LOAN_CARD_CHK_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LOAN_CARD_CHK_DATE");
                                    }
                                

                                          if (localLOAN_CARD_CHK_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_CHK_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLOAN_CARD_CHK_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localUNIT_CREDIT_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"UNIT_CREDIT_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"UNIT_CREDIT_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("UNIT_CREDIT_CODE");
                                    }
                                

                                          if (localUNIT_CREDIT_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("UNIT_CREDIT_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localUNIT_CREDIT_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDEPT_NAT_ECONTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"DEPT_NAT_ECON", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"DEPT_NAT_ECON");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("DEPT_NAT_ECON");
                                    }
                                

                                          if (localDEPT_NAT_ECON==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("DEPT_NAT_ECON cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDEPT_NAT_ECON);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMANG_DEPTTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MANG_DEPT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MANG_DEPT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MANG_DEPT");
                                    }
                                

                                          if (localMANG_DEPT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MANG_DEPT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMANG_DEPT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCORP_SUBJTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CORP_SUBJ", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CORP_SUBJ");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CORP_SUBJ");
                                    }
                                

                                          if (localCORP_SUBJ==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CORP_SUBJ cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCORP_SUBJ);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localINDUSTRY_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"INDUSTRY_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"INDUSTRY_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("INDUSTRY_TYPE");
                                    }
                                

                                          if (localINDUSTRY_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("INDUSTRY_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localINDUSTRY_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localECON_KINDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ECON_KIND", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ECON_KIND");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ECON_KIND");
                                    }
                                

                                          if (localECON_KIND==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ECON_KIND cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localECON_KIND);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_LIC_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_LIC_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_LIC_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_LIC_NO");
                                    }
                                

                                          if (localBASIC_ACC_LIC_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_LIC_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_LIC_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_PERMIT_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_PERMIT_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_PERMIT_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_PERMIT_NO");
                                    }
                                

                                          if (localBASIC_ACC_PERMIT_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_PERMIT_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_PERMIT_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_BANK_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_BANK_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_BANK_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_BANK_NO");
                                    }
                                

                                          if (localBASIC_ACC_BANK_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_BANK_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_BANK_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_OPEN_BANKTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_OPEN_BANK", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_OPEN_BANK");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_OPEN_BANK");
                                    }
                                

                                          if (localBASIC_ACC_OPEN_BANK==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_OPEN_BANK cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_OPEN_BANK);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_NO");
                                    }
                                

                                          if (localBASIC_ACC_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_NAME");
                                    }
                                

                                          if (localBASIC_ACC_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_OPEN_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_OPEN_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_OPEN_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_OPEN_DATE");
                                    }
                                

                                          if (localBASIC_ACC_OPEN_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_OPEN_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_OPEN_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBASIC_ACC_STATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BASIC_ACC_STATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BASIC_ACC_STATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BASIC_ACC_STATE");
                                    }
                                

                                          if (localBASIC_ACC_STATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_STATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBASIC_ACC_STATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBUSI_LIC_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BUSI_LIC_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BUSI_LIC_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BUSI_LIC_NO");
                                    }
                                

                                          if (localBUSI_LIC_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BUSI_LIC_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBUSI_LIC_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localADMN_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ADMN_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ADMN_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ADMN_TYPE");
                                    }
                                

                                          if (localADMN_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ADMN_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localADMN_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSIDE_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SIDE_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SIDE_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SIDE_TYPE");
                                    }
                                

                                          if (localSIDE_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SIDE_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSIDE_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCOUNTRY_MNGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"COUNTRY_MNG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"COUNTRY_MNG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("COUNTRY_MNG");
                                    }
                                

                                          if (localCOUNTRY_MNG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("COUNTRY_MNG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCOUNTRY_MNG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPROVINCE_MNGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PROVINCE_MNG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PROVINCE_MNG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PROVINCE_MNG");
                                    }
                                

                                          if (localPROVINCE_MNG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PROVINCE_MNG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPROVINCE_MNG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMNG_AREA_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MNG_AREA_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MNG_AREA_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MNG_AREA_CODE");
                                    }
                                

                                          if (localMNG_AREA_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MNG_AREA_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMNG_AREA_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMNG_SITUATIONTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MNG_SITUATION", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MNG_SITUATION");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MNG_SITUATION");
                                    }
                                

                                          if (localMNG_SITUATION==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MNG_SITUATION cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMNG_SITUATION);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMNG_OPERATE_AREATracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MNG_OPERATE_AREA", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MNG_OPERATE_AREA");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MNG_OPERATE_AREA");
                                    }
                                

                                          if (localMNG_OPERATE_AREA==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MNG_OPERATE_AREA cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMNG_OPERATE_AREA);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMNG_OPERATE_OWNERSHIPTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MNG_OPERATE_OWNERSHIP", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MNG_OPERATE_OWNERSHIP");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MNG_OPERATE_OWNERSHIP");
                                    }
                                

                                          if (localMNG_OPERATE_OWNERSHIP==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MNG_OPERATE_OWNERSHIP cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localMNG_OPERATE_OWNERSHIP);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCOMP_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"COMP_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"COMP_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("COMP_SIZE");
                                    }
                                

                                          if (localCOMP_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("COMP_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCOMP_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localASSETS_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ASSETS_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ASSETS_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ASSETS_SIZE");
                                    }
                                

                                          if (localASSETS_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ASSETS_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localASSETS_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEMP_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"EMP_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"EMP_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("EMP_SIZE");
                                    }
                                

                                          if (localEMP_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EMP_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEMP_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIMPT_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"IMPT_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"IMPT_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("IMPT_SIZE");
                                    }
                                

                                          if (localIMPT_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("IMPT_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIMPT_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEXIT_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"EXIT_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"EXIT_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("EXIT_SIZE");
                                    }
                                

                                          if (localEXIT_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EXIT_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEXIT_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSALE_SIZETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SALE_SIZE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SALE_SIZE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SALE_SIZE");
                                    }
                                

                                          if (localSALE_SIZE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SALE_SIZE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSALE_SIZE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEMP_NUMTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"EMP_NUM", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"EMP_NUM");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("EMP_NUM");
                                    }
                                

                                          if (localEMP_NUM==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EMP_NUM cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEMP_NUM);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTOTAL_ASSETSTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TOTAL_ASSETS", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TOTAL_ASSETS");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TOTAL_ASSETS");
                                    }
                                

                                          if (localTOTAL_ASSETS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TOTAL_ASSETS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTOTAL_ASSETS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNET_ASSETSTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"NET_ASSETS", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"NET_ASSETS");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("NET_ASSETS");
                                    }
                                

                                          if (localNET_ASSETS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NET_ASSETS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNET_ASSETS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSELL_SUMTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SELL_SUM", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SELL_SUM");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SELL_SUM");
                                    }
                                

                                          if (localSELL_SUM==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SELL_SUM cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSELL_SUM);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localANNUAL_INCOMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ANNUAL_INCOME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ANNUAL_INCOME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ANNUAL_INCOME");
                                    }
                                

                                          if (localANNUAL_INCOME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ANNUAL_INCOME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localANNUAL_INCOME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFREE_TAX_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FREE_TAX_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FREE_TAX_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FREE_TAX_FLAG");
                                    }
                                

                                          if (localFREE_TAX_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FREE_TAX_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFREE_TAX_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFREE_TAX_LIMITTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FREE_TAX_LIMIT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FREE_TAX_LIMIT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FREE_TAX_LIMIT");
                                    }
                                

                                          if (localFREE_TAX_LIMIT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FREE_TAX_LIMIT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFREE_TAX_LIMIT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTAX_RATE_COUNTRYTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TAX_RATE_COUNTRY", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TAX_RATE_COUNTRY");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TAX_RATE_COUNTRY");
                                    }
                                

                                          if (localTAX_RATE_COUNTRY==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TAX_RATE_COUNTRY cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTAX_RATE_COUNTRY);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localINTEREST_RATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"INTEREST_RATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"INTEREST_RATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("INTEREST_RATE");
                                    }
                                

                                          if (localINTEREST_RATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("INTEREST_RATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localINTEREST_RATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTAX_RATE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TAX_RATE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TAX_RATE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TAX_RATE_DATE");
                                    }
                                

                                          if (localTAX_RATE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TAX_RATE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTAX_RATE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPRIVATE_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PRIVATE_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PRIVATE_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PRIVATE_FLAG");
                                    }
                                

                                          if (localPRIVATE_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PRIVATE_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPRIVATE_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLISTED_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LISTED_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LISTED_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LISTED_FLAG");
                                    }
                                

                                          if (localLISTED_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LISTED_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLISTED_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHOLDING_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HOLDING_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HOLDING_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HOLDING_TYPE");
                                    }
                                

                                          if (localHOLDING_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HOLDING_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHOLDING_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localACTUAL_CONTROLLERTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ACTUAL_CONTROLLER", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ACTUAL_CONTROLLER");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ACTUAL_CONTROLLER");
                                    }
                                

                                          if (localACTUAL_CONTROLLER==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ACTUAL_CONTROLLER cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localACTUAL_CONTROLLER);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCOUN_CORP_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"COUN_CORP_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"COUN_CORP_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("COUN_CORP_FLAG");
                                    }
                                

                                          if (localCOUN_CORP_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("COUN_CORP_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCOUN_CORP_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTOPAGRI_CORP_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TOPAGRI_CORP_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TOPAGRI_CORP_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TOPAGRI_CORP_FLAG");
                                    }
                                

                                          if (localTOPAGRI_CORP_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TOPAGRI_CORP_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTOPAGRI_CORP_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTOPAGRI_CORP_KINDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TOPAGRI_CORP_KIND", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TOPAGRI_CORP_KIND");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TOPAGRI_CORP_KIND");
                                    }
                                

                                          if (localTOPAGRI_CORP_KIND==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TOPAGRI_CORP_KIND cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTOPAGRI_CORP_KIND);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTHREE_AGR_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"THREE_AGR_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"THREE_AGR_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("THREE_AGR_FLAG");
                                    }
                                

                                          if (localTHREE_AGR_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("THREE_AGR_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTHREE_AGR_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNEW_TECH_CORPORNOTTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"NEW_TECH_CORPORNOT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"NEW_TECH_CORPORNOT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("NEW_TECH_CORPORNOT");
                                    }
                                

                                          if (localNEW_TECH_CORPORNOT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NEW_TECH_CORPORNOT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNEW_TECH_CORPORNOT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSPE_INDUSTRY_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SPE_INDUSTRY_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SPE_INDUSTRY_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SPE_INDUSTRY_FLAG");
                                    }
                                

                                          if (localSPE_INDUSTRY_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SPE_INDUSTRY_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSPE_INDUSTRY_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSPE_INDUSTRY_LICTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SPE_INDUSTRY_LIC", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SPE_INDUSTRY_LIC");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SPE_INDUSTRY_LIC");
                                    }
                                

                                          if (localSPE_INDUSTRY_LIC==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SPE_INDUSTRY_LIC cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSPE_INDUSTRY_LIC);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIMEX_MANA_INDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"IMEX_MANA_IND", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"IMEX_MANA_IND");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("IMEX_MANA_IND");
                                    }
                                

                                          if (localIMEX_MANA_IND==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("IMEX_MANA_IND cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIMEX_MANA_IND);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localAREA_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"AREA_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"AREA_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("AREA_TYPE");
                                    }
                                

                                          if (localAREA_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("AREA_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localAREA_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_CUST_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_CUST_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_CUST_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_CUST_TYPE");
                                    }
                                

                                          if (localFIN_CUST_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_CUST_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_CUST_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_ORG_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_ORG_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_ORG_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_ORG_TYPE");
                                    }
                                

                                          if (localFIN_ORG_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_ORG_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_ORG_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSWIFT_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SWIFT_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SWIFT_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SWIFT_NO");
                                    }
                                

                                          if (localSWIFT_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SWIFT_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSWIFT_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPAY_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PAY_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PAY_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PAY_NO");
                                    }
                                

                                          if (localPAY_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PAY_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPAY_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_LIC_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_LIC_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_LIC_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_LIC_NO");
                                    }
                                

                                          if (localFIN_LIC_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_LIC_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_LIC_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_ORG_CDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_ORG_CD", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_ORG_CD");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_ORG_CD");
                                    }
                                

                                          if (localFIN_ORG_CD==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_ORG_CD cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_ORG_CD);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_MANAGE_AREATracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_MANAGE_AREA", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_MANAGE_AREA");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_MANAGE_AREA");
                                    }
                                

                                          if (localFIN_MANAGE_AREA==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_MANAGE_AREA cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_MANAGE_AREA);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFIN_DEPT_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FIN_DEPT_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FIN_DEPT_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FIN_DEPT_FLAG");
                                    }
                                

                                          if (localFIN_DEPT_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FIN_DEPT_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFIN_DEPT_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localDEPT_FIN_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"DEPT_FIN_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"DEPT_FIN_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("DEPT_FIN_FLAG");
                                    }
                                

                                          if (localDEPT_FIN_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("DEPT_FIN_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localDEPT_FIN_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_FORE_EXCH_ATTRTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_FORE_EXCH_ATTR", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_FORE_EXCH_ATTR");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_FORE_EXCH_ATTR");
                                    }
                                

                                          if (localCUST_FORE_EXCH_ATTR==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_FORE_EXCH_ATTR cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_FORE_EXCH_ATTR);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localNRA_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"NRA_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"NRA_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("NRA_FLAG");
                                    }
                                

                                          if (localNRA_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("NRA_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localNRA_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSPE_INST_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SPE_INST_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SPE_INST_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SPE_INST_CODE");
                                    }
                                

                                          if (localSPE_INST_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SPE_INST_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSPE_INST_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_CUST_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_CUST_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_CUST_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_CUST_TYPE");
                                    }
                                

                                          if (localFORE_CUST_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_CUST_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_CUST_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_EXCH_LIC_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_EXCH_LIC_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_EXCH_LIC_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_EXCH_LIC_NO");
                                    }
                                

                                          if (localFORE_EXCH_LIC_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_EXCH_LIC_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_EXCH_LIC_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBUSI_SITE_CODETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BUSI_SITE_CODE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BUSI_SITE_CODE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BUSI_SITE_CODE");
                                    }
                                

                                          if (localBUSI_SITE_CODE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BUSI_SITE_CODE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBUSI_SITE_CODE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localRES_COUNTRYTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"RES_COUNTRY", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"RES_COUNTRY");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("RES_COUNTRY");
                                    }
                                

                                          if (localRES_COUNTRY==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("RES_COUNTRY cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localRES_COUNTRY);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_BASIC_ACC_BANKTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_BASIC_ACC_BANK", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_BASIC_ACC_BANK");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_BASIC_ACC_BANK");
                                    }
                                

                                          if (localFORE_BASIC_ACC_BANK==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_BASIC_ACC_BANK cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_BASIC_ACC_BANK);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_BASIC_ACCTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_BASIC_ACC", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_BASIC_ACC");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_BASIC_ACC");
                                    }
                                

                                          if (localFORE_BASIC_ACC==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_BASIC_ACC cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_BASIC_ACC);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_INV_COUNTRYTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_INV_COUNTRY", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_INV_COUNTRY");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_INV_COUNTRY");
                                    }
                                

                                          if (localFORE_INV_COUNTRY==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_INV_COUNTRY cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_INV_COUNTRY);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_ECON_TRDE_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_ECON_TRDE_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_ECON_TRDE_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_ECON_TRDE_FLAG");
                                    }
                                

                                          if (localFORE_ECON_TRDE_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_ECON_TRDE_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_ECON_TRDE_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSPE_ECON_INST_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SPE_ECON_INST_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SPE_ECON_INST_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SPE_ECON_INST_FLAG");
                                    }
                                

                                          if (localSPE_ECON_INST_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SPE_ECON_INST_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSPE_ECON_INST_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSPE_ECON_INST_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SPE_ECON_INST_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SPE_ECON_INST_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SPE_ECON_INST_TYPE");
                                    }
                                

                                          if (localSPE_ECON_INST_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SPE_ECON_INST_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSPE_ECON_INST_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localPAY_LIS_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"PAY_LIS_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"PAY_LIS_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("PAY_LIS_FLAG");
                                    }
                                

                                          if (localPAY_LIS_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("PAY_LIS_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localPAY_LIS_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_SAFE_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_SAFE_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_SAFE_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_SAFE_NO");
                                    }
                                

                                          if (localFORE_SAFE_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_SAFE_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_SAFE_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_INDUSTRY_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_INDUSTRY_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_INDUSTRY_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_INDUSTRY_TYPE");
                                    }
                                

                                          if (localFORE_INDUSTRY_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_INDUSTRY_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_INDUSTRY_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_ECON_TYPETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_ECON_TYPE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_ECON_TYPE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_ECON_TYPE");
                                    }
                                

                                          if (localFORE_ECON_TYPE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_ECON_TYPE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_ECON_TYPE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_FIRST_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_FIRST_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_FIRST_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_FIRST_NAME");
                                    }
                                

                                          if (localFORE_FIRST_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_FIRST_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_FIRST_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFORE_SECOND_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FORE_SECOND_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FORE_SECOND_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FORE_SECOND_NAME");
                                    }
                                

                                          if (localFORE_SECOND_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FORE_SECOND_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFORE_SECOND_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBANK_REL_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BANK_REL_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BANK_REL_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BANK_REL_FLAG");
                                    }
                                

                                          if (localBANK_REL_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BANK_REL_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBANK_REL_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSHAREHOLDER_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SHAREHOLDER_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SHAREHOLDER_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SHAREHOLDER_FLAG");
                                    }
                                

                                          if (localSHAREHOLDER_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SHAREHOLDER_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSHAREHOLDER_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSTOCK_NUMTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"STOCK_NUM", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"STOCK_NUM");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("STOCK_NUM");
                                    }
                                

                                          if (localSTOCK_NUM==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("STOCK_NUM cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSTOCK_NUM);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSTOCK_ACCTTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"STOCK_ACCT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"STOCK_ACCT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("STOCK_ACCT");
                                    }
                                

                                          if (localSTOCK_ACCT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("STOCK_ACCT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSTOCK_ACCT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREL_UNIT_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REL_UNIT_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REL_UNIT_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REL_UNIT_FLAG");
                                    }
                                

                                          if (localREL_UNIT_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REL_UNIT_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREL_UNIT_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_EVAL_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_EVAL_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_EVAL_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_EVAL_LEVEL");
                                    }
                                

                                          if (localCUST_EVAL_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_EVAL_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_EVAL_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBANK_CREDIT_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BANK_CREDIT_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BANK_CREDIT_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BANK_CREDIT_LEVEL");
                                    }
                                

                                          if (localBANK_CREDIT_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BANK_CREDIT_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBANK_CREDIT_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBANK_EVALUATE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BANK_EVALUATE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BANK_EVALUATE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BANK_EVALUATE_DATE");
                                    }
                                

                                          if (localBANK_EVALUATE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BANK_EVALUATE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBANK_EVALUATE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBANK_ORG_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BANK_ORG_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BANK_ORG_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BANK_ORG_NAME");
                                    }
                                

                                          if (localBANK_ORG_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BANK_ORG_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBANK_ORG_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBANK_ORG_RESULTTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BANK_ORG_RESULT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BANK_ORG_RESULT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BANK_ORG_RESULT");
                                    }
                                

                                          if (localBANK_ORG_RESULT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BANK_ORG_RESULT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBANK_ORG_RESULT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOTHER_CREDIT_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OTHER_CREDIT_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OTHER_CREDIT_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OTHER_CREDIT_LEVEL");
                                    }
                                

                                          if (localOTHER_CREDIT_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OTHER_CREDIT_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOTHER_CREDIT_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOTHER_EVALUATE_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OTHER_EVALUATE_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OTHER_EVALUATE_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OTHER_EVALUATE_DATE");
                                    }
                                

                                          if (localOTHER_EVALUATE_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OTHER_EVALUATE_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOTHER_EVALUATE_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOTHER_ORG_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OTHER_ORG_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OTHER_ORG_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OTHER_ORG_NAME");
                                    }
                                

                                          if (localOTHER_ORG_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OTHER_ORG_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOTHER_ORG_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOTHER_ORG_RESULTTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OTHER_ORG_RESULT", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OTHER_ORG_RESULT");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OTHER_ORG_RESULT");
                                    }
                                

                                          if (localOTHER_ORG_RESULT==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OTHER_ORG_RESULT cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOTHER_ORG_RESULT);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localEVALUATE_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"EVALUATE_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"EVALUATE_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("EVALUATE_LEVEL");
                                    }
                                

                                          if (localEVALUATE_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("EVALUATE_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localEVALUATE_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUAT_RISK_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUAT_RISK_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUAT_RISK_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUAT_RISK_LEVEL");
                                    }
                                

                                          if (localCUAT_RISK_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUAT_RISK_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUAT_RISK_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_LEVELTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_LEVEL", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_LEVEL");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_LEVEL");
                                    }
                                

                                          if (localCUST_LEVEL==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_LEVEL cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_LEVEL);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localIDE_CHECK_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"IDE_CHECK_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"IDE_CHECK_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("IDE_CHECK_FLAG");
                                    }
                                

                                          if (localIDE_CHECK_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("IDE_CHECK_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localIDE_CHECK_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_MANAGER_NOTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_MANAGER_NO", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_MANAGER_NO");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_MANAGER_NO");
                                    }
                                

                                          if (localCUST_MANAGER_NO==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_MANAGER_NO cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_MANAGER_NO);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_MNG_NAMETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_MNG_NAME", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_MNG_NAME");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_MNG_NAME");
                                    }
                                

                                          if (localCUST_MNG_NAME==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_MNG_NAME cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_MNG_NAME);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOWN_ORGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OWN_ORG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OWN_ORG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OWN_ORG");
                                    }
                                

                                          if (localOWN_ORG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OWN_ORG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOWN_ORG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOPEN_ORGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OPEN_ORG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OPEN_ORG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OPEN_ORG");
                                    }
                                

                                          if (localOPEN_ORG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OPEN_ORG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOPEN_ORG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOPEN_TELLERTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OPEN_TELLER", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OPEN_TELLER");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OPEN_TELLER");
                                    }
                                

                                          if (localOPEN_TELLER==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OPEN_TELLER cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOPEN_TELLER);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOPEN_DATETracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"OPEN_DATE", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"OPEN_DATE");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("OPEN_DATE");
                                    }
                                

                                          if (localOPEN_DATE==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("OPEN_DATE cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOPEN_DATE);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localREAL_FULL_FLAGTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"REAL_FULL_FLAG", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"REAL_FULL_FLAG");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("REAL_FULL_FLAG");
                                    }
                                

                                          if (localREAL_FULL_FLAG==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("REAL_FULL_FLAG cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localREAL_FULL_FLAG);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localCUST_STATUSTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"CUST_STATUS", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"CUST_STATUS");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("CUST_STATUS");
                                    }
                                

                                          if (localCUST_STATUS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("CUST_STATUS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localCUST_STATUS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLAST_SYSTEM_IDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LAST_SYSTEM_ID", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LAST_SYSTEM_ID");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LAST_SYSTEM_ID");
                                    }
                                

                                          if (localLAST_SYSTEM_ID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LAST_SYSTEM_ID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLAST_SYSTEM_ID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localLAST_UPDATED_TSTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"LAST_UPDATED_TS", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"LAST_UPDATED_TS");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("LAST_UPDATED_TS");
                                    }
                                

                                          if (localLAST_UPDATED_TS==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("LAST_UPDATED_TS cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localLAST_UPDATED_TS);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localECIF_CUST_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ECIF_CUST_NO"));
                                 
                                        if (localECIF_CUST_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localECIF_CUST_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ECIF_CUST_NO cannot be null!!");
                                        }
                                    } if (localCUST_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_TYPE"));
                                 
                                        if (localCUST_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_TYPE cannot be null!!");
                                        }
                                    } if (localPARTY_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PARTY_NAME"));
                                 
                                        if (localPARTY_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPARTY_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PARTY_NAME cannot be null!!");
                                        }
                                    } if (localCERT_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_TYPE"));
                                 
                                        if (localCERT_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_TYPE cannot be null!!");
                                        }
                                    } if (localCERT_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_NO"));
                                 
                                        if (localCERT_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_NO cannot be null!!");
                                        }
                                    } if (localCERT_ORG_NATTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_ORG_NAT"));
                                 
                                        if (localCERT_ORG_NAT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_ORG_NAT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_ORG_NAT cannot be null!!");
                                        }
                                    } if (localCERT_ORG_AREATracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_ORG_AREA"));
                                 
                                        if (localCERT_ORG_AREA != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_ORG_AREA));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_ORG_AREA cannot be null!!");
                                        }
                                    } if (localCERT_ORG_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_ORG_NAME"));
                                 
                                        if (localCERT_ORG_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_ORG_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_ORG_NAME cannot be null!!");
                                        }
                                    } if (localCERT_ISSUE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_ISSUE_DATE"));
                                 
                                        if (localCERT_ISSUE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_ISSUE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_ISSUE_DATE cannot be null!!");
                                        }
                                    } if (localCERT_DUE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_DUE_DATE"));
                                 
                                        if (localCERT_DUE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_DUE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_DUE_DATE cannot be null!!");
                                        }
                                    } if (localCERT_TYPE_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_TYPE_FLAG"));
                                 
                                        if (localCERT_TYPE_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_TYPE_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_TYPE_FLAG cannot be null!!");
                                        }
                                    } if (localCERT_SUB_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_SUB_TYPE"));
                                 
                                        if (localCERT_SUB_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_SUB_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_SUB_TYPE cannot be null!!");
                                        }
                                    } if (localCERT_IMG_ADDRTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_IMG_ADDR"));
                                 
                                        if (localCERT_IMG_ADDR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_IMG_ADDR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_IMG_ADDR cannot be null!!");
                                        }
                                    } if (localCERT_DESCTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CERT_DESC"));
                                 
                                        if (localCERT_DESC != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCERT_DESC));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CERT_DESC cannot be null!!");
                                        }
                                    } if (localCUST_SHTNAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_SHTNAME"));
                                 
                                        if (localCUST_SHTNAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_SHTNAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_SHTNAME cannot be null!!");
                                        }
                                    } if (localCUST_ENNAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_ENNAME"));
                                 
                                        if (localCUST_ENNAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_ENNAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_ENNAME cannot be null!!");
                                        }
                                    } if (localCUST_SPNAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_SPNAME"));
                                 
                                        if (localCUST_SPNAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_SPNAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_SPNAME cannot be null!!");
                                        }
                                    } if (localCUST_BNAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_BNAME"));
                                 
                                        if (localCUST_BNAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_BNAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_BNAME cannot be null!!");
                                        }
                                    } if (localGOVN_CERT_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "GOVN_CERT_NO"));
                                 
                                        if (localGOVN_CERT_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGOVN_CERT_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("GOVN_CERT_NO cannot be null!!");
                                        }
                                    } if (localGOVN_EFFT_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "GOVN_EFFT_DATE"));
                                 
                                        if (localGOVN_EFFT_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGOVN_EFFT_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("GOVN_EFFT_DATE cannot be null!!");
                                        }
                                    } if (localGOVN_EXPD_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "GOVN_EXPD_DATE"));
                                 
                                        if (localGOVN_EXPD_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGOVN_EXPD_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("GOVN_EXPD_DATE cannot be null!!");
                                        }
                                    } if (localGOVN_REVIEW_YEARTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "GOVN_REVIEW_YEAR"));
                                 
                                        if (localGOVN_REVIEW_YEAR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localGOVN_REVIEW_YEAR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("GOVN_REVIEW_YEAR cannot be null!!");
                                        }
                                    } if (localORG_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ORG_CODE"));
                                 
                                        if (localORG_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localORG_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ORG_CODE cannot be null!!");
                                        }
                                    } if (localORG_CODE_ISSUTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ORG_CODE_ISSU"));
                                 
                                        if (localORG_CODE_ISSU != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localORG_CODE_ISSU));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ORG_CODE_ISSU cannot be null!!");
                                        }
                                    } if (localORG_CODE_ISS_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ORG_CODE_ISS_DATE"));
                                 
                                        if (localORG_CODE_ISS_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localORG_CODE_ISS_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ORG_CODE_ISS_DATE cannot be null!!");
                                        }
                                    } if (localORG_CODE_DUE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ORG_CODE_DUE_DATE"));
                                 
                                        if (localORG_CODE_DUE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localORG_CODE_DUE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ORG_CODE_DUE_DATE cannot be null!!");
                                        }
                                    } if (localREG_ORGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_ORG"));
                                 
                                        if (localREG_ORG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_ORG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_ORG cannot be null!!");
                                        }
                                    } if (localREG_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_TYPE"));
                                 
                                        if (localREG_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_TYPE cannot be null!!");
                                        }
                                    } if (localREG_CHECK_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_CHECK_DATE"));
                                 
                                        if (localREG_CHECK_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_CHECK_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_CHECK_DATE cannot be null!!");
                                        }
                                    } if (localREG_COUNTRYTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_COUNTRY"));
                                 
                                        if (localREG_COUNTRY != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_COUNTRY));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_COUNTRY cannot be null!!");
                                        }
                                    } if (localREG_PROVINCETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_PROVINCE"));
                                 
                                        if (localREG_PROVINCE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_PROVINCE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_PROVINCE cannot be null!!");
                                        }
                                    } if (localREG_AREA_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_AREA_CODE"));
                                 
                                        if (localREG_AREA_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_AREA_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_AREA_CODE cannot be null!!");
                                        }
                                    } if (localREG_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_DATE"));
                                 
                                        if (localREG_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_DATE cannot be null!!");
                                        }
                                    } if (localREG_CPTLTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_CPTL"));
                                 
                                        if (localREG_CPTL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_CPTL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_CPTL cannot be null!!");
                                        }
                                    } if (localREG_CPTL_CURRTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_CPTL_CURR"));
                                 
                                        if (localREG_CPTL_CURR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_CPTL_CURR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_CPTL_CURR cannot be null!!");
                                        }
                                    } if (localPAID_CPTLTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PAID_CPTL"));
                                 
                                        if (localPAID_CPTL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAID_CPTL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PAID_CPTL cannot be null!!");
                                        }
                                    } if (localPAID_CPTL_CURRTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PAID_CPTL_CURR"));
                                 
                                        if (localPAID_CPTL_CURR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAID_CPTL_CURR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PAID_CPTL_CURR cannot be null!!");
                                        }
                                    } if (localORG_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ORG_TYPE"));
                                 
                                        if (localORG_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localORG_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ORG_TYPE cannot be null!!");
                                        }
                                    } if (localCORP_NATURETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CORP_NATURE"));
                                 
                                        if (localCORP_NATURE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCORP_NATURE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CORP_NATURE cannot be null!!");
                                        }
                                    } if (localCORP_ATTRTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CORP_ATTR"));
                                 
                                        if (localCORP_ATTR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCORP_ATTR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CORP_ATTR cannot be null!!");
                                        }
                                    } if (localMNGMT_ORG_FORMTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MNGMT_ORG_FORM"));
                                 
                                        if (localMNGMT_ORG_FORM != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMNGMT_ORG_FORM));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MNGMT_ORG_FORM cannot be null!!");
                                        }
                                    } if (localCUST_SUBJ_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_SUBJ_TYPE"));
                                 
                                        if (localCUST_SUBJ_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_SUBJ_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_SUBJ_TYPE cannot be null!!");
                                        }
                                    } if (localTAX_REG_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TAX_REG_NO"));
                                 
                                        if (localTAX_REG_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTAX_REG_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TAX_REG_NO cannot be null!!");
                                        }
                                    } if (localREG_EXPD_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REG_EXPD_DATE"));
                                 
                                        if (localREG_EXPD_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREG_EXPD_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REG_EXPD_DATE cannot be null!!");
                                        }
                                    } if (localTAX_REG_ORGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TAX_REG_ORG"));
                                 
                                        if (localTAX_REG_ORG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTAX_REG_ORG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TAX_REG_ORG cannot be null!!");
                                        }
                                    } if (localTAX_AREA_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TAX_AREA_NO"));
                                 
                                        if (localTAX_AREA_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTAX_AREA_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TAX_AREA_NO cannot be null!!");
                                        }
                                    } if (localAREA_EXPD_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "AREA_EXPD_DATE"));
                                 
                                        if (localAREA_EXPD_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAREA_EXPD_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("AREA_EXPD_DATE cannot be null!!");
                                        }
                                    } if (localAREA_REG_ORGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "AREA_REG_ORG"));
                                 
                                        if (localAREA_REG_ORG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAREA_REG_ORG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("AREA_REG_ORG cannot be null!!");
                                        }
                                    } if (localIDVU_TX_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "IDVU_TX_NO"));
                                 
                                        if (localIDVU_TX_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIDVU_TX_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("IDVU_TX_NO cannot be null!!");
                                        }
                                    } if (localLOAN_CARD_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LOAN_CARD_FLAG"));
                                 
                                        if (localLOAN_CARD_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLOAN_CARD_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_FLAG cannot be null!!");
                                        }
                                    } if (localLOAN_CARD_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LOAN_CARD_NO"));
                                 
                                        if (localLOAN_CARD_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLOAN_CARD_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_NO cannot be null!!");
                                        }
                                    } if (localLOAN_CARD_DUE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LOAN_CARD_DUE_DATE"));
                                 
                                        if (localLOAN_CARD_DUE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLOAN_CARD_DUE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_DUE_DATE cannot be null!!");
                                        }
                                    } if (localLOAN_CARD_CHK_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LOAN_CARD_CHK_DATE"));
                                 
                                        if (localLOAN_CARD_CHK_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLOAN_CARD_CHK_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LOAN_CARD_CHK_DATE cannot be null!!");
                                        }
                                    } if (localUNIT_CREDIT_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "UNIT_CREDIT_CODE"));
                                 
                                        if (localUNIT_CREDIT_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localUNIT_CREDIT_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("UNIT_CREDIT_CODE cannot be null!!");
                                        }
                                    } if (localDEPT_NAT_ECONTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "DEPT_NAT_ECON"));
                                 
                                        if (localDEPT_NAT_ECON != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDEPT_NAT_ECON));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("DEPT_NAT_ECON cannot be null!!");
                                        }
                                    } if (localMANG_DEPTTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MANG_DEPT"));
                                 
                                        if (localMANG_DEPT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMANG_DEPT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MANG_DEPT cannot be null!!");
                                        }
                                    } if (localCORP_SUBJTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CORP_SUBJ"));
                                 
                                        if (localCORP_SUBJ != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCORP_SUBJ));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CORP_SUBJ cannot be null!!");
                                        }
                                    } if (localINDUSTRY_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "INDUSTRY_TYPE"));
                                 
                                        if (localINDUSTRY_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localINDUSTRY_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("INDUSTRY_TYPE cannot be null!!");
                                        }
                                    } if (localECON_KINDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ECON_KIND"));
                                 
                                        if (localECON_KIND != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localECON_KIND));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ECON_KIND cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_LIC_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_LIC_NO"));
                                 
                                        if (localBASIC_ACC_LIC_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_LIC_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_LIC_NO cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_PERMIT_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_PERMIT_NO"));
                                 
                                        if (localBASIC_ACC_PERMIT_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_PERMIT_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_PERMIT_NO cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_BANK_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_BANK_NO"));
                                 
                                        if (localBASIC_ACC_BANK_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_BANK_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_BANK_NO cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_OPEN_BANKTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_OPEN_BANK"));
                                 
                                        if (localBASIC_ACC_OPEN_BANK != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_OPEN_BANK));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_OPEN_BANK cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_NO"));
                                 
                                        if (localBASIC_ACC_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_NO cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_NAME"));
                                 
                                        if (localBASIC_ACC_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_NAME cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_OPEN_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_OPEN_DATE"));
                                 
                                        if (localBASIC_ACC_OPEN_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_OPEN_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_OPEN_DATE cannot be null!!");
                                        }
                                    } if (localBASIC_ACC_STATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BASIC_ACC_STATE"));
                                 
                                        if (localBASIC_ACC_STATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBASIC_ACC_STATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BASIC_ACC_STATE cannot be null!!");
                                        }
                                    } if (localBUSI_LIC_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BUSI_LIC_NO"));
                                 
                                        if (localBUSI_LIC_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBUSI_LIC_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BUSI_LIC_NO cannot be null!!");
                                        }
                                    } if (localADMN_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ADMN_TYPE"));
                                 
                                        if (localADMN_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localADMN_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ADMN_TYPE cannot be null!!");
                                        }
                                    } if (localSIDE_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SIDE_TYPE"));
                                 
                                        if (localSIDE_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSIDE_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SIDE_TYPE cannot be null!!");
                                        }
                                    } if (localCOUNTRY_MNGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "COUNTRY_MNG"));
                                 
                                        if (localCOUNTRY_MNG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCOUNTRY_MNG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("COUNTRY_MNG cannot be null!!");
                                        }
                                    } if (localPROVINCE_MNGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PROVINCE_MNG"));
                                 
                                        if (localPROVINCE_MNG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPROVINCE_MNG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PROVINCE_MNG cannot be null!!");
                                        }
                                    } if (localMNG_AREA_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MNG_AREA_CODE"));
                                 
                                        if (localMNG_AREA_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMNG_AREA_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MNG_AREA_CODE cannot be null!!");
                                        }
                                    } if (localMNG_SITUATIONTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MNG_SITUATION"));
                                 
                                        if (localMNG_SITUATION != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMNG_SITUATION));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MNG_SITUATION cannot be null!!");
                                        }
                                    } if (localMNG_OPERATE_AREATracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MNG_OPERATE_AREA"));
                                 
                                        if (localMNG_OPERATE_AREA != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMNG_OPERATE_AREA));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MNG_OPERATE_AREA cannot be null!!");
                                        }
                                    } if (localMNG_OPERATE_OWNERSHIPTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MNG_OPERATE_OWNERSHIP"));
                                 
                                        if (localMNG_OPERATE_OWNERSHIP != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMNG_OPERATE_OWNERSHIP));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MNG_OPERATE_OWNERSHIP cannot be null!!");
                                        }
                                    } if (localCOMP_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "COMP_SIZE"));
                                 
                                        if (localCOMP_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCOMP_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("COMP_SIZE cannot be null!!");
                                        }
                                    } if (localASSETS_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ASSETS_SIZE"));
                                 
                                        if (localASSETS_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localASSETS_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ASSETS_SIZE cannot be null!!");
                                        }
                                    } if (localEMP_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "EMP_SIZE"));
                                 
                                        if (localEMP_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEMP_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EMP_SIZE cannot be null!!");
                                        }
                                    } if (localIMPT_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "IMPT_SIZE"));
                                 
                                        if (localIMPT_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIMPT_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("IMPT_SIZE cannot be null!!");
                                        }
                                    } if (localEXIT_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "EXIT_SIZE"));
                                 
                                        if (localEXIT_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEXIT_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EXIT_SIZE cannot be null!!");
                                        }
                                    } if (localSALE_SIZETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SALE_SIZE"));
                                 
                                        if (localSALE_SIZE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSALE_SIZE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SALE_SIZE cannot be null!!");
                                        }
                                    } if (localEMP_NUMTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "EMP_NUM"));
                                 
                                        if (localEMP_NUM != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEMP_NUM));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EMP_NUM cannot be null!!");
                                        }
                                    } if (localTOTAL_ASSETSTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TOTAL_ASSETS"));
                                 
                                        if (localTOTAL_ASSETS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTOTAL_ASSETS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TOTAL_ASSETS cannot be null!!");
                                        }
                                    } if (localNET_ASSETSTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "NET_ASSETS"));
                                 
                                        if (localNET_ASSETS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNET_ASSETS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NET_ASSETS cannot be null!!");
                                        }
                                    } if (localSELL_SUMTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SELL_SUM"));
                                 
                                        if (localSELL_SUM != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSELL_SUM));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SELL_SUM cannot be null!!");
                                        }
                                    } if (localANNUAL_INCOMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ANNUAL_INCOME"));
                                 
                                        if (localANNUAL_INCOME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localANNUAL_INCOME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ANNUAL_INCOME cannot be null!!");
                                        }
                                    } if (localFREE_TAX_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FREE_TAX_FLAG"));
                                 
                                        if (localFREE_TAX_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFREE_TAX_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FREE_TAX_FLAG cannot be null!!");
                                        }
                                    } if (localFREE_TAX_LIMITTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FREE_TAX_LIMIT"));
                                 
                                        if (localFREE_TAX_LIMIT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFREE_TAX_LIMIT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FREE_TAX_LIMIT cannot be null!!");
                                        }
                                    } if (localTAX_RATE_COUNTRYTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TAX_RATE_COUNTRY"));
                                 
                                        if (localTAX_RATE_COUNTRY != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTAX_RATE_COUNTRY));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TAX_RATE_COUNTRY cannot be null!!");
                                        }
                                    } if (localINTEREST_RATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "INTEREST_RATE"));
                                 
                                        if (localINTEREST_RATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localINTEREST_RATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("INTEREST_RATE cannot be null!!");
                                        }
                                    } if (localTAX_RATE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TAX_RATE_DATE"));
                                 
                                        if (localTAX_RATE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTAX_RATE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TAX_RATE_DATE cannot be null!!");
                                        }
                                    } if (localPRIVATE_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PRIVATE_FLAG"));
                                 
                                        if (localPRIVATE_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPRIVATE_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PRIVATE_FLAG cannot be null!!");
                                        }
                                    } if (localLISTED_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LISTED_FLAG"));
                                 
                                        if (localLISTED_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLISTED_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LISTED_FLAG cannot be null!!");
                                        }
                                    } if (localHOLDING_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HOLDING_TYPE"));
                                 
                                        if (localHOLDING_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHOLDING_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HOLDING_TYPE cannot be null!!");
                                        }
                                    } if (localACTUAL_CONTROLLERTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ACTUAL_CONTROLLER"));
                                 
                                        if (localACTUAL_CONTROLLER != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localACTUAL_CONTROLLER));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ACTUAL_CONTROLLER cannot be null!!");
                                        }
                                    } if (localCOUN_CORP_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "COUN_CORP_FLAG"));
                                 
                                        if (localCOUN_CORP_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCOUN_CORP_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("COUN_CORP_FLAG cannot be null!!");
                                        }
                                    } if (localTOPAGRI_CORP_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TOPAGRI_CORP_FLAG"));
                                 
                                        if (localTOPAGRI_CORP_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTOPAGRI_CORP_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TOPAGRI_CORP_FLAG cannot be null!!");
                                        }
                                    } if (localTOPAGRI_CORP_KINDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TOPAGRI_CORP_KIND"));
                                 
                                        if (localTOPAGRI_CORP_KIND != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTOPAGRI_CORP_KIND));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TOPAGRI_CORP_KIND cannot be null!!");
                                        }
                                    } if (localTHREE_AGR_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "THREE_AGR_FLAG"));
                                 
                                        if (localTHREE_AGR_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTHREE_AGR_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("THREE_AGR_FLAG cannot be null!!");
                                        }
                                    } if (localNEW_TECH_CORPORNOTTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "NEW_TECH_CORPORNOT"));
                                 
                                        if (localNEW_TECH_CORPORNOT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNEW_TECH_CORPORNOT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NEW_TECH_CORPORNOT cannot be null!!");
                                        }
                                    } if (localSPE_INDUSTRY_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SPE_INDUSTRY_FLAG"));
                                 
                                        if (localSPE_INDUSTRY_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSPE_INDUSTRY_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SPE_INDUSTRY_FLAG cannot be null!!");
                                        }
                                    } if (localSPE_INDUSTRY_LICTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SPE_INDUSTRY_LIC"));
                                 
                                        if (localSPE_INDUSTRY_LIC != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSPE_INDUSTRY_LIC));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SPE_INDUSTRY_LIC cannot be null!!");
                                        }
                                    } if (localIMEX_MANA_INDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "IMEX_MANA_IND"));
                                 
                                        if (localIMEX_MANA_IND != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIMEX_MANA_IND));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("IMEX_MANA_IND cannot be null!!");
                                        }
                                    } if (localAREA_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "AREA_TYPE"));
                                 
                                        if (localAREA_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localAREA_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("AREA_TYPE cannot be null!!");
                                        }
                                    } if (localFIN_CUST_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_CUST_TYPE"));
                                 
                                        if (localFIN_CUST_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_CUST_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_CUST_TYPE cannot be null!!");
                                        }
                                    } if (localFIN_ORG_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_ORG_TYPE"));
                                 
                                        if (localFIN_ORG_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_ORG_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_ORG_TYPE cannot be null!!");
                                        }
                                    } if (localSWIFT_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SWIFT_NO"));
                                 
                                        if (localSWIFT_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSWIFT_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SWIFT_NO cannot be null!!");
                                        }
                                    } if (localPAY_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PAY_NO"));
                                 
                                        if (localPAY_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAY_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PAY_NO cannot be null!!");
                                        }
                                    } if (localFIN_LIC_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_LIC_NO"));
                                 
                                        if (localFIN_LIC_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_LIC_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_LIC_NO cannot be null!!");
                                        }
                                    } if (localFIN_ORG_CDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_ORG_CD"));
                                 
                                        if (localFIN_ORG_CD != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_ORG_CD));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_ORG_CD cannot be null!!");
                                        }
                                    } if (localFIN_MANAGE_AREATracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_MANAGE_AREA"));
                                 
                                        if (localFIN_MANAGE_AREA != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_MANAGE_AREA));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_MANAGE_AREA cannot be null!!");
                                        }
                                    } if (localFIN_DEPT_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FIN_DEPT_FLAG"));
                                 
                                        if (localFIN_DEPT_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFIN_DEPT_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FIN_DEPT_FLAG cannot be null!!");
                                        }
                                    } if (localDEPT_FIN_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "DEPT_FIN_FLAG"));
                                 
                                        if (localDEPT_FIN_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localDEPT_FIN_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("DEPT_FIN_FLAG cannot be null!!");
                                        }
                                    } if (localCUST_FORE_EXCH_ATTRTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_FORE_EXCH_ATTR"));
                                 
                                        if (localCUST_FORE_EXCH_ATTR != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_FORE_EXCH_ATTR));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_FORE_EXCH_ATTR cannot be null!!");
                                        }
                                    } if (localNRA_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "NRA_FLAG"));
                                 
                                        if (localNRA_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localNRA_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("NRA_FLAG cannot be null!!");
                                        }
                                    } if (localSPE_INST_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SPE_INST_CODE"));
                                 
                                        if (localSPE_INST_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSPE_INST_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SPE_INST_CODE cannot be null!!");
                                        }
                                    } if (localFORE_CUST_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_CUST_TYPE"));
                                 
                                        if (localFORE_CUST_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_CUST_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_CUST_TYPE cannot be null!!");
                                        }
                                    } if (localFORE_EXCH_LIC_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_EXCH_LIC_NO"));
                                 
                                        if (localFORE_EXCH_LIC_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_EXCH_LIC_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_EXCH_LIC_NO cannot be null!!");
                                        }
                                    } if (localBUSI_SITE_CODETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BUSI_SITE_CODE"));
                                 
                                        if (localBUSI_SITE_CODE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBUSI_SITE_CODE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BUSI_SITE_CODE cannot be null!!");
                                        }
                                    } if (localRES_COUNTRYTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "RES_COUNTRY"));
                                 
                                        if (localRES_COUNTRY != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localRES_COUNTRY));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("RES_COUNTRY cannot be null!!");
                                        }
                                    } if (localFORE_BASIC_ACC_BANKTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_BASIC_ACC_BANK"));
                                 
                                        if (localFORE_BASIC_ACC_BANK != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_BASIC_ACC_BANK));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_BASIC_ACC_BANK cannot be null!!");
                                        }
                                    } if (localFORE_BASIC_ACCTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_BASIC_ACC"));
                                 
                                        if (localFORE_BASIC_ACC != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_BASIC_ACC));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_BASIC_ACC cannot be null!!");
                                        }
                                    } if (localFORE_INV_COUNTRYTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_INV_COUNTRY"));
                                 
                                        if (localFORE_INV_COUNTRY != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_INV_COUNTRY));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_INV_COUNTRY cannot be null!!");
                                        }
                                    } if (localFORE_ECON_TRDE_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_ECON_TRDE_FLAG"));
                                 
                                        if (localFORE_ECON_TRDE_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_ECON_TRDE_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_ECON_TRDE_FLAG cannot be null!!");
                                        }
                                    } if (localSPE_ECON_INST_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SPE_ECON_INST_FLAG"));
                                 
                                        if (localSPE_ECON_INST_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSPE_ECON_INST_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SPE_ECON_INST_FLAG cannot be null!!");
                                        }
                                    } if (localSPE_ECON_INST_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SPE_ECON_INST_TYPE"));
                                 
                                        if (localSPE_ECON_INST_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSPE_ECON_INST_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SPE_ECON_INST_TYPE cannot be null!!");
                                        }
                                    } if (localPAY_LIS_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "PAY_LIS_FLAG"));
                                 
                                        if (localPAY_LIS_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localPAY_LIS_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("PAY_LIS_FLAG cannot be null!!");
                                        }
                                    } if (localFORE_SAFE_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_SAFE_NO"));
                                 
                                        if (localFORE_SAFE_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_SAFE_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_SAFE_NO cannot be null!!");
                                        }
                                    } if (localFORE_INDUSTRY_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_INDUSTRY_TYPE"));
                                 
                                        if (localFORE_INDUSTRY_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_INDUSTRY_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_INDUSTRY_TYPE cannot be null!!");
                                        }
                                    } if (localFORE_ECON_TYPETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_ECON_TYPE"));
                                 
                                        if (localFORE_ECON_TYPE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_ECON_TYPE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_ECON_TYPE cannot be null!!");
                                        }
                                    } if (localFORE_FIRST_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_FIRST_NAME"));
                                 
                                        if (localFORE_FIRST_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_FIRST_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_FIRST_NAME cannot be null!!");
                                        }
                                    } if (localFORE_SECOND_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FORE_SECOND_NAME"));
                                 
                                        if (localFORE_SECOND_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFORE_SECOND_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FORE_SECOND_NAME cannot be null!!");
                                        }
                                    } if (localBANK_REL_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BANK_REL_FLAG"));
                                 
                                        if (localBANK_REL_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBANK_REL_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BANK_REL_FLAG cannot be null!!");
                                        }
                                    } if (localSHAREHOLDER_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SHAREHOLDER_FLAG"));
                                 
                                        if (localSHAREHOLDER_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSHAREHOLDER_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SHAREHOLDER_FLAG cannot be null!!");
                                        }
                                    } if (localSTOCK_NUMTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "STOCK_NUM"));
                                 
                                        if (localSTOCK_NUM != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSTOCK_NUM));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("STOCK_NUM cannot be null!!");
                                        }
                                    } if (localSTOCK_ACCTTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "STOCK_ACCT"));
                                 
                                        if (localSTOCK_ACCT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSTOCK_ACCT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("STOCK_ACCT cannot be null!!");
                                        }
                                    } if (localREL_UNIT_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REL_UNIT_FLAG"));
                                 
                                        if (localREL_UNIT_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREL_UNIT_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REL_UNIT_FLAG cannot be null!!");
                                        }
                                    } if (localCUST_EVAL_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_EVAL_LEVEL"));
                                 
                                        if (localCUST_EVAL_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_EVAL_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_EVAL_LEVEL cannot be null!!");
                                        }
                                    } if (localBANK_CREDIT_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BANK_CREDIT_LEVEL"));
                                 
                                        if (localBANK_CREDIT_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBANK_CREDIT_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BANK_CREDIT_LEVEL cannot be null!!");
                                        }
                                    } if (localBANK_EVALUATE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BANK_EVALUATE_DATE"));
                                 
                                        if (localBANK_EVALUATE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBANK_EVALUATE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BANK_EVALUATE_DATE cannot be null!!");
                                        }
                                    } if (localBANK_ORG_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BANK_ORG_NAME"));
                                 
                                        if (localBANK_ORG_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBANK_ORG_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BANK_ORG_NAME cannot be null!!");
                                        }
                                    } if (localBANK_ORG_RESULTTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BANK_ORG_RESULT"));
                                 
                                        if (localBANK_ORG_RESULT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBANK_ORG_RESULT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BANK_ORG_RESULT cannot be null!!");
                                        }
                                    } if (localOTHER_CREDIT_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OTHER_CREDIT_LEVEL"));
                                 
                                        if (localOTHER_CREDIT_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOTHER_CREDIT_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OTHER_CREDIT_LEVEL cannot be null!!");
                                        }
                                    } if (localOTHER_EVALUATE_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OTHER_EVALUATE_DATE"));
                                 
                                        if (localOTHER_EVALUATE_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOTHER_EVALUATE_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OTHER_EVALUATE_DATE cannot be null!!");
                                        }
                                    } if (localOTHER_ORG_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OTHER_ORG_NAME"));
                                 
                                        if (localOTHER_ORG_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOTHER_ORG_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OTHER_ORG_NAME cannot be null!!");
                                        }
                                    } if (localOTHER_ORG_RESULTTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OTHER_ORG_RESULT"));
                                 
                                        if (localOTHER_ORG_RESULT != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOTHER_ORG_RESULT));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OTHER_ORG_RESULT cannot be null!!");
                                        }
                                    } if (localEVALUATE_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "EVALUATE_LEVEL"));
                                 
                                        if (localEVALUATE_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localEVALUATE_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("EVALUATE_LEVEL cannot be null!!");
                                        }
                                    } if (localCUAT_RISK_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUAT_RISK_LEVEL"));
                                 
                                        if (localCUAT_RISK_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUAT_RISK_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUAT_RISK_LEVEL cannot be null!!");
                                        }
                                    } if (localCUST_LEVELTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_LEVEL"));
                                 
                                        if (localCUST_LEVEL != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_LEVEL));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_LEVEL cannot be null!!");
                                        }
                                    } if (localIDE_CHECK_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "IDE_CHECK_FLAG"));
                                 
                                        if (localIDE_CHECK_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localIDE_CHECK_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("IDE_CHECK_FLAG cannot be null!!");
                                        }
                                    } if (localCUST_MANAGER_NOTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_MANAGER_NO"));
                                 
                                        if (localCUST_MANAGER_NO != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_MANAGER_NO));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_MANAGER_NO cannot be null!!");
                                        }
                                    } if (localCUST_MNG_NAMETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_MNG_NAME"));
                                 
                                        if (localCUST_MNG_NAME != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_MNG_NAME));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_MNG_NAME cannot be null!!");
                                        }
                                    } if (localOWN_ORGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OWN_ORG"));
                                 
                                        if (localOWN_ORG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOWN_ORG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OWN_ORG cannot be null!!");
                                        }
                                    } if (localOPEN_ORGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OPEN_ORG"));
                                 
                                        if (localOPEN_ORG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOPEN_ORG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OPEN_ORG cannot be null!!");
                                        }
                                    } if (localOPEN_TELLERTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OPEN_TELLER"));
                                 
                                        if (localOPEN_TELLER != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOPEN_TELLER));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OPEN_TELLER cannot be null!!");
                                        }
                                    } if (localOPEN_DATETracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "OPEN_DATE"));
                                 
                                        if (localOPEN_DATE != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOPEN_DATE));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("OPEN_DATE cannot be null!!");
                                        }
                                    } if (localREAL_FULL_FLAGTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "REAL_FULL_FLAG"));
                                 
                                        if (localREAL_FULL_FLAG != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localREAL_FULL_FLAG));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("REAL_FULL_FLAG cannot be null!!");
                                        }
                                    } if (localCUST_STATUSTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "CUST_STATUS"));
                                 
                                        if (localCUST_STATUS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localCUST_STATUS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("CUST_STATUS cannot be null!!");
                                        }
                                    } if (localLAST_SYSTEM_IDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LAST_SYSTEM_ID"));
                                 
                                        if (localLAST_SYSTEM_ID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLAST_SYSTEM_ID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LAST_SYSTEM_ID cannot be null!!");
                                        }
                                    } if (localLAST_UPDATED_TSTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "LAST_UPDATED_TS"));
                                 
                                        if (localLAST_UPDATED_TS != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localLAST_UPDATED_TS));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("LAST_UPDATED_TS cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_CRMS_SVR_S0110101000A202_OUT parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_CRMS_SVR_S0110101000A202_OUT object =
                new FMT_CRMS_SVR_S0110101000A202_OUT();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_CRMS_SVR_S0110101000A202_OUT".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_CRMS_SVR_S0110101000A202_OUT)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ECIF_CUST_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setECIF_CUST_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PARTY_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPARTY_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_ORG_NAT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_ORG_NAT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_ORG_AREA").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_ORG_AREA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_ORG_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_ORG_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_ISSUE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_ISSUE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_DUE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_DUE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_TYPE_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_TYPE_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_SUB_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_SUB_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_IMG_ADDR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_IMG_ADDR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CERT_DESC").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCERT_DESC(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_SHTNAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_SHTNAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_ENNAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_ENNAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_SPNAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_SPNAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_BNAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_BNAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","GOVN_CERT_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGOVN_CERT_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","GOVN_EFFT_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGOVN_EFFT_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","GOVN_EXPD_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGOVN_EXPD_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","GOVN_REVIEW_YEAR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setGOVN_REVIEW_YEAR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ORG_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setORG_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ORG_CODE_ISSU").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setORG_CODE_ISSU(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ORG_CODE_ISS_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setORG_CODE_ISS_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ORG_CODE_DUE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setORG_CODE_DUE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_ORG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_ORG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_CHECK_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_CHECK_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_COUNTRY").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_COUNTRY(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_PROVINCE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_PROVINCE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_AREA_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_AREA_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_CPTL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_CPTL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_CPTL_CURR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_CPTL_CURR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PAID_CPTL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPAID_CPTL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PAID_CPTL_CURR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPAID_CPTL_CURR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ORG_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setORG_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CORP_NATURE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCORP_NATURE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CORP_ATTR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCORP_ATTR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MNGMT_ORG_FORM").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMNGMT_ORG_FORM(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_SUBJ_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_SUBJ_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TAX_REG_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTAX_REG_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REG_EXPD_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREG_EXPD_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TAX_REG_ORG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTAX_REG_ORG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TAX_AREA_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTAX_AREA_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","AREA_EXPD_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAREA_EXPD_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","AREA_REG_ORG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAREA_REG_ORG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","IDVU_TX_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIDVU_TX_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LOAN_CARD_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLOAN_CARD_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LOAN_CARD_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLOAN_CARD_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LOAN_CARD_DUE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLOAN_CARD_DUE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LOAN_CARD_CHK_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLOAN_CARD_CHK_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","UNIT_CREDIT_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setUNIT_CREDIT_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","DEPT_NAT_ECON").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDEPT_NAT_ECON(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MANG_DEPT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMANG_DEPT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CORP_SUBJ").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCORP_SUBJ(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","INDUSTRY_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setINDUSTRY_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ECON_KIND").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setECON_KIND(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_LIC_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_LIC_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_PERMIT_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_PERMIT_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_BANK_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_BANK_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_OPEN_BANK").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_OPEN_BANK(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_OPEN_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_OPEN_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BASIC_ACC_STATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBASIC_ACC_STATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BUSI_LIC_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBUSI_LIC_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ADMN_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setADMN_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SIDE_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSIDE_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","COUNTRY_MNG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCOUNTRY_MNG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PROVINCE_MNG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPROVINCE_MNG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MNG_AREA_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMNG_AREA_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MNG_SITUATION").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMNG_SITUATION(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MNG_OPERATE_AREA").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMNG_OPERATE_AREA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MNG_OPERATE_OWNERSHIP").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMNG_OPERATE_OWNERSHIP(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","COMP_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCOMP_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ASSETS_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setASSETS_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","EMP_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEMP_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","IMPT_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIMPT_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","EXIT_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEXIT_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SALE_SIZE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSALE_SIZE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","EMP_NUM").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEMP_NUM(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TOTAL_ASSETS").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTOTAL_ASSETS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","NET_ASSETS").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNET_ASSETS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SELL_SUM").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSELL_SUM(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ANNUAL_INCOME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setANNUAL_INCOME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FREE_TAX_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFREE_TAX_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FREE_TAX_LIMIT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFREE_TAX_LIMIT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TAX_RATE_COUNTRY").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTAX_RATE_COUNTRY(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","INTEREST_RATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setINTEREST_RATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TAX_RATE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTAX_RATE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PRIVATE_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPRIVATE_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LISTED_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLISTED_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HOLDING_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHOLDING_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ACTUAL_CONTROLLER").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setACTUAL_CONTROLLER(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","COUN_CORP_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCOUN_CORP_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TOPAGRI_CORP_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTOPAGRI_CORP_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TOPAGRI_CORP_KIND").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTOPAGRI_CORP_KIND(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","THREE_AGR_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTHREE_AGR_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","NEW_TECH_CORPORNOT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNEW_TECH_CORPORNOT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SPE_INDUSTRY_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSPE_INDUSTRY_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SPE_INDUSTRY_LIC").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSPE_INDUSTRY_LIC(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","IMEX_MANA_IND").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIMEX_MANA_IND(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","AREA_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setAREA_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_CUST_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_CUST_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_ORG_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_ORG_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SWIFT_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSWIFT_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PAY_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPAY_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_LIC_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_LIC_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_ORG_CD").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_ORG_CD(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_MANAGE_AREA").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_MANAGE_AREA(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FIN_DEPT_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFIN_DEPT_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","DEPT_FIN_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setDEPT_FIN_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_FORE_EXCH_ATTR").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_FORE_EXCH_ATTR(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","NRA_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setNRA_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SPE_INST_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSPE_INST_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_CUST_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_CUST_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_EXCH_LIC_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_EXCH_LIC_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BUSI_SITE_CODE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBUSI_SITE_CODE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","RES_COUNTRY").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setRES_COUNTRY(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_BASIC_ACC_BANK").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_BASIC_ACC_BANK(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_BASIC_ACC").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_BASIC_ACC(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_INV_COUNTRY").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_INV_COUNTRY(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_ECON_TRDE_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_ECON_TRDE_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SPE_ECON_INST_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSPE_ECON_INST_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SPE_ECON_INST_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSPE_ECON_INST_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","PAY_LIS_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setPAY_LIS_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_SAFE_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_SAFE_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_INDUSTRY_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_INDUSTRY_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_ECON_TYPE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_ECON_TYPE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_FIRST_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_FIRST_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FORE_SECOND_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFORE_SECOND_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BANK_REL_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBANK_REL_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SHAREHOLDER_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSHAREHOLDER_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","STOCK_NUM").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSTOCK_NUM(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","STOCK_ACCT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSTOCK_ACCT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REL_UNIT_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREL_UNIT_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_EVAL_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_EVAL_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BANK_CREDIT_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBANK_CREDIT_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BANK_EVALUATE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBANK_EVALUATE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BANK_ORG_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBANK_ORG_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BANK_ORG_RESULT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBANK_ORG_RESULT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OTHER_CREDIT_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOTHER_CREDIT_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OTHER_EVALUATE_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOTHER_EVALUATE_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OTHER_ORG_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOTHER_ORG_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OTHER_ORG_RESULT").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOTHER_ORG_RESULT(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","EVALUATE_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setEVALUATE_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUAT_RISK_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUAT_RISK_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_LEVEL").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_LEVEL(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","IDE_CHECK_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setIDE_CHECK_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_MANAGER_NO").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_MANAGER_NO(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_MNG_NAME").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_MNG_NAME(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OWN_ORG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOWN_ORG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OPEN_ORG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOPEN_ORG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OPEN_TELLER").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOPEN_TELLER(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","OPEN_DATE").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOPEN_DATE(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","REAL_FULL_FLAG").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setREAL_FULL_FLAG(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","CUST_STATUS").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setCUST_STATUS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LAST_SYSTEM_ID").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLAST_SYSTEM_ID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","LAST_UPDATED_TS").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setLAST_UPDATED_TS(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class FMT_SOAP_UTF8_RequestHeader
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_SOAP_UTF8_RequestHeader
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for VersionNo
                        */

                        
                            protected java.lang.String localVersionNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localVersionNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getVersionNo(){
                               return localVersionNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param VersionNo
                               */
                               public void setVersionNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localVersionNoTracker = true;
                                       } else {
                                          localVersionNoTracker = false;
                                              
                                       }
                                   
                                            this.localVersionNo=param;
                                    

                               }
                            

                        /**
                        * field for ReqSysCode
                        */

                        
                            protected java.lang.String localReqSysCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSysCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSysCode(){
                               return localReqSysCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSysCode
                               */
                               public void setReqSysCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSysCodeTracker = true;
                                       } else {
                                          localReqSysCodeTracker = false;
                                              
                                       }
                                   
                                            this.localReqSysCode=param;
                                    

                               }
                            

                        /**
                        * field for ReqSecCode
                        */

                        
                            protected java.lang.String localReqSecCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSecCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSecCode(){
                               return localReqSecCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSecCode
                               */
                               public void setReqSecCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSecCodeTracker = true;
                                       } else {
                                          localReqSecCodeTracker = false;
                                              
                                       }
                                   
                                            this.localReqSecCode=param;
                                    

                               }
                            

                        /**
                        * field for TxType
                        */

                        
                            protected java.lang.String localTxType ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxTypeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxType(){
                               return localTxType;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxType
                               */
                               public void setTxType(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxTypeTracker = true;
                                       } else {
                                          localTxTypeTracker = false;
                                              
                                       }
                                   
                                            this.localTxType=param;
                                    

                               }
                            

                        /**
                        * field for TxMode
                        */

                        
                            protected java.lang.String localTxMode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxModeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxMode(){
                               return localTxMode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxMode
                               */
                               public void setTxMode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxModeTracker = true;
                                       } else {
                                          localTxModeTracker = false;
                                              
                                       }
                                   
                                            this.localTxMode=param;
                                    

                               }
                            

                        /**
                        * field for TxCode
                        */

                        
                            protected java.lang.String localTxCode ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTxCodeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTxCode(){
                               return localTxCode;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TxCode
                               */
                               public void setTxCode(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTxCodeTracker = true;
                                       } else {
                                          localTxCodeTracker = false;
                                              
                                       }
                                   
                                            this.localTxCode=param;
                                    

                               }
                            

                        /**
                        * field for ReqDate
                        */

                        
                            protected java.lang.String localReqDate ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqDateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqDate(){
                               return localReqDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqDate
                               */
                               public void setReqDate(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqDateTracker = true;
                                       } else {
                                          localReqDateTracker = false;
                                              
                                       }
                                   
                                            this.localReqDate=param;
                                    

                               }
                            

                        /**
                        * field for ReqTime
                        */

                        
                            protected java.lang.String localReqTime ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqTimeTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqTime(){
                               return localReqTime;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTime
                               */
                               public void setReqTime(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqTimeTracker = true;
                                       } else {
                                          localReqTimeTracker = false;
                                              
                                       }
                                   
                                            this.localReqTime=param;
                                    

                               }
                            

                        /**
                        * field for ReqSeqNo
                        */

                        
                            protected java.lang.String localReqSeqNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localReqSeqNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getReqSeqNo(){
                               return localReqSeqNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqSeqNo
                               */
                               public void setReqSeqNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localReqSeqNoTracker = true;
                                       } else {
                                          localReqSeqNoTracker = false;
                                              
                                       }
                                   
                                            this.localReqSeqNo=param;
                                    

                               }
                            

                        /**
                        * field for ChanlNo
                        */

                        
                            protected java.lang.String localChanlNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localChanlNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getChanlNo(){
                               return localChanlNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ChanlNo
                               */
                               public void setChanlNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localChanlNoTracker = true;
                                       } else {
                                          localChanlNoTracker = false;
                                              
                                       }
                                   
                                            this.localChanlNo=param;
                                    

                               }
                            

                        /**
                        * field for Brch
                        */

                        
                            protected java.lang.String localBrch ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBrchTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBrch(){
                               return localBrch;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Brch
                               */
                               public void setBrch(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBrchTracker = true;
                                       } else {
                                          localBrchTracker = false;
                                              
                                       }
                                   
                                            this.localBrch=param;
                                    

                               }
                            

                        /**
                        * field for TermNo
                        */

                        
                            protected java.lang.String localTermNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localTermNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getTermNo(){
                               return localTermNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param TermNo
                               */
                               public void setTermNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localTermNoTracker = true;
                                       } else {
                                          localTermNoTracker = false;
                                              
                                       }
                                   
                                            this.localTermNo=param;
                                    

                               }
                            

                        /**
                        * field for Oper
                        */

                        
                            protected java.lang.String localOper ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localOperTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getOper(){
                               return localOper;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param Oper
                               */
                               public void setOper(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localOperTracker = true;
                                       } else {
                                          localOperTracker = false;
                                              
                                       }
                                   
                                            this.localOper=param;
                                    

                               }
                            

                        /**
                        * field for SendFileName
                        */

                        
                            protected java.lang.String localSendFileName ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localSendFileNameTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getSendFileName(){
                               return localSendFileName;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param SendFileName
                               */
                               public void setSendFileName(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localSendFileNameTracker = true;
                                       } else {
                                          localSendFileNameTracker = false;
                                              
                                       }
                                   
                                            this.localSendFileName=param;
                                    

                               }
                            

                        /**
                        * field for BeginRec
                        */

                        
                            protected java.lang.String localBeginRec ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localBeginRecTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getBeginRec(){
                               return localBeginRec;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param BeginRec
                               */
                               public void setBeginRec(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localBeginRecTracker = true;
                                       } else {
                                          localBeginRecTracker = false;
                                              
                                       }
                                   
                                            this.localBeginRec=param;
                                    

                               }
                            

                        /**
                        * field for MaxRec
                        */

                        
                            protected java.math.BigInteger localMaxRec ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localMaxRecTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getMaxRec(){
                               return localMaxRec;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param MaxRec
                               */
                               public void setMaxRec(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localMaxRecTracker = true;
                                       } else {
                                          localMaxRecTracker = false;
                                              
                                       }
                                   
                                            this.localMaxRec=param;
                                    

                               }
                            

                        /**
                        * field for FileHMac
                        */

                        
                            protected java.lang.String localFileHMac ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localFileHMacTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getFileHMac(){
                               return localFileHMac;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param FileHMac
                               */
                               public void setFileHMac(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localFileHMacTracker = true;
                                       } else {
                                          localFileHMacTracker = false;
                                              
                                       }
                                   
                                            this.localFileHMac=param;
                                    

                               }
                            

                        /**
                        * field for HMac
                        */

                        
                            protected java.lang.String localHMac ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHMacTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHMac(){
                               return localHMac;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HMac
                               */
                               public void setHMac(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHMacTracker = true;
                                       } else {
                                          localHMacTracker = false;
                                              
                                       }
                                   
                                            this.localHMac=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_SOAP_UTF8_RequestHeader.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localVersionNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"VersionNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"VersionNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("VersionNo");
                                    }
                                

                                          if (localVersionNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("VersionNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localVersionNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSysCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSysCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSysCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSysCode");
                                    }
                                

                                          if (localReqSysCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSysCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSysCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSecCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSecCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSecCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSecCode");
                                    }
                                

                                          if (localReqSecCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSecCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSecCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxTypeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxType", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxType");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxType");
                                    }
                                

                                          if (localTxType==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxType cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxType);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxModeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxMode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxMode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxMode");
                                    }
                                

                                          if (localTxMode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxMode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxMode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTxCodeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TxCode", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TxCode");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TxCode");
                                    }
                                

                                          if (localTxCode==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TxCode cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTxCode);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqDateTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqDate", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqDate");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqDate");
                                    }
                                

                                          if (localReqDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqTimeTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqTime", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqTime");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqTime");
                                    }
                                

                                          if (localReqTime==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqTime cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqTime);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localReqSeqNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ReqSeqNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ReqSeqNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ReqSeqNo");
                                    }
                                

                                          if (localReqSeqNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ReqSeqNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localReqSeqNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localChanlNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"ChanlNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"ChanlNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("ChanlNo");
                                    }
                                

                                          if (localChanlNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("ChanlNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localChanlNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBrchTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"Brch", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"Brch");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("Brch");
                                    }
                                

                                          if (localBrch==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("Brch cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBrch);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localTermNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"TermNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"TermNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("TermNo");
                                    }
                                

                                          if (localTermNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("TermNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localTermNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localOperTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"Oper", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"Oper");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("Oper");
                                    }
                                

                                          if (localOper==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("Oper cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localOper);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localSendFileNameTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"SendFileName", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"SendFileName");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("SendFileName");
                                    }
                                

                                          if (localSendFileName==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("SendFileName cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localSendFileName);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localBeginRecTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"BeginRec", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"BeginRec");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("BeginRec");
                                    }
                                

                                          if (localBeginRec==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("BeginRec cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localBeginRec);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localMaxRecTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"MaxRec", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"MaxRec");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("MaxRec");
                                    }
                                

                                          if (localMaxRec==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("MaxRec cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxRec));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localFileHMacTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"FileHMac", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"FileHMac");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("FileHMac");
                                    }
                                

                                          if (localFileHMac==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("FileHMac cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localFileHMac);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHMacTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HMac", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HMac");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HMac");
                                    }
                                

                                          if (localHMac==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HMac cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHMac);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localVersionNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "VersionNo"));
                                 
                                        if (localVersionNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localVersionNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("VersionNo cannot be null!!");
                                        }
                                    } if (localReqSysCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSysCode"));
                                 
                                        if (localReqSysCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSysCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSysCode cannot be null!!");
                                        }
                                    } if (localReqSecCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSecCode"));
                                 
                                        if (localReqSecCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSecCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSecCode cannot be null!!");
                                        }
                                    } if (localTxTypeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxType"));
                                 
                                        if (localTxType != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxType));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxType cannot be null!!");
                                        }
                                    } if (localTxModeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxMode"));
                                 
                                        if (localTxMode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxMode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxMode cannot be null!!");
                                        }
                                    } if (localTxCodeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TxCode"));
                                 
                                        if (localTxCode != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTxCode));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TxCode cannot be null!!");
                                        }
                                    } if (localReqDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqDate"));
                                 
                                        if (localReqDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqDate cannot be null!!");
                                        }
                                    } if (localReqTimeTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqTime"));
                                 
                                        if (localReqTime != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqTime));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqTime cannot be null!!");
                                        }
                                    } if (localReqSeqNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqSeqNo"));
                                 
                                        if (localReqSeqNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localReqSeqNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ReqSeqNo cannot be null!!");
                                        }
                                    } if (localChanlNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "ChanlNo"));
                                 
                                        if (localChanlNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localChanlNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("ChanlNo cannot be null!!");
                                        }
                                    } if (localBrchTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "Brch"));
                                 
                                        if (localBrch != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBrch));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("Brch cannot be null!!");
                                        }
                                    } if (localTermNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "TermNo"));
                                 
                                        if (localTermNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localTermNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("TermNo cannot be null!!");
                                        }
                                    } if (localOperTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "Oper"));
                                 
                                        if (localOper != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localOper));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("Oper cannot be null!!");
                                        }
                                    } if (localSendFileNameTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "SendFileName"));
                                 
                                        if (localSendFileName != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localSendFileName));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("SendFileName cannot be null!!");
                                        }
                                    } if (localBeginRecTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "BeginRec"));
                                 
                                        if (localBeginRec != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localBeginRec));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("BeginRec cannot be null!!");
                                        }
                                    } if (localMaxRecTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "MaxRec"));
                                 
                                        if (localMaxRec != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localMaxRec));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("MaxRec cannot be null!!");
                                        }
                                    } if (localFileHMacTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "FileHMac"));
                                 
                                        if (localFileHMac != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localFileHMac));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("FileHMac cannot be null!!");
                                        }
                                    } if (localHMacTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HMac"));
                                 
                                        if (localHMac != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHMac));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HMac cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_SOAP_UTF8_RequestHeader parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_SOAP_UTF8_RequestHeader object =
                new FMT_SOAP_UTF8_RequestHeader();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_SOAP_UTF8_RequestHeader".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_SOAP_UTF8_RequestHeader)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","VersionNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setVersionNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSysCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSysCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSecCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSecCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxType").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxType(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxMode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxMode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TxCode").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTxCode(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqDate").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqTime").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqTime(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqSeqNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setReqSeqNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ChanlNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setChanlNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","Brch").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBrch(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","TermNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setTermNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","Oper").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setOper(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","SendFileName").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setSendFileName(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","BeginRec").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setBeginRec(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","MaxRec").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setMaxRec(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","FileHMac").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setFileHMac(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HMac").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHMac(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class S0110101000A202Response
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adtec.com.cn",
                "S0110101000A202Response",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for ResTranHeader
                        */

                        
                            protected FMT_SOAP_UTF8_ResTranHeader localResTranHeader ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_SOAP_UTF8_ResTranHeader
                           */
                           public  FMT_SOAP_UTF8_ResTranHeader getResTranHeader(){
                               return localResTranHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResTranHeader
                               */
                               public void setResTranHeader(FMT_SOAP_UTF8_ResTranHeader param){
                            
                                            this.localResTranHeader=param;
                                    

                               }
                            

                        /**
                        * field for ResponseBody
                        */

                        
                            protected FMT_CRMS_SVR_S0110101000A202_OUT localResponseBody ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_CRMS_SVR_S0110101000A202_OUT
                           */
                           public  FMT_CRMS_SVR_S0110101000A202_OUT getResponseBody(){
                               return localResponseBody;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResponseBody
                               */
                               public void setResponseBody(FMT_CRMS_SVR_S0110101000A202_OUT param){
                            
                                            this.localResponseBody=param;
                                    

                               }
                            

                        /**
                        * field for ResponseHeader
                        */

                        
                            protected FMT_SOAP_UTF8_ResponseHeader localResponseHeader ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_SOAP_UTF8_ResponseHeader
                           */
                           public  FMT_SOAP_UTF8_ResponseHeader getResponseHeader(){
                               return localResponseHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ResponseHeader
                               */
                               public void setResponseHeader(FMT_SOAP_UTF8_ResponseHeader param){
                            
                                            this.localResponseHeader=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       S0110101000A202Response.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                                            if (localResTranHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ResTranHeader cannot be null!!");
                                            }
                                           localResTranHeader.serialize(new javax.xml.namespace.QName("","ResTranHeader"),
                                               factory,xmlWriter);
                                        
                                            if (localResponseBody==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ResponseBody cannot be null!!");
                                            }
                                           localResponseBody.serialize(new javax.xml.namespace.QName("","ResponseBody"),
                                               factory,xmlWriter);
                                        
                                            if (localResponseHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ResponseHeader cannot be null!!");
                                            }
                                           localResponseHeader.serialize(new javax.xml.namespace.QName("","ResponseHeader"),
                                               factory,xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "ResTranHeader"));
                            
                            
                                    if (localResTranHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("ResTranHeader cannot be null!!");
                                    }
                                    elementList.add(localResTranHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "ResponseBody"));
                            
                            
                                    if (localResponseBody==null){
                                         throw new org.apache.axis2.databinding.ADBException("ResponseBody cannot be null!!");
                                    }
                                    elementList.add(localResponseBody);
                                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "ResponseHeader"));
                            
                            
                                    if (localResponseHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("ResponseHeader cannot be null!!");
                                    }
                                    elementList.add(localResponseHeader);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static S0110101000A202Response parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            S0110101000A202Response object =
                new S0110101000A202Response();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"S0110101000A202Response".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (S0110101000A202Response)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ResponseHeader").equals(reader.getName())){
                                  
                                  object.setResponseHeader(FMT_SOAP_UTF8_ResponseHeader.Factory.parse(reader));
                                
                                  reader.next();
                              
                        } // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                       if (reader.isStartElement() && new javax.xml.namespace.QName("","ResTranHeader").equals(reader.getName())){
                                  
                                  object.setResTranHeader(FMT_SOAP_UTF8_ResTranHeader.Factory.parse(reader));
                                
                                  reader.next();
                              
                        }           // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ResponseBody").equals(reader.getName())){
                                        
                                        object.setResponseBody(FMT_CRMS_SVR_S0110101000A202_OUT.Factory.parse(reader));
                                      
                                        reader.next();
                                    
                              }   // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
        public static class ExtensionMapper{

          public static java.lang.Object getTypeObject(java.lang.String namespaceURI,
                                                       java.lang.String typeName,
                                                       javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_SOAP_UTF8_ResponseHeader".equals(typeName)){
                   
                            return  FMT_SOAP_UTF8_ResponseHeader.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_CRMS_SVR_S0110101000A202_IN".equals(typeName)){
                   
                            return  FMT_CRMS_SVR_S0110101000A202_IN.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_SOAP_UTF8_ResTranHeader".equals(typeName)){
                   
                            return  FMT_SOAP_UTF8_ResTranHeader.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_SOAP_UTF8_RequestHeader".equals(typeName)){
                   
                            return  FMT_SOAP_UTF8_RequestHeader.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_CRMS_SVR_S0110101000A202_OUT".equals(typeName)){
                   
                            return  FMT_CRMS_SVR_S0110101000A202_OUT.Factory.parse(reader);
                        

                  }

              
                  if (
                  "http://www.adtec.com.cn".equals(namespaceURI) &&
                  "FMT_SOAP_UTF8_ReqTranHeader".equals(typeName)){
                   
                            return  FMT_SOAP_UTF8_ReqTranHeader.Factory.parse(reader);
                        

                  }

              
             throw new org.apache.axis2.databinding.ADBException("Unsupported type " + namespaceURI + " " + typeName);
          }

        }
    

        public static class FMT_SOAP_UTF8_ReqTranHeader
        implements org.apache.axis2.databinding.ADBBean{
        /* This type was generated from the piece of schema that had
                name = FMT_SOAP_UTF8_ReqTranHeader
                Namespace URI = http://www.adtec.com.cn
                Namespace Prefix = ns1
                */
            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for HPinSeed
                        */

                        
                            protected java.lang.String localHPinSeed ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHPinSeedTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHPinSeed(){
                               return localHPinSeed;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HPinSeed
                               */
                               public void setHPinSeed(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHPinSeedTracker = true;
                                       } else {
                                          localHPinSeedTracker = false;
                                              
                                       }
                                   
                                            this.localHPinSeed=param;
                                    

                               }
                            

                        /**
                        * field for HOriChnl
                        */

                        
                            protected java.lang.String localHOriChnl ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHOriChnlTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHOriChnl(){
                               return localHOriChnl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HOriChnl
                               */
                               public void setHOriChnl(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHOriChnlTracker = true;
                                       } else {
                                          localHOriChnlTracker = false;
                                              
                                       }
                                   
                                            this.localHOriChnl=param;
                                    

                               }
                            

                        /**
                        * field for HSecFlag
                        */

                        
                            protected java.lang.String localHSecFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSecFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSecFlag(){
                               return localHSecFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSecFlag
                               */
                               public void setHSecFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSecFlagTracker = true;
                                       } else {
                                          localHSecFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHSecFlag=param;
                                    

                               }
                            

                        /**
                        * field for HPwdFlag
                        */

                        
                            protected java.lang.String localHPwdFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHPwdFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHPwdFlag(){
                               return localHPwdFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HPwdFlag
                               */
                               public void setHPwdFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHPwdFlagTracker = true;
                                       } else {
                                          localHPwdFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHPwdFlag=param;
                                    

                               }
                            

                        /**
                        * field for HCombFlag
                        */

                        
                            protected java.lang.String localHCombFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHCombFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHCombFlag(){
                               return localHCombFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HCombFlag
                               */
                               public void setHCombFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHCombFlagTracker = true;
                                       } else {
                                          localHCombFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHCombFlag=param;
                                    

                               }
                            

                        /**
                        * field for HSvcInfo
                        */

                        
                            protected java.lang.String localHSvcInfo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSvcInfoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSvcInfo(){
                               return localHSvcInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSvcInfo
                               */
                               public void setHSvcInfo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSvcInfoTracker = true;
                                       } else {
                                          localHSvcInfoTracker = false;
                                              
                                       }
                                   
                                            this.localHSvcInfo=param;
                                    

                               }
                            

                        /**
                        * field for HSecInfoVerNo
                        */

                        
                            protected java.lang.String localHSecInfoVerNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSecInfoVerNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSecInfoVerNo(){
                               return localHSecInfoVerNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSecInfoVerNo
                               */
                               public void setHSecInfoVerNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSecInfoVerNoTracker = true;
                                       } else {
                                          localHSecInfoVerNoTracker = false;
                                              
                                       }
                                   
                                            this.localHSecInfoVerNo=param;
                                    

                               }
                            

                        /**
                        * field for HSysChnl
                        */

                        
                            protected java.lang.String localHSysChnl ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSysChnlTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSysChnl(){
                               return localHSysChnl;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSysChnl
                               */
                               public void setHSysChnl(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSysChnlTracker = true;
                                       } else {
                                          localHSysChnlTracker = false;
                                              
                                       }
                                   
                                            this.localHSysChnl=param;
                                    

                               }
                            

                        /**
                        * field for HLegaObj
                        */

                        
                            protected java.lang.String localHLegaObj ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHLegaObjTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHLegaObj(){
                               return localHLegaObj;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HLegaObj
                               */
                               public void setHLegaObj(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHLegaObjTracker = true;
                                       } else {
                                          localHLegaObjTracker = false;
                                              
                                       }
                                   
                                            this.localHLegaObj=param;
                                    

                               }
                            

                        /**
                        * field for HMsgRefNo
                        */

                        
                            protected java.lang.String localHMsgRefNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHMsgRefNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHMsgRefNo(){
                               return localHMsgRefNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HMsgRefNo
                               */
                               public void setHMsgRefNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHMsgRefNoTracker = true;
                                       } else {
                                          localHMsgRefNoTracker = false;
                                              
                                       }
                                   
                                            this.localHMsgRefNo=param;
                                    

                               }
                            

                        /**
                        * field for HintOrigMark
                        */

                        
                            protected java.math.BigInteger localHintOrigMark ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHintOrigMarkTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.math.BigInteger
                           */
                           public  java.math.BigInteger getHintOrigMark(){
                               return localHintOrigMark;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HintOrigMark
                               */
                               public void setHintOrigMark(java.math.BigInteger param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHintOrigMarkTracker = true;
                                       } else {
                                          localHintOrigMarkTracker = false;
                                              
                                       }
                                   
                                            this.localHintOrigMark=param;
                                    

                               }
                            

                        /**
                        * field for HTermNo
                        */

                        
                            protected java.lang.String localHTermNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHTermNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHTermNo(){
                               return localHTermNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HTermNo
                               */
                               public void setHTermNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHTermNoTracker = true;
                                       } else {
                                          localHTermNoTracker = false;
                                              
                                       }
                                   
                                            this.localHTermNo=param;
                                    

                               }
                            

                        /**
                        * field for HCityCd
                        */

                        
                            protected java.lang.String localHCityCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHCityCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHCityCd(){
                               return localHCityCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HCityCd
                               */
                               public void setHCityCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHCityCdTracker = true;
                                       } else {
                                          localHCityCdTracker = false;
                                              
                                       }
                                   
                                            this.localHCityCd=param;
                                    

                               }
                            

                        /**
                        * field for HCommitFlag
                        */

                        
                            protected java.lang.String localHCommitFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHCommitFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHCommitFlag(){
                               return localHCommitFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HCommitFlag
                               */
                               public void setHCommitFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHCommitFlagTracker = true;
                                       } else {
                                          localHCommitFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHCommitFlag=param;
                                    

                               }
                            

                        /**
                        * field for HBrchNo
                        */

                        
                            protected java.lang.String localHBrchNo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHBrchNoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHBrchNo(){
                               return localHBrchNo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HBrchNo
                               */
                               public void setHBrchNo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHBrchNoTracker = true;
                                       } else {
                                          localHBrchNoTracker = false;
                                              
                                       }
                                   
                                            this.localHBrchNo=param;
                                    

                               }
                            

                        /**
                        * field for HUserID
                        */

                        
                            protected java.lang.String localHUserID ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHUserIDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHUserID(){
                               return localHUserID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HUserID
                               */
                               public void setHUserID(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHUserIDTracker = true;
                                       } else {
                                          localHUserIDTracker = false;
                                              
                                       }
                                   
                                            this.localHUserID=param;
                                    

                               }
                            

                        /**
                        * field for HTxnCd
                        */

                        
                            protected java.lang.String localHTxnCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHTxnCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHTxnCd(){
                               return localHTxnCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HTxnCd
                               */
                               public void setHTxnCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHTxnCdTracker = true;
                                       } else {
                                          localHTxnCdTracker = false;
                                              
                                       }
                                   
                                            this.localHTxnCd=param;
                                    

                               }
                            

                        /**
                        * field for HTxnMod
                        */

                        
                            protected java.lang.String localHTxnMod ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHTxnModTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHTxnMod(){
                               return localHTxnMod;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HTxnMod
                               */
                               public void setHTxnMod(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHTxnModTracker = true;
                                       } else {
                                          localHTxnModTracker = false;
                                              
                                       }
                                   
                                            this.localHTxnMod=param;
                                    

                               }
                            

                        /**
                        * field for HReserveLen
                        */

                        
                            protected java.lang.String localHReserveLen ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHReserveLenTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHReserveLen(){
                               return localHReserveLen;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HReserveLen
                               */
                               public void setHReserveLen(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHReserveLenTracker = true;
                                       } else {
                                          localHReserveLenTracker = false;
                                              
                                       }
                                   
                                            this.localHReserveLen=param;
                                    

                               }
                            

                        /**
                        * field for HSenderSvcCd
                        */

                        
                            protected java.lang.String localHSenderSvcCd ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSenderSvcCdTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSenderSvcCd(){
                               return localHSenderSvcCd;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSenderSvcCd
                               */
                               public void setHSenderSvcCd(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSenderSvcCdTracker = true;
                                       } else {
                                          localHSenderSvcCdTracker = false;
                                              
                                       }
                                   
                                            this.localHSenderSvcCd=param;
                                    

                               }
                            

                        /**
                        * field for HSenderSeq
                        */

                        
                            protected java.lang.String localHSenderSeq ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSenderSeqTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSenderSeq(){
                               return localHSenderSeq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSenderSeq
                               */
                               public void setHSenderSeq(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSenderSeqTracker = true;
                                       } else {
                                          localHSenderSeqTracker = false;
                                              
                                       }
                                   
                                            this.localHSenderSeq=param;
                                    

                               }
                            

                        /**
                        * field for HSenderDate
                        */

                        
                            protected java.lang.String localHSenderDate ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSenderDateTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSenderDate(){
                               return localHSenderDate;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSenderDate
                               */
                               public void setHSenderDate(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSenderDateTracker = true;
                                       } else {
                                          localHSenderDateTracker = false;
                                              
                                       }
                                   
                                            this.localHSenderDate=param;
                                    

                               }
                            

                        /**
                        * field for HAuthUserID
                        */

                        
                            protected java.lang.String localHAuthUserID ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAuthUserIDTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAuthUserID(){
                               return localHAuthUserID;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAuthUserID
                               */
                               public void setHAuthUserID(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAuthUserIDTracker = true;
                                       } else {
                                          localHAuthUserIDTracker = false;
                                              
                                       }
                                   
                                            this.localHAuthUserID=param;
                                    

                               }
                            

                        /**
                        * field for HAuthVerfInfo
                        */

                        
                            protected java.lang.String localHAuthVerfInfo ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAuthVerfInfoTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAuthVerfInfo(){
                               return localHAuthVerfInfo;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAuthVerfInfo
                               */
                               public void setHAuthVerfInfo(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAuthVerfInfoTracker = true;
                                       } else {
                                          localHAuthVerfInfoTracker = false;
                                              
                                       }
                                   
                                            this.localHAuthVerfInfo=param;
                                    

                               }
                            

                        /**
                        * field for HAuthFlag
                        */

                        
                            protected java.lang.String localHAuthFlag ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAuthFlagTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAuthFlag(){
                               return localHAuthFlag;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAuthFlag
                               */
                               public void setHAuthFlag(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAuthFlagTracker = true;
                                       } else {
                                          localHAuthFlagTracker = false;
                                              
                                       }
                                   
                                            this.localHAuthFlag=param;
                                    

                               }
                            

                        /**
                        * field for HRefSeq
                        */

                        
                            protected java.lang.String localHRefSeq ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRefSeqTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRefSeq(){
                               return localHRefSeq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRefSeq
                               */
                               public void setHRefSeq(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRefSeqTracker = true;
                                       } else {
                                          localHRefSeqTracker = false;
                                              
                                       }
                                   
                                            this.localHRefSeq=param;
                                    

                               }
                            

                        /**
                        * field for HAuthSeri
                        */

                        
                            protected java.lang.String localHAuthSeri ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHAuthSeriTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHAuthSeri(){
                               return localHAuthSeri;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HAuthSeri
                               */
                               public void setHAuthSeri(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHAuthSeriTracker = true;
                                       } else {
                                          localHAuthSeriTracker = false;
                                              
                                       }
                                   
                                            this.localHAuthSeri=param;
                                    

                               }
                            

                        /**
                        * field for HHostSeq
                        */

                        
                            protected java.lang.String localHHostSeq ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHHostSeqTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHHostSeq(){
                               return localHHostSeq;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HHostSeq
                               */
                               public void setHHostSeq(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHHostSeqTracker = true;
                                       } else {
                                          localHHostSeqTracker = false;
                                              
                                       }
                                   
                                            this.localHHostSeq=param;
                                    

                               }
                            

                        /**
                        * field for HRefDt
                        */

                        
                            protected java.lang.String localHRefDt ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHRefDtTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHRefDt(){
                               return localHRefDt;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HRefDt
                               */
                               public void setHRefDt(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHRefDtTracker = true;
                                       } else {
                                          localHRefDtTracker = false;
                                              
                                       }
                                   
                                            this.localHRefDt=param;
                                    

                               }
                            

                        /**
                        * field for HSvcVer
                        */

                        
                            protected java.lang.String localHSvcVer ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHSvcVerTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHSvcVer(){
                               return localHSvcVer;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HSvcVer
                               */
                               public void setHSvcVer(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHSvcVerTracker = true;
                                       } else {
                                          localHSvcVerTracker = false;
                                              
                                       }
                                   
                                            this.localHSvcVer=param;
                                    

                               }
                            

                        /**
                        * field for HreserveMsg
                        */

                        
                            protected java.lang.String localHreserveMsg ;
                        
                           /*  This tracker boolean wil be used to detect whether the user called the set method
                          *   for this attribute. It will be used to determine whether to include this field
                           *   in the serialized XML
                           */
                           protected boolean localHreserveMsgTracker = false ;
                           

                           /**
                           * Auto generated getter method
                           * @return java.lang.String
                           */
                           public  java.lang.String getHreserveMsg(){
                               return localHreserveMsg;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param HreserveMsg
                               */
                               public void setHreserveMsg(java.lang.String param){
                            
                                       if (param != null){
                                          //update the setting tracker
                                          localHreserveMsgTracker = true;
                                       } else {
                                          localHreserveMsgTracker = false;
                                              
                                       }
                                   
                                            this.localHreserveMsg=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
               org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,parentQName){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       FMT_SOAP_UTF8_ReqTranHeader.this.serialize(parentQName,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               parentQName,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                 if (localHPinSeedTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HPinSeed", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HPinSeed");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HPinSeed");
                                    }
                                

                                          if (localHPinSeed==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HPinSeed cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHPinSeed);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHOriChnlTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HOriChnl", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HOriChnl");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HOriChnl");
                                    }
                                

                                          if (localHOriChnl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HOriChnl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHOriChnl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSecFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSecFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSecFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSecFlag");
                                    }
                                

                                          if (localHSecFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSecFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSecFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHPwdFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HPwdFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HPwdFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HPwdFlag");
                                    }
                                

                                          if (localHPwdFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HPwdFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHPwdFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHCombFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HCombFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HCombFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HCombFlag");
                                    }
                                

                                          if (localHCombFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HCombFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHCombFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSvcInfoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSvcInfo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSvcInfo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSvcInfo");
                                    }
                                

                                          if (localHSvcInfo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSvcInfo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSvcInfo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSecInfoVerNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSecInfoVerNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSecInfoVerNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSecInfoVerNo");
                                    }
                                

                                          if (localHSecInfoVerNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSecInfoVerNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSecInfoVerNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSysChnlTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSysChnl", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSysChnl");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSysChnl");
                                    }
                                

                                          if (localHSysChnl==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSysChnl cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSysChnl);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHLegaObjTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HLegaObj", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HLegaObj");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HLegaObj");
                                    }
                                

                                          if (localHLegaObj==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HLegaObj cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHLegaObj);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHMsgRefNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HMsgRefNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HMsgRefNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HMsgRefNo");
                                    }
                                

                                          if (localHMsgRefNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HMsgRefNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHMsgRefNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHintOrigMarkTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HintOrigMark", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HintOrigMark");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HintOrigMark");
                                    }
                                

                                          if (localHintOrigMark==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HintOrigMark cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHintOrigMark));
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHTermNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HTermNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HTermNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HTermNo");
                                    }
                                

                                          if (localHTermNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HTermNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHTermNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHCityCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HCityCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HCityCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HCityCd");
                                    }
                                

                                          if (localHCityCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HCityCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHCityCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHCommitFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HCommitFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HCommitFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HCommitFlag");
                                    }
                                

                                          if (localHCommitFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HCommitFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHCommitFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHBrchNoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HBrchNo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HBrchNo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HBrchNo");
                                    }
                                

                                          if (localHBrchNo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HBrchNo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHBrchNo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHUserIDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HUserID", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HUserID");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HUserID");
                                    }
                                

                                          if (localHUserID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HUserID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHUserID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHTxnCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HTxnCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HTxnCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HTxnCd");
                                    }
                                

                                          if (localHTxnCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HTxnCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHTxnCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHTxnModTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HTxnMod", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HTxnMod");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HTxnMod");
                                    }
                                

                                          if (localHTxnMod==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HTxnMod cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHTxnMod);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHReserveLenTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HReserveLen", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HReserveLen");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HReserveLen");
                                    }
                                

                                          if (localHReserveLen==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HReserveLen cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHReserveLen);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSenderSvcCdTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSenderSvcCd", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSenderSvcCd");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSenderSvcCd");
                                    }
                                

                                          if (localHSenderSvcCd==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSenderSvcCd cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSenderSvcCd);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSenderSeqTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSenderSeq", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSenderSeq");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSenderSeq");
                                    }
                                

                                          if (localHSenderSeq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSenderSeq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSenderSeq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSenderDateTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSenderDate", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSenderDate");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSenderDate");
                                    }
                                

                                          if (localHSenderDate==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSenderDate cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSenderDate);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAuthUserIDTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAuthUserID", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAuthUserID");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAuthUserID");
                                    }
                                

                                          if (localHAuthUserID==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAuthUserID cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAuthUserID);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAuthVerfInfoTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAuthVerfInfo", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAuthVerfInfo");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAuthVerfInfo");
                                    }
                                

                                          if (localHAuthVerfInfo==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAuthVerfInfo cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAuthVerfInfo);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAuthFlagTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAuthFlag", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAuthFlag");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAuthFlag");
                                    }
                                

                                          if (localHAuthFlag==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAuthFlag cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAuthFlag);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRefSeqTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRefSeq", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRefSeq");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRefSeq");
                                    }
                                

                                          if (localHRefSeq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRefSeq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRefSeq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHAuthSeriTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HAuthSeri", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HAuthSeri");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HAuthSeri");
                                    }
                                

                                          if (localHAuthSeri==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HAuthSeri cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHAuthSeri);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHHostSeqTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HHostSeq", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HHostSeq");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HHostSeq");
                                    }
                                

                                          if (localHHostSeq==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HHostSeq cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHHostSeq);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHRefDtTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HRefDt", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HRefDt");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HRefDt");
                                    }
                                

                                          if (localHRefDt==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HRefDt cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHRefDt);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHSvcVerTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HSvcVer", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HSvcVer");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HSvcVer");
                                    }
                                

                                          if (localHSvcVer==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HSvcVer cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHSvcVer);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             } if (localHreserveMsgTracker){
                                    namespace = "";
                                    if (! namespace.equals("")) {
                                        prefix = xmlWriter.getPrefix(namespace);

                                        if (prefix == null) {
                                            prefix = generatePrefix(namespace);

                                            xmlWriter.writeStartElement(prefix,"HreserveMsg", namespace);
                                            xmlWriter.writeNamespace(prefix, namespace);
                                            xmlWriter.setPrefix(prefix, namespace);

                                        } else {
                                            xmlWriter.writeStartElement(namespace,"HreserveMsg");
                                        }

                                    } else {
                                        xmlWriter.writeStartElement("HreserveMsg");
                                    }
                                

                                          if (localHreserveMsg==null){
                                              // write the nil attribute
                                              
                                                     throw new org.apache.axis2.databinding.ADBException("HreserveMsg cannot be null!!");
                                                  
                                          }else{

                                        
                                                   xmlWriter.writeCharacters(localHreserveMsg);
                                            
                                          }
                                    
                                   xmlWriter.writeEndElement();
                             }
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                 if (localHPinSeedTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HPinSeed"));
                                 
                                        if (localHPinSeed != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHPinSeed));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HPinSeed cannot be null!!");
                                        }
                                    } if (localHOriChnlTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HOriChnl"));
                                 
                                        if (localHOriChnl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHOriChnl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HOriChnl cannot be null!!");
                                        }
                                    } if (localHSecFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSecFlag"));
                                 
                                        if (localHSecFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSecFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSecFlag cannot be null!!");
                                        }
                                    } if (localHPwdFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HPwdFlag"));
                                 
                                        if (localHPwdFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHPwdFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HPwdFlag cannot be null!!");
                                        }
                                    } if (localHCombFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HCombFlag"));
                                 
                                        if (localHCombFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHCombFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HCombFlag cannot be null!!");
                                        }
                                    } if (localHSvcInfoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSvcInfo"));
                                 
                                        if (localHSvcInfo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSvcInfo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSvcInfo cannot be null!!");
                                        }
                                    } if (localHSecInfoVerNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSecInfoVerNo"));
                                 
                                        if (localHSecInfoVerNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSecInfoVerNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSecInfoVerNo cannot be null!!");
                                        }
                                    } if (localHSysChnlTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSysChnl"));
                                 
                                        if (localHSysChnl != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSysChnl));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSysChnl cannot be null!!");
                                        }
                                    } if (localHLegaObjTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HLegaObj"));
                                 
                                        if (localHLegaObj != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHLegaObj));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HLegaObj cannot be null!!");
                                        }
                                    } if (localHMsgRefNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HMsgRefNo"));
                                 
                                        if (localHMsgRefNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHMsgRefNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HMsgRefNo cannot be null!!");
                                        }
                                    } if (localHintOrigMarkTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HintOrigMark"));
                                 
                                        if (localHintOrigMark != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHintOrigMark));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HintOrigMark cannot be null!!");
                                        }
                                    } if (localHTermNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HTermNo"));
                                 
                                        if (localHTermNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHTermNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HTermNo cannot be null!!");
                                        }
                                    } if (localHCityCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HCityCd"));
                                 
                                        if (localHCityCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHCityCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HCityCd cannot be null!!");
                                        }
                                    } if (localHCommitFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HCommitFlag"));
                                 
                                        if (localHCommitFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHCommitFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HCommitFlag cannot be null!!");
                                        }
                                    } if (localHBrchNoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HBrchNo"));
                                 
                                        if (localHBrchNo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHBrchNo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HBrchNo cannot be null!!");
                                        }
                                    } if (localHUserIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HUserID"));
                                 
                                        if (localHUserID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHUserID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HUserID cannot be null!!");
                                        }
                                    } if (localHTxnCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HTxnCd"));
                                 
                                        if (localHTxnCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHTxnCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HTxnCd cannot be null!!");
                                        }
                                    } if (localHTxnModTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HTxnMod"));
                                 
                                        if (localHTxnMod != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHTxnMod));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HTxnMod cannot be null!!");
                                        }
                                    } if (localHReserveLenTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HReserveLen"));
                                 
                                        if (localHReserveLen != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHReserveLen));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HReserveLen cannot be null!!");
                                        }
                                    } if (localHSenderSvcCdTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSenderSvcCd"));
                                 
                                        if (localHSenderSvcCd != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSenderSvcCd));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSenderSvcCd cannot be null!!");
                                        }
                                    } if (localHSenderSeqTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSenderSeq"));
                                 
                                        if (localHSenderSeq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSenderSeq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSenderSeq cannot be null!!");
                                        }
                                    } if (localHSenderDateTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSenderDate"));
                                 
                                        if (localHSenderDate != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSenderDate));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSenderDate cannot be null!!");
                                        }
                                    } if (localHAuthUserIDTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAuthUserID"));
                                 
                                        if (localHAuthUserID != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAuthUserID));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAuthUserID cannot be null!!");
                                        }
                                    } if (localHAuthVerfInfoTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAuthVerfInfo"));
                                 
                                        if (localHAuthVerfInfo != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAuthVerfInfo));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAuthVerfInfo cannot be null!!");
                                        }
                                    } if (localHAuthFlagTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAuthFlag"));
                                 
                                        if (localHAuthFlag != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAuthFlag));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAuthFlag cannot be null!!");
                                        }
                                    } if (localHRefSeqTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRefSeq"));
                                 
                                        if (localHRefSeq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRefSeq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRefSeq cannot be null!!");
                                        }
                                    } if (localHAuthSeriTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HAuthSeri"));
                                 
                                        if (localHAuthSeri != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHAuthSeri));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HAuthSeri cannot be null!!");
                                        }
                                    } if (localHHostSeqTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HHostSeq"));
                                 
                                        if (localHHostSeq != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHHostSeq));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HHostSeq cannot be null!!");
                                        }
                                    } if (localHRefDtTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HRefDt"));
                                 
                                        if (localHRefDt != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHRefDt));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HRefDt cannot be null!!");
                                        }
                                    } if (localHSvcVerTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HSvcVer"));
                                 
                                        if (localHSvcVer != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHSvcVer));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HSvcVer cannot be null!!");
                                        }
                                    } if (localHreserveMsgTracker){
                                      elementList.add(new javax.xml.namespace.QName("",
                                                                      "HreserveMsg"));
                                 
                                        if (localHreserveMsg != null){
                                            elementList.add(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(localHreserveMsg));
                                        } else {
                                           throw new org.apache.axis2.databinding.ADBException("HreserveMsg cannot be null!!");
                                        }
                                    }

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static FMT_SOAP_UTF8_ReqTranHeader parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            FMT_SOAP_UTF8_ReqTranHeader object =
                new FMT_SOAP_UTF8_ReqTranHeader();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"FMT_SOAP_UTF8_ReqTranHeader".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (FMT_SOAP_UTF8_ReqTranHeader)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HPinSeed").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHPinSeed(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HOriChnl").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHOriChnl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSecFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSecFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HPwdFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHPwdFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HCombFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHCombFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSvcInfo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSvcInfo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSecInfoVerNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSecInfoVerNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSysChnl").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSysChnl(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HLegaObj").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHLegaObj(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HMsgRefNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHMsgRefNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HintOrigMark").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHintOrigMark(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToInteger(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HTermNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHTermNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HCityCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHCityCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HCommitFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHCommitFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HBrchNo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHBrchNo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HUserID").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHUserID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HTxnCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHTxnCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HTxnMod").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHTxnMod(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HReserveLen").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHReserveLen(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSenderSvcCd").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSenderSvcCd(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSenderSeq").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSenderSeq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSenderDate").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSenderDate(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAuthUserID").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAuthUserID(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAuthVerfInfo").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAuthVerfInfo(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAuthFlag").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAuthFlag(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRefSeq").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRefSeq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HAuthSeri").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHAuthSeri(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HHostSeq").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHHostSeq(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HRefDt").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHRefDt(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HSvcVer").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHSvcVer(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","HreserveMsg").equals(reader.getName())){
                                
                                    java.lang.String content = reader.getElementText();
                                    
                                              object.setHreserveMsg(
                                                    org.apache.axis2.databinding.utils.ConverterUtil.convertToString(content));
                                              
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                    else {
                                        
                                    }
                                  
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          

        public static class S0110101000A202
        implements org.apache.axis2.databinding.ADBBean{
        
                public static final javax.xml.namespace.QName MY_QNAME = new javax.xml.namespace.QName(
                "http://www.adtec.com.cn",
                "S0110101000A202",
                "ns1");

            

        private static java.lang.String generatePrefix(java.lang.String namespace) {
            if(namespace.equals("http://www.adtec.com.cn")){
                return "ns1";
            }
            return org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
        }

        

                        /**
                        * field for ReqTranHeader
                        */

                        
                            protected FMT_SOAP_UTF8_ReqTranHeader localReqTranHeader ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_SOAP_UTF8_ReqTranHeader
                           */
                           public  FMT_SOAP_UTF8_ReqTranHeader getReqTranHeader(){
                               return localReqTranHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param ReqTranHeader
                               */
                               public void setReqTranHeader(FMT_SOAP_UTF8_ReqTranHeader param){
                            
                                            this.localReqTranHeader=param;
                                    

                               }
                            

                        /**
                        * field for RequestBody
                        */

                        
                            protected FMT_CRMS_SVR_S0110101000A202_IN localRequestBody ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_CRMS_SVR_S0110101000A202_IN
                           */
                           public  FMT_CRMS_SVR_S0110101000A202_IN getRequestBody(){
                               return localRequestBody;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequestBody
                               */
                               public void setRequestBody(FMT_CRMS_SVR_S0110101000A202_IN param){
                            
                                            this.localRequestBody=param;
                                    

                               }
                            

                        /**
                        * field for RequestHeader
                        */

                        
                            protected FMT_SOAP_UTF8_RequestHeader localRequestHeader ;
                        

                           /**
                           * Auto generated getter method
                           * @return FMT_SOAP_UTF8_RequestHeader
                           */
                           public  FMT_SOAP_UTF8_RequestHeader getRequestHeader(){
                               return localRequestHeader;
                           }

                           
                        
                            /**
                               * Auto generated setter method
                               * @param param RequestHeader
                               */
                               public void setRequestHeader(FMT_SOAP_UTF8_RequestHeader param){
                            
                                            this.localRequestHeader=param;
                                    

                               }
                            

     /**
     * isReaderMTOMAware
     * @return true if the reader supports MTOM
     */
   public static boolean isReaderMTOMAware(javax.xml.stream.XMLStreamReader reader) {
        boolean isReaderMTOMAware = false;
        
        try{
          isReaderMTOMAware = java.lang.Boolean.TRUE.equals(reader.getProperty(org.apache.axiom.om.OMConstants.IS_DATA_HANDLERS_AWARE));
        }catch(java.lang.IllegalArgumentException e){
          isReaderMTOMAware = false;
        }
        return isReaderMTOMAware;
   }
     
     
        /**
        *
        * @param parentQName
        * @param factory
        * @return org.apache.axiom.om.OMElement
        */
       public org.apache.axiom.om.OMElement getOMElement (
               final javax.xml.namespace.QName parentQName,
               final org.apache.axiom.om.OMFactory factory) throws org.apache.axis2.databinding.ADBException{


        
                org.apache.axiom.om.OMDataSource dataSource =
                       new org.apache.axis2.databinding.ADBDataSource(this,MY_QNAME){

                 public void serialize(org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
                       S0110101000A202.this.serialize(MY_QNAME,factory,xmlWriter);
                 }
               };
               return new org.apache.axiom.om.impl.llom.OMSourcedElementImpl(
               MY_QNAME,factory,dataSource);
            
       }



         public void serialize(final javax.xml.namespace.QName parentQName,
                               final org.apache.axiom.om.OMFactory factory,
                               org.apache.axis2.databinding.utils.writer.MTOMAwareXMLStreamWriter xmlWriter)
            throws javax.xml.stream.XMLStreamException, org.apache.axis2.databinding.ADBException{
            
                


                java.lang.String prefix = null;
                java.lang.String namespace = null;
                

                    prefix = parentQName.getPrefix();
                    namespace = parentQName.getNamespaceURI();

                    if (namespace != null) {
                        java.lang.String writerPrefix = xmlWriter.getPrefix(namespace);
                        if (writerPrefix != null) {
                            xmlWriter.writeStartElement(namespace, parentQName.getLocalPart());
                        } else {
                            if (prefix == null) {
                                prefix = generatePrefix(namespace);
                            }

                            xmlWriter.writeStartElement(prefix, parentQName.getLocalPart(), namespace);
                            xmlWriter.writeNamespace(prefix, namespace);
                            xmlWriter.setPrefix(prefix, namespace);
                        }
                    } else {
                        xmlWriter.writeStartElement(parentQName.getLocalPart());
                    }
                
                                            if (localReqTranHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("ReqTranHeader cannot be null!!");
                                            }
                                           localReqTranHeader.serialize(new javax.xml.namespace.QName("","ReqTranHeader"),
                                               factory,xmlWriter);
                                        
                                            if (localRequestBody==null){
                                                 throw new org.apache.axis2.databinding.ADBException("RequestBody cannot be null!!");
                                            }
                                           localRequestBody.serialize(new javax.xml.namespace.QName("","RequestBody"),
                                               factory,xmlWriter);
                                        
                                            if (localRequestHeader==null){
                                                 throw new org.apache.axis2.databinding.ADBException("RequestHeader cannot be null!!");
                                            }
                                           localRequestHeader.serialize(new javax.xml.namespace.QName("","RequestHeader"),
                                               factory,xmlWriter);
                                        
                    xmlWriter.writeEndElement();
               

        }

         /**
          * Util method to write an attribute with the ns prefix
          */
          private void writeAttribute(java.lang.String prefix,java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
              if (xmlWriter.getPrefix(namespace) == null) {
                       xmlWriter.writeNamespace(prefix, namespace);
                       xmlWriter.setPrefix(prefix, namespace);

              }

              xmlWriter.writeAttribute(namespace,attName,attValue);

         }

        /**
          * Util method to write an attribute without the ns prefix
          */
          private void writeAttribute(java.lang.String namespace,java.lang.String attName,
                                      java.lang.String attValue,javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException{
                if (namespace.equals(""))
              {
                  xmlWriter.writeAttribute(attName,attValue);
              }
              else
              {
                  registerPrefix(xmlWriter, namespace);
                  xmlWriter.writeAttribute(namespace,attName,attValue);
              }
          }


           /**
             * Util method to write an attribute without the ns prefix
             */
            private void writeQNameAttribute(java.lang.String namespace, java.lang.String attName,
                                             javax.xml.namespace.QName qname, javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

                java.lang.String attributeNamespace = qname.getNamespaceURI();
                java.lang.String attributePrefix = xmlWriter.getPrefix(attributeNamespace);
                if (attributePrefix == null) {
                    attributePrefix = registerPrefix(xmlWriter, attributeNamespace);
                }
                java.lang.String attributeValue;
                if (attributePrefix.trim().length() > 0) {
                    attributeValue = attributePrefix + ":" + qname.getLocalPart();
                } else {
                    attributeValue = qname.getLocalPart();
                }

                if (namespace.equals("")) {
                    xmlWriter.writeAttribute(attName, attributeValue);
                } else {
                    registerPrefix(xmlWriter, namespace);
                    xmlWriter.writeAttribute(namespace, attName, attributeValue);
                }
            }
        /**
         *  method to handle Qnames
         */

        private void writeQName(javax.xml.namespace.QName qname,
                                javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {
            java.lang.String namespaceURI = qname.getNamespaceURI();
            if (namespaceURI != null) {
                java.lang.String prefix = xmlWriter.getPrefix(namespaceURI);
                if (prefix == null) {
                    prefix = generatePrefix(namespaceURI);
                    xmlWriter.writeNamespace(prefix, namespaceURI);
                    xmlWriter.setPrefix(prefix,namespaceURI);
                }

                if (prefix.trim().length() > 0){
                    xmlWriter.writeCharacters(prefix + ":" + org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                } else {
                    // i.e this is the default namespace
                    xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
                }

            } else {
                xmlWriter.writeCharacters(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qname));
            }
        }

        private void writeQNames(javax.xml.namespace.QName[] qnames,
                                 javax.xml.stream.XMLStreamWriter xmlWriter) throws javax.xml.stream.XMLStreamException {

            if (qnames != null) {
                // we have to store this data until last moment since it is not possible to write any
                // namespace data after writing the charactor data
                java.lang.StringBuffer stringToWrite = new java.lang.StringBuffer();
                java.lang.String namespaceURI = null;
                java.lang.String prefix = null;

                for (int i = 0; i < qnames.length; i++) {
                    if (i > 0) {
                        stringToWrite.append(" ");
                    }
                    namespaceURI = qnames[i].getNamespaceURI();
                    if (namespaceURI != null) {
                        prefix = xmlWriter.getPrefix(namespaceURI);
                        if ((prefix == null) || (prefix.length() == 0)) {
                            prefix = generatePrefix(namespaceURI);
                            xmlWriter.writeNamespace(prefix, namespaceURI);
                            xmlWriter.setPrefix(prefix,namespaceURI);
                        }

                        if (prefix.trim().length() > 0){
                            stringToWrite.append(prefix).append(":").append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        } else {
                            stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                        }
                    } else {
                        stringToWrite.append(org.apache.axis2.databinding.utils.ConverterUtil.convertToString(qnames[i]));
                    }
                }
                xmlWriter.writeCharacters(stringToWrite.toString());
            }

        }


         /**
         * Register a namespace prefix
         */
         private java.lang.String registerPrefix(javax.xml.stream.XMLStreamWriter xmlWriter, java.lang.String namespace) throws javax.xml.stream.XMLStreamException {
                java.lang.String prefix = xmlWriter.getPrefix(namespace);

                if (prefix == null) {
                    prefix = generatePrefix(namespace);

                    while (xmlWriter.getNamespaceContext().getNamespaceURI(prefix) != null) {
                        prefix = org.apache.axis2.databinding.utils.BeanUtil.getUniquePrefix();
                    }

                    xmlWriter.writeNamespace(prefix, namespace);
                    xmlWriter.setPrefix(prefix, namespace);
                }

                return prefix;
            }


  
        /**
        * databinding method to get an XML representation of this object
        *
        */
        public javax.xml.stream.XMLStreamReader getPullParser(javax.xml.namespace.QName qName)
                    throws org.apache.axis2.databinding.ADBException{


        
                 java.util.ArrayList elementList = new java.util.ArrayList();
                 java.util.ArrayList attribList = new java.util.ArrayList();

                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "ReqTranHeader"));
                            
                            
                                    if (localReqTranHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("ReqTranHeader cannot be null!!");
                                    }
                                    elementList.add(localReqTranHeader);
                                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "RequestBody"));
                            
                            
                                    if (localRequestBody==null){
                                         throw new org.apache.axis2.databinding.ADBException("RequestBody cannot be null!!");
                                    }
                                    elementList.add(localRequestBody);
                                
                            elementList.add(new javax.xml.namespace.QName("",
                                                                      "RequestHeader"));
                            
                            
                                    if (localRequestHeader==null){
                                         throw new org.apache.axis2.databinding.ADBException("RequestHeader cannot be null!!");
                                    }
                                    elementList.add(localRequestHeader);
                                

                return new org.apache.axis2.databinding.utils.reader.ADBXMLStreamReaderImpl(qName, elementList.toArray(), attribList.toArray());
            
            

        }

  

     /**
      *  Factory class that keeps the parse method
      */
    public static class Factory{

        
        

        /**
        * static method to create the object
        * Precondition:  If this object is an element, the current or next start element starts this object and any intervening reader events are ignorable
        *                If this object is not an element, it is a complex type and the reader is at the event just after the outer start element
        * Postcondition: If this object is an element, the reader is positioned at its end element
        *                If this object is a complex type, the reader is positioned at the end element of its outer element
        */
        public static S0110101000A202 parse(javax.xml.stream.XMLStreamReader reader) throws java.lang.Exception{
            S0110101000A202 object =
                new S0110101000A202();

            int event;
            java.lang.String nillableValue = null;
            java.lang.String prefix ="";
            java.lang.String namespaceuri ="";
            try {
                
                while (!reader.isStartElement() && !reader.isEndElement())
                    reader.next();

                
                if (reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance","type")!=null){
                  java.lang.String fullTypeName = reader.getAttributeValue("http://www.w3.org/2001/XMLSchema-instance",
                        "type");
                  if (fullTypeName!=null){
                    java.lang.String nsPrefix = null;
                    if (fullTypeName.indexOf(":") > -1){
                        nsPrefix = fullTypeName.substring(0,fullTypeName.indexOf(":"));
                    }
                    nsPrefix = nsPrefix==null?"":nsPrefix;

                    java.lang.String type = fullTypeName.substring(fullTypeName.indexOf(":")+1);
                    
                            if (!"S0110101000A202".equals(type)){
                                //find namespace for the prefix
                                java.lang.String nsUri = reader.getNamespaceContext().getNamespaceURI(nsPrefix);
                                return (S0110101000A202)ExtensionMapper.getTypeObject(
                                     nsUri,type,reader);
                              }
                        

                  }

                }
                

                
                // Note all attributes that were handled. Used to differ normal attributes
                // from anyAttributes.
                java.util.Vector handledAttributes = new java.util.Vector();
                

                 
                    
                    reader.next();
                
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","ReqTranHeader").equals(reader.getName())){
                                
                                        object.setReqTranHeader(FMT_SOAP_UTF8_ReqTranHeader.Factory.parse(reader));
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","RequestBody").equals(reader.getName())){
                                
                                        object.setRequestBody(FMT_CRMS_SVR_S0110101000A202_IN.Factory.parse(reader));
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                            
                                    
                                    while (!reader.isStartElement() && !reader.isEndElement()) reader.next();
                                
                                    if (reader.isStartElement() && new javax.xml.namespace.QName("","RequestHeader").equals(reader.getName())){
                                
                                        object.setRequestHeader(FMT_SOAP_UTF8_RequestHeader.Factory.parse(reader));
                                      
                                        reader.next();
                                    
                              }  // End of if for expected property start element
                                
                                else{
                                    // A start element we are not expecting indicates an invalid parameter was passed
                                    throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                                }
                              
                            while (!reader.isStartElement() && !reader.isEndElement())
                                reader.next();
                            
                                if (reader.isStartElement())
                                // A start element we are not expecting indicates a trailing invalid property
                                throw new org.apache.axis2.databinding.ADBException("Unexpected subelement " + reader.getLocalName());
                            



            } catch (javax.xml.stream.XMLStreamException e) {
                throw new java.lang.Exception(e);
            }

            return object;
        }

        }//end of factory class

        

        }
           
          
            private  org.apache.axiom.om.OMElement  toOM(com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202 param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
            private  org.apache.axiom.om.OMElement  toOM(com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response param, boolean optimizeContent)
            throws org.apache.axis2.AxisFault {

            
                        try{
                             return param.getOMElement(com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response.MY_QNAME,
                                          org.apache.axiom.om.OMAbstractFactory.getOMFactory());
                        } catch(org.apache.axis2.databinding.ADBException e){
                            throw org.apache.axis2.AxisFault.makeFault(e);
                        }
                    

            }
        
                            
                            private  org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory, com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202 param, boolean optimizeContent)
                            throws org.apache.axis2.AxisFault{

                                 
                                        try{

                                                org.apache.axiom.soap.SOAPEnvelope emptyEnvelope = factory.getDefaultEnvelope();
                                                emptyEnvelope.getBody().addChild(param.getOMElement(com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202.MY_QNAME,factory));
                                                return emptyEnvelope;
                                            } catch(org.apache.axis2.databinding.ADBException e){
                                                throw org.apache.axis2.AxisFault.makeFault(e);
                                            }
                                    

                            }

                             
                             /* methods to provide back word compatibility */

                             


        /**
        *  get the default envelope
        */
        private org.apache.axiom.soap.SOAPEnvelope toEnvelope(org.apache.axiom.soap.SOAPFactory factory){
        return factory.getDefaultEnvelope();
        }


        private  java.lang.Object fromOM(
        org.apache.axiom.om.OMElement param,
        java.lang.Class type,
        java.util.Map extraNamespaces) throws org.apache.axis2.AxisFault{

        try {
        
                if (com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202.class.equals(type)){
                
                           return com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
                if (com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response.class.equals(type)){
                
                           return com.primeton.tsl.ecif.S0110101000A202ServiceStub.S0110101000A202Response.Factory.parse(param.getXMLStreamReaderWithoutCaching());
                    

                }
           
        } catch (java.lang.Exception e) {
        throw org.apache.axis2.AxisFault.makeFault(e);
        }
           return null;
        }



    
   }
   